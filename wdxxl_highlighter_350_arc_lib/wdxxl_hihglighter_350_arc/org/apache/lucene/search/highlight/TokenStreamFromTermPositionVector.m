//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: jar:file:wdxxl_lucene_350_highlighter.jar!org/apache/lucene/search/highlight/TokenStreamFromTermPositionVector.java
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "java/util/ArrayList.h"
#include "java/util/Comparator.h"
#include "java/util/Iterator.h"
#include "java/util/List.h"
#include "java/util/function/Function.h"
#include "java/util/function/ToDoubleFunction.h"
#include "java/util/function/ToIntFunction.h"
#include "java/util/function/ToLongFunction.h"
#include "org/apache/lucene/analysis/Token.h"
#include "org/apache/lucene/analysis/TokenStream.h"
#include "org/apache/lucene/analysis/tokenattributes/CharTermAttribute.h"
#include "org/apache/lucene/analysis/tokenattributes/OffsetAttribute.h"
#include "org/apache/lucene/analysis/tokenattributes/PositionIncrementAttribute.h"
#include "org/apache/lucene/index/TermPositionVector.h"
#include "org/apache/lucene/index/TermVectorOffsetInfo.h"
#include "org/apache/lucene/search/highlight/TokenStreamFromTermPositionVector.h"
#include "org/apache/lucene/util/CollectionUtil.h"

#pragma clang diagnostic ignored "-Wprotocol"

@interface OrgApacheLuceneSearchHighlightTokenStreamFromTermPositionVector () {
 @public
  id<JavaUtilList> positionedTokens_;
  id<JavaUtilIterator> tokensAtCurrentPosition_;
  id<OrgApacheLuceneAnalysisTokenattributesCharTermAttribute> termAttribute_;
  id<OrgApacheLuceneAnalysisTokenattributesPositionIncrementAttribute> positionIncrementAttribute_;
  id<OrgApacheLuceneAnalysisTokenattributesOffsetAttribute> offsetAttribute_;
}

@end

J2OBJC_FIELD_SETTER(OrgApacheLuceneSearchHighlightTokenStreamFromTermPositionVector, positionedTokens_, id<JavaUtilList>)
J2OBJC_FIELD_SETTER(OrgApacheLuceneSearchHighlightTokenStreamFromTermPositionVector, tokensAtCurrentPosition_, id<JavaUtilIterator>)
J2OBJC_FIELD_SETTER(OrgApacheLuceneSearchHighlightTokenStreamFromTermPositionVector, termAttribute_, id<OrgApacheLuceneAnalysisTokenattributesCharTermAttribute>)
J2OBJC_FIELD_SETTER(OrgApacheLuceneSearchHighlightTokenStreamFromTermPositionVector, positionIncrementAttribute_, id<OrgApacheLuceneAnalysisTokenattributesPositionIncrementAttribute>)
J2OBJC_FIELD_SETTER(OrgApacheLuceneSearchHighlightTokenStreamFromTermPositionVector, offsetAttribute_, id<OrgApacheLuceneAnalysisTokenattributesOffsetAttribute>)

inline id<JavaUtilComparator> OrgApacheLuceneSearchHighlightTokenStreamFromTermPositionVector_get_tokenComparator();
static id<JavaUtilComparator> OrgApacheLuceneSearchHighlightTokenStreamFromTermPositionVector_tokenComparator;
J2OBJC_STATIC_FIELD_OBJ_FINAL(OrgApacheLuceneSearchHighlightTokenStreamFromTermPositionVector, tokenComparator, id<JavaUtilComparator>)

@interface OrgApacheLuceneSearchHighlightTokenStreamFromTermPositionVector_1 : NSObject < JavaUtilComparator >

- (instancetype)init;

- (jint)compareWithId:(OrgApacheLuceneAnalysisToken *)o1
               withId:(OrgApacheLuceneAnalysisToken *)o2;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgApacheLuceneSearchHighlightTokenStreamFromTermPositionVector_1)

__attribute__((unused)) static void OrgApacheLuceneSearchHighlightTokenStreamFromTermPositionVector_1_init(OrgApacheLuceneSearchHighlightTokenStreamFromTermPositionVector_1 *self);

__attribute__((unused)) static OrgApacheLuceneSearchHighlightTokenStreamFromTermPositionVector_1 *new_OrgApacheLuceneSearchHighlightTokenStreamFromTermPositionVector_1_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static OrgApacheLuceneSearchHighlightTokenStreamFromTermPositionVector_1 *create_OrgApacheLuceneSearchHighlightTokenStreamFromTermPositionVector_1_init();

J2OBJC_INITIALIZED_DEFN(OrgApacheLuceneSearchHighlightTokenStreamFromTermPositionVector)

@implementation OrgApacheLuceneSearchHighlightTokenStreamFromTermPositionVector

- (instancetype)initWithOrgApacheLuceneIndexTermPositionVector:(id<OrgApacheLuceneIndexTermPositionVector>)termPositionVector {
  OrgApacheLuceneSearchHighlightTokenStreamFromTermPositionVector_initWithOrgApacheLuceneIndexTermPositionVector_(self, termPositionVector);
  return self;
}

- (jboolean)incrementToken {
  if ([((id<JavaUtilIterator>) nil_chk(self->tokensAtCurrentPosition_)) hasNext]) {
    OrgApacheLuceneAnalysisToken *next = [((id<JavaUtilIterator>) nil_chk(self->tokensAtCurrentPosition_)) next];
    [self clearAttributes];
    (void) [((id<OrgApacheLuceneAnalysisTokenattributesCharTermAttribute>) nil_chk([((id<OrgApacheLuceneAnalysisTokenattributesCharTermAttribute>) nil_chk(termAttribute_)) setEmpty])) appendWithOrgApacheLuceneAnalysisTokenattributesCharTermAttribute:next];
    [((id<OrgApacheLuceneAnalysisTokenattributesPositionIncrementAttribute>) nil_chk(positionIncrementAttribute_)) setPositionIncrementWithInt:[((OrgApacheLuceneAnalysisToken *) nil_chk(next)) getPositionIncrement]];
    [((id<OrgApacheLuceneAnalysisTokenattributesOffsetAttribute>) nil_chk(offsetAttribute_)) setOffsetWithInt:[next startOffset] withInt:[next endOffset]];
    return true;
  }
  return false;
}

- (void)reset {
  self->tokensAtCurrentPosition_ = [((id<JavaUtilList>) nil_chk(self->positionedTokens_)) iterator];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, -1, -1, 1, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, 1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithOrgApacheLuceneIndexTermPositionVector:);
  methods[1].selector = @selector(incrementToken);
  methods[2].selector = @selector(reset);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "positionedTokens_", "LJavaUtilList;", .constantValue.asLong = 0, 0x12, -1, -1, 2, -1 },
    { "tokensAtCurrentPosition_", "LJavaUtilIterator;", .constantValue.asLong = 0, 0x2, -1, -1, 3, -1 },
    { "termAttribute_", "LOrgApacheLuceneAnalysisTokenattributesCharTermAttribute;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "positionIncrementAttribute_", "LOrgApacheLuceneAnalysisTokenattributesPositionIncrementAttribute;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "offsetAttribute_", "LOrgApacheLuceneAnalysisTokenattributesOffsetAttribute;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "tokenComparator", "LJavaUtilComparator;", .constantValue.asLong = 0, 0x1a, -1, 4, 5, -1 },
  };
  static const void *ptrTable[] = { "LOrgApacheLuceneIndexTermPositionVector;", "LJavaIoIOException;", "Ljava/util/List<Lorg/apache/lucene/analysis/Token;>;", "Ljava/util/Iterator<Lorg/apache/lucene/analysis/Token;>;", &OrgApacheLuceneSearchHighlightTokenStreamFromTermPositionVector_tokenComparator, "Ljava/util/Comparator<Lorg/apache/lucene/analysis/Token;>;" };
  static const J2ObjcClassInfo _OrgApacheLuceneSearchHighlightTokenStreamFromTermPositionVector = { "TokenStreamFromTermPositionVector", "org.apache.lucene.search.highlight", ptrTable, methods, fields, 7, 0x11, 3, 6, -1, -1, -1, -1, -1 };
  return &_OrgApacheLuceneSearchHighlightTokenStreamFromTermPositionVector;
}

+ (void)initialize {
  if (self == [OrgApacheLuceneSearchHighlightTokenStreamFromTermPositionVector class]) {
    OrgApacheLuceneSearchHighlightTokenStreamFromTermPositionVector_tokenComparator = new_OrgApacheLuceneSearchHighlightTokenStreamFromTermPositionVector_1_init();
    J2OBJC_SET_INITIALIZED(OrgApacheLuceneSearchHighlightTokenStreamFromTermPositionVector)
  }
}

@end

void OrgApacheLuceneSearchHighlightTokenStreamFromTermPositionVector_initWithOrgApacheLuceneIndexTermPositionVector_(OrgApacheLuceneSearchHighlightTokenStreamFromTermPositionVector *self, id<OrgApacheLuceneIndexTermPositionVector> termPositionVector) {
  OrgApacheLuceneAnalysisTokenStream_init(self);
  self->positionedTokens_ = new_JavaUtilArrayList_init();
  self->termAttribute_ = ((id<OrgApacheLuceneAnalysisTokenattributesCharTermAttribute>) [self addAttributeWithIOSClass:OrgApacheLuceneAnalysisTokenattributesCharTermAttribute_class_()]);
  self->positionIncrementAttribute_ = ((id<OrgApacheLuceneAnalysisTokenattributesPositionIncrementAttribute>) [self addAttributeWithIOSClass:OrgApacheLuceneAnalysisTokenattributesPositionIncrementAttribute_class_()]);
  self->offsetAttribute_ = ((id<OrgApacheLuceneAnalysisTokenattributesOffsetAttribute>) [self addAttributeWithIOSClass:OrgApacheLuceneAnalysisTokenattributesOffsetAttribute_class_()]);
  IOSObjectArray *terms = [((id<OrgApacheLuceneIndexTermPositionVector>) nil_chk(termPositionVector)) getTerms];
  for (jint i = 0; i < ((IOSObjectArray *) nil_chk(terms))->size_; i++) {
    IOSObjectArray *offsets = [termPositionVector getOffsetsWithInt:i];
    IOSIntArray *termPositions = [termPositionVector getTermPositionsWithInt:i];
    for (jint j = 0; j < ((IOSIntArray *) nil_chk(termPositions))->size_; j++) {
      OrgApacheLuceneAnalysisToken *token;
      if (offsets != nil) {
        token = new_OrgApacheLuceneAnalysisToken_initWithCharArray_withInt_withInt_withInt_withInt_([((NSString *) nil_chk(IOSObjectArray_Get(terms, i))) java_toCharArray], 0, [((NSString *) nil_chk(IOSObjectArray_Get(terms, i))) java_length], [((OrgApacheLuceneIndexTermVectorOffsetInfo *) nil_chk(IOSObjectArray_Get(offsets, j))) getStartOffset], [((OrgApacheLuceneIndexTermVectorOffsetInfo *) nil_chk(IOSObjectArray_Get(offsets, j))) getEndOffset]);
      }
      else {
        token = new_OrgApacheLuceneAnalysisToken_init();
        (void) [((id<OrgApacheLuceneAnalysisTokenattributesCharTermAttribute>) nil_chk([token setEmpty])) appendWithNSString:IOSObjectArray_Get(terms, i)];
      }
      [token setPositionIncrementWithInt:IOSIntArray_Get(termPositions, j)];
      [self->positionedTokens_ addWithId:token];
    }
  }
  OrgApacheLuceneUtilCollectionUtil_mergeSortWithJavaUtilList_withJavaUtilComparator_(self->positionedTokens_, OrgApacheLuceneSearchHighlightTokenStreamFromTermPositionVector_tokenComparator);
  jint lastPosition = -1;
  for (OrgApacheLuceneAnalysisToken * __strong token in self->positionedTokens_) {
    jint thisPosition = [((OrgApacheLuceneAnalysisToken *) nil_chk(token)) getPositionIncrement];
    [token setPositionIncrementWithInt:thisPosition - lastPosition];
    lastPosition = thisPosition;
  }
  self->tokensAtCurrentPosition_ = [self->positionedTokens_ iterator];
}

OrgApacheLuceneSearchHighlightTokenStreamFromTermPositionVector *new_OrgApacheLuceneSearchHighlightTokenStreamFromTermPositionVector_initWithOrgApacheLuceneIndexTermPositionVector_(id<OrgApacheLuceneIndexTermPositionVector> termPositionVector) {
  J2OBJC_NEW_IMPL(OrgApacheLuceneSearchHighlightTokenStreamFromTermPositionVector, initWithOrgApacheLuceneIndexTermPositionVector_, termPositionVector)
}

OrgApacheLuceneSearchHighlightTokenStreamFromTermPositionVector *create_OrgApacheLuceneSearchHighlightTokenStreamFromTermPositionVector_initWithOrgApacheLuceneIndexTermPositionVector_(id<OrgApacheLuceneIndexTermPositionVector> termPositionVector) {
  J2OBJC_CREATE_IMPL(OrgApacheLuceneSearchHighlightTokenStreamFromTermPositionVector, initWithOrgApacheLuceneIndexTermPositionVector_, termPositionVector)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheLuceneSearchHighlightTokenStreamFromTermPositionVector)

@implementation OrgApacheLuceneSearchHighlightTokenStreamFromTermPositionVector_1

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  OrgApacheLuceneSearchHighlightTokenStreamFromTermPositionVector_1_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (jint)compareWithId:(OrgApacheLuceneAnalysisToken *)o1
               withId:(OrgApacheLuceneAnalysisToken *)o2 {
  return [((OrgApacheLuceneAnalysisToken *) nil_chk(o1)) getPositionIncrement] - [((OrgApacheLuceneAnalysisToken *) nil_chk(o2)) getPositionIncrement];
}

- (id<JavaUtilComparator>)reversed {
  return JavaUtilComparator_reversed(self);
}

- (id<JavaUtilComparator>)thenComparingWithJavaUtilComparator:(id<JavaUtilComparator>)arg0 {
  return JavaUtilComparator_thenComparingWithJavaUtilComparator_(self, arg0);
}

- (id<JavaUtilComparator>)thenComparingWithJavaUtilFunctionFunction:(id<JavaUtilFunctionFunction>)arg0
                                             withJavaUtilComparator:(id<JavaUtilComparator>)arg1 {
  return JavaUtilComparator_thenComparingWithJavaUtilFunctionFunction_withJavaUtilComparator_(self, arg0, arg1);
}

- (id<JavaUtilComparator>)thenComparingWithJavaUtilFunctionFunction:(id<JavaUtilFunctionFunction>)arg0 {
  return JavaUtilComparator_thenComparingWithJavaUtilFunctionFunction_(self, arg0);
}

- (id<JavaUtilComparator>)thenComparingIntWithJavaUtilFunctionToIntFunction:(id<JavaUtilFunctionToIntFunction>)arg0 {
  return JavaUtilComparator_thenComparingIntWithJavaUtilFunctionToIntFunction_(self, arg0);
}

- (id<JavaUtilComparator>)thenComparingLongWithJavaUtilFunctionToLongFunction:(id<JavaUtilFunctionToLongFunction>)arg0 {
  return JavaUtilComparator_thenComparingLongWithJavaUtilFunctionToLongFunction_(self, arg0);
}

- (id<JavaUtilComparator>)thenComparingDoubleWithJavaUtilFunctionToDoubleFunction:(id<JavaUtilFunctionToDoubleFunction>)arg0 {
  return JavaUtilComparator_thenComparingDoubleWithJavaUtilFunctionToDoubleFunction_(self, arg0);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x1, 0, 1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(compareWithId:withId:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "compare", "LOrgApacheLuceneAnalysisToken;LOrgApacheLuceneAnalysisToken;", "LOrgApacheLuceneSearchHighlightTokenStreamFromTermPositionVector;", "Ljava/lang/Object;Ljava/util/Comparator<Lorg/apache/lucene/analysis/Token;>;" };
  static const J2ObjcClassInfo _OrgApacheLuceneSearchHighlightTokenStreamFromTermPositionVector_1 = { "", "org.apache.lucene.search.highlight", ptrTable, methods, NULL, 7, 0x8018, 2, 0, 2, -1, -1, 3, -1 };
  return &_OrgApacheLuceneSearchHighlightTokenStreamFromTermPositionVector_1;
}

@end

void OrgApacheLuceneSearchHighlightTokenStreamFromTermPositionVector_1_init(OrgApacheLuceneSearchHighlightTokenStreamFromTermPositionVector_1 *self) {
  NSObject_init(self);
}

OrgApacheLuceneSearchHighlightTokenStreamFromTermPositionVector_1 *new_OrgApacheLuceneSearchHighlightTokenStreamFromTermPositionVector_1_init() {
  J2OBJC_NEW_IMPL(OrgApacheLuceneSearchHighlightTokenStreamFromTermPositionVector_1, init)
}

OrgApacheLuceneSearchHighlightTokenStreamFromTermPositionVector_1 *create_OrgApacheLuceneSearchHighlightTokenStreamFromTermPositionVector_1_init() {
  J2OBJC_CREATE_IMPL(OrgApacheLuceneSearchHighlightTokenStreamFromTermPositionVector_1, init)
}
