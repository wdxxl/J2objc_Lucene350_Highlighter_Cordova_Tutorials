//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: jar:file:wdxxl_lucene_350_highlighter.jar!org/apache/lucene/search/highlight/TokenSources.java
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "java/io/IOException.h"
#include "java/io/StringReader.h"
#include "java/lang/IllegalArgumentException.h"
#include "java/lang/RuntimeException.h"
#include "java/util/ArrayList.h"
#include "java/util/Comparator.h"
#include "java/util/function/Function.h"
#include "java/util/function/ToDoubleFunction.h"
#include "java/util/function/ToIntFunction.h"
#include "java/util/function/ToLongFunction.h"
#include "org/apache/lucene/analysis/Analyzer.h"
#include "org/apache/lucene/analysis/Token.h"
#include "org/apache/lucene/analysis/TokenStream.h"
#include "org/apache/lucene/analysis/tokenattributes/CharTermAttribute.h"
#include "org/apache/lucene/analysis/tokenattributes/OffsetAttribute.h"
#include "org/apache/lucene/analysis/tokenattributes/PositionIncrementAttribute.h"
#include "org/apache/lucene/document/Document.h"
#include "org/apache/lucene/index/IndexReader.h"
#include "org/apache/lucene/index/TermFreqVector.h"
#include "org/apache/lucene/index/TermPositionVector.h"
#include "org/apache/lucene/index/TermVectorOffsetInfo.h"
#include "org/apache/lucene/search/highlight/TokenSources.h"
#include "org/apache/lucene/search/highlight/TokenStreamFromTermPositionVector.h"
#include "org/apache/lucene/util/ArrayUtil.h"

#pragma clang diagnostic ignored "-Wprotocol"

@interface OrgApacheLuceneSearchHighlightTokenSources_1StoredTokenStream : OrgApacheLuceneAnalysisTokenStream {
 @public
  IOSObjectArray *tokens_;
  jint currentToken_;
  id<OrgApacheLuceneAnalysisTokenattributesCharTermAttribute> termAtt_;
  id<OrgApacheLuceneAnalysisTokenattributesOffsetAttribute> offsetAtt_;
  id<OrgApacheLuceneAnalysisTokenattributesPositionIncrementAttribute> posincAtt_;
}

- (instancetype)initWithOrgApacheLuceneAnalysisTokenArray:(IOSObjectArray *)tokens;

- (jboolean)incrementToken;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgApacheLuceneSearchHighlightTokenSources_1StoredTokenStream)

J2OBJC_FIELD_SETTER(OrgApacheLuceneSearchHighlightTokenSources_1StoredTokenStream, tokens_, IOSObjectArray *)
J2OBJC_FIELD_SETTER(OrgApacheLuceneSearchHighlightTokenSources_1StoredTokenStream, termAtt_, id<OrgApacheLuceneAnalysisTokenattributesCharTermAttribute>)
J2OBJC_FIELD_SETTER(OrgApacheLuceneSearchHighlightTokenSources_1StoredTokenStream, offsetAtt_, id<OrgApacheLuceneAnalysisTokenattributesOffsetAttribute>)
J2OBJC_FIELD_SETTER(OrgApacheLuceneSearchHighlightTokenSources_1StoredTokenStream, posincAtt_, id<OrgApacheLuceneAnalysisTokenattributesPositionIncrementAttribute>)

__attribute__((unused)) static void OrgApacheLuceneSearchHighlightTokenSources_1StoredTokenStream_initWithOrgApacheLuceneAnalysisTokenArray_(OrgApacheLuceneSearchHighlightTokenSources_1StoredTokenStream *self, IOSObjectArray *tokens);

__attribute__((unused)) static OrgApacheLuceneSearchHighlightTokenSources_1StoredTokenStream *new_OrgApacheLuceneSearchHighlightTokenSources_1StoredTokenStream_initWithOrgApacheLuceneAnalysisTokenArray_(IOSObjectArray *tokens) NS_RETURNS_RETAINED;

__attribute__((unused)) static OrgApacheLuceneSearchHighlightTokenSources_1StoredTokenStream *create_OrgApacheLuceneSearchHighlightTokenSources_1StoredTokenStream_initWithOrgApacheLuceneAnalysisTokenArray_(IOSObjectArray *tokens);

J2OBJC_TYPE_LITERAL_HEADER(OrgApacheLuceneSearchHighlightTokenSources_1StoredTokenStream)

@interface OrgApacheLuceneSearchHighlightTokenSources_1 : NSObject < JavaUtilComparator >

- (instancetype)init;

- (jint)compareWithId:(OrgApacheLuceneAnalysisToken *)t1
               withId:(OrgApacheLuceneAnalysisToken *)t2;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgApacheLuceneSearchHighlightTokenSources_1)

__attribute__((unused)) static void OrgApacheLuceneSearchHighlightTokenSources_1_init(OrgApacheLuceneSearchHighlightTokenSources_1 *self);

__attribute__((unused)) static OrgApacheLuceneSearchHighlightTokenSources_1 *new_OrgApacheLuceneSearchHighlightTokenSources_1_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static OrgApacheLuceneSearchHighlightTokenSources_1 *create_OrgApacheLuceneSearchHighlightTokenSources_1_init();

@implementation OrgApacheLuceneSearchHighlightTokenSources

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  OrgApacheLuceneSearchHighlightTokenSources_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (OrgApacheLuceneAnalysisTokenStream *)getAnyTokenStreamWithOrgApacheLuceneIndexIndexReader:(OrgApacheLuceneIndexIndexReader *)reader
                                                                                     withInt:(jint)docId
                                                                                withNSString:(NSString *)field
                                                         withOrgApacheLuceneDocumentDocument:(OrgApacheLuceneDocumentDocument *)doc
                                                         withOrgApacheLuceneAnalysisAnalyzer:(OrgApacheLuceneAnalysisAnalyzer *)analyzer {
  return OrgApacheLuceneSearchHighlightTokenSources_getAnyTokenStreamWithOrgApacheLuceneIndexIndexReader_withInt_withNSString_withOrgApacheLuceneDocumentDocument_withOrgApacheLuceneAnalysisAnalyzer_(reader, docId, field, doc, analyzer);
}

+ (OrgApacheLuceneAnalysisTokenStream *)getAnyTokenStreamWithOrgApacheLuceneIndexIndexReader:(OrgApacheLuceneIndexIndexReader *)reader
                                                                                     withInt:(jint)docId
                                                                                withNSString:(NSString *)field
                                                         withOrgApacheLuceneAnalysisAnalyzer:(OrgApacheLuceneAnalysisAnalyzer *)analyzer {
  return OrgApacheLuceneSearchHighlightTokenSources_getAnyTokenStreamWithOrgApacheLuceneIndexIndexReader_withInt_withNSString_withOrgApacheLuceneAnalysisAnalyzer_(reader, docId, field, analyzer);
}

+ (OrgApacheLuceneAnalysisTokenStream *)getTokenStreamWithOrgApacheLuceneIndexTermPositionVector:(id<OrgApacheLuceneIndexTermPositionVector>)tpv {
  return OrgApacheLuceneSearchHighlightTokenSources_getTokenStreamWithOrgApacheLuceneIndexTermPositionVector_(tpv);
}

+ (OrgApacheLuceneAnalysisTokenStream *)getTokenStreamWithOrgApacheLuceneIndexTermPositionVector:(id<OrgApacheLuceneIndexTermPositionVector>)tpv
                                                                                     withBoolean:(jboolean)tokenPositionsGuaranteedContiguous {
  return OrgApacheLuceneSearchHighlightTokenSources_getTokenStreamWithOrgApacheLuceneIndexTermPositionVector_withBoolean_(tpv, tokenPositionsGuaranteedContiguous);
}

+ (OrgApacheLuceneAnalysisTokenStream *)getTokenStreamWithOrgApacheLuceneIndexIndexReader:(OrgApacheLuceneIndexIndexReader *)reader
                                                                                  withInt:(jint)docId
                                                                             withNSString:(NSString *)field {
  return OrgApacheLuceneSearchHighlightTokenSources_getTokenStreamWithOrgApacheLuceneIndexIndexReader_withInt_withNSString_(reader, docId, field);
}

+ (OrgApacheLuceneAnalysisTokenStream *)getTokenStreamWithOrgApacheLuceneIndexIndexReader:(OrgApacheLuceneIndexIndexReader *)reader
                                                                                  withInt:(jint)docId
                                                                             withNSString:(NSString *)field
                                                      withOrgApacheLuceneAnalysisAnalyzer:(OrgApacheLuceneAnalysisAnalyzer *)analyzer {
  return OrgApacheLuceneSearchHighlightTokenSources_getTokenStreamWithOrgApacheLuceneIndexIndexReader_withInt_withNSString_withOrgApacheLuceneAnalysisAnalyzer_(reader, docId, field, analyzer);
}

+ (OrgApacheLuceneAnalysisTokenStream *)getTokenStreamWithOrgApacheLuceneDocumentDocument:(OrgApacheLuceneDocumentDocument *)doc
                                                                             withNSString:(NSString *)field
                                                      withOrgApacheLuceneAnalysisAnalyzer:(OrgApacheLuceneAnalysisAnalyzer *)analyzer {
  return OrgApacheLuceneSearchHighlightTokenSources_getTokenStreamWithOrgApacheLuceneDocumentDocument_withNSString_withOrgApacheLuceneAnalysisAnalyzer_(doc, field, analyzer);
}

+ (OrgApacheLuceneAnalysisTokenStream *)getTokenStreamWithNSString:(NSString *)field
                                                      withNSString:(NSString *)contents
                               withOrgApacheLuceneAnalysisAnalyzer:(OrgApacheLuceneAnalysisAnalyzer *)analyzer {
  return OrgApacheLuceneSearchHighlightTokenSources_getTokenStreamWithNSString_withNSString_withOrgApacheLuceneAnalysisAnalyzer_(field, contents, analyzer);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgApacheLuceneAnalysisTokenStream;", 0x9, 0, 1, 2, -1, -1, -1 },
    { NULL, "LOrgApacheLuceneAnalysisTokenStream;", 0x9, 0, 3, 2, -1, -1, -1 },
    { NULL, "LOrgApacheLuceneAnalysisTokenStream;", 0x9, 4, 5, -1, -1, -1, -1 },
    { NULL, "LOrgApacheLuceneAnalysisTokenStream;", 0x9, 4, 6, -1, -1, -1, -1 },
    { NULL, "LOrgApacheLuceneAnalysisTokenStream;", 0x9, 4, 7, 2, -1, -1, -1 },
    { NULL, "LOrgApacheLuceneAnalysisTokenStream;", 0x9, 4, 3, 2, -1, -1, -1 },
    { NULL, "LOrgApacheLuceneAnalysisTokenStream;", 0x9, 4, 8, -1, -1, -1, -1 },
    { NULL, "LOrgApacheLuceneAnalysisTokenStream;", 0x9, 4, 9, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(getAnyTokenStreamWithOrgApacheLuceneIndexIndexReader:withInt:withNSString:withOrgApacheLuceneDocumentDocument:withOrgApacheLuceneAnalysisAnalyzer:);
  methods[2].selector = @selector(getAnyTokenStreamWithOrgApacheLuceneIndexIndexReader:withInt:withNSString:withOrgApacheLuceneAnalysisAnalyzer:);
  methods[3].selector = @selector(getTokenStreamWithOrgApacheLuceneIndexTermPositionVector:);
  methods[4].selector = @selector(getTokenStreamWithOrgApacheLuceneIndexTermPositionVector:withBoolean:);
  methods[5].selector = @selector(getTokenStreamWithOrgApacheLuceneIndexIndexReader:withInt:withNSString:);
  methods[6].selector = @selector(getTokenStreamWithOrgApacheLuceneIndexIndexReader:withInt:withNSString:withOrgApacheLuceneAnalysisAnalyzer:);
  methods[7].selector = @selector(getTokenStreamWithOrgApacheLuceneDocumentDocument:withNSString:withOrgApacheLuceneAnalysisAnalyzer:);
  methods[8].selector = @selector(getTokenStreamWithNSString:withNSString:withOrgApacheLuceneAnalysisAnalyzer:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "getAnyTokenStream", "LOrgApacheLuceneIndexIndexReader;ILNSString;LOrgApacheLuceneDocumentDocument;LOrgApacheLuceneAnalysisAnalyzer;", "LJavaIoIOException;", "LOrgApacheLuceneIndexIndexReader;ILNSString;LOrgApacheLuceneAnalysisAnalyzer;", "getTokenStream", "LOrgApacheLuceneIndexTermPositionVector;", "LOrgApacheLuceneIndexTermPositionVector;Z", "LOrgApacheLuceneIndexIndexReader;ILNSString;", "LOrgApacheLuceneDocumentDocument;LNSString;LOrgApacheLuceneAnalysisAnalyzer;", "LNSString;LNSString;LOrgApacheLuceneAnalysisAnalyzer;" };
  static const J2ObjcClassInfo _OrgApacheLuceneSearchHighlightTokenSources = { "TokenSources", "org.apache.lucene.search.highlight", ptrTable, methods, NULL, 7, 0x1, 9, 0, -1, -1, -1, -1, -1 };
  return &_OrgApacheLuceneSearchHighlightTokenSources;
}

@end

void OrgApacheLuceneSearchHighlightTokenSources_init(OrgApacheLuceneSearchHighlightTokenSources *self) {
  NSObject_init(self);
}

OrgApacheLuceneSearchHighlightTokenSources *new_OrgApacheLuceneSearchHighlightTokenSources_init() {
  J2OBJC_NEW_IMPL(OrgApacheLuceneSearchHighlightTokenSources, init)
}

OrgApacheLuceneSearchHighlightTokenSources *create_OrgApacheLuceneSearchHighlightTokenSources_init() {
  J2OBJC_CREATE_IMPL(OrgApacheLuceneSearchHighlightTokenSources, init)
}

OrgApacheLuceneAnalysisTokenStream *OrgApacheLuceneSearchHighlightTokenSources_getAnyTokenStreamWithOrgApacheLuceneIndexIndexReader_withInt_withNSString_withOrgApacheLuceneDocumentDocument_withOrgApacheLuceneAnalysisAnalyzer_(OrgApacheLuceneIndexIndexReader *reader, jint docId, NSString *field, OrgApacheLuceneDocumentDocument *doc, OrgApacheLuceneAnalysisAnalyzer *analyzer) {
  OrgApacheLuceneSearchHighlightTokenSources_initialize();
  OrgApacheLuceneAnalysisTokenStream *ts = nil;
  id<OrgApacheLuceneIndexTermFreqVector> tfv = [((OrgApacheLuceneIndexIndexReader *) nil_chk(reader)) getTermFreqVectorWithInt:docId withNSString:field];
  if (tfv != nil) {
    if ([OrgApacheLuceneIndexTermPositionVector_class_() isInstance:tfv]) {
      ts = OrgApacheLuceneSearchHighlightTokenSources_getTokenStreamWithOrgApacheLuceneIndexTermPositionVector_((id<OrgApacheLuceneIndexTermPositionVector>) cast_check(tfv, OrgApacheLuceneIndexTermPositionVector_class_()));
    }
  }
  if (ts == nil) {
    ts = OrgApacheLuceneSearchHighlightTokenSources_getTokenStreamWithOrgApacheLuceneDocumentDocument_withNSString_withOrgApacheLuceneAnalysisAnalyzer_(doc, field, analyzer);
  }
  return ts;
}

OrgApacheLuceneAnalysisTokenStream *OrgApacheLuceneSearchHighlightTokenSources_getAnyTokenStreamWithOrgApacheLuceneIndexIndexReader_withInt_withNSString_withOrgApacheLuceneAnalysisAnalyzer_(OrgApacheLuceneIndexIndexReader *reader, jint docId, NSString *field, OrgApacheLuceneAnalysisAnalyzer *analyzer) {
  OrgApacheLuceneSearchHighlightTokenSources_initialize();
  OrgApacheLuceneAnalysisTokenStream *ts = nil;
  id<OrgApacheLuceneIndexTermFreqVector> tfv = [((OrgApacheLuceneIndexIndexReader *) nil_chk(reader)) getTermFreqVectorWithInt:docId withNSString:field];
  if (tfv != nil) {
    if ([OrgApacheLuceneIndexTermPositionVector_class_() isInstance:tfv]) {
      ts = OrgApacheLuceneSearchHighlightTokenSources_getTokenStreamWithOrgApacheLuceneIndexTermPositionVector_((id<OrgApacheLuceneIndexTermPositionVector>) cast_check(tfv, OrgApacheLuceneIndexTermPositionVector_class_()));
    }
  }
  if (ts == nil) {
    ts = OrgApacheLuceneSearchHighlightTokenSources_getTokenStreamWithOrgApacheLuceneIndexIndexReader_withInt_withNSString_withOrgApacheLuceneAnalysisAnalyzer_(reader, docId, field, analyzer);
  }
  return ts;
}

OrgApacheLuceneAnalysisTokenStream *OrgApacheLuceneSearchHighlightTokenSources_getTokenStreamWithOrgApacheLuceneIndexTermPositionVector_(id<OrgApacheLuceneIndexTermPositionVector> tpv) {
  OrgApacheLuceneSearchHighlightTokenSources_initialize();
  return OrgApacheLuceneSearchHighlightTokenSources_getTokenStreamWithOrgApacheLuceneIndexTermPositionVector_withBoolean_(tpv, false);
}

OrgApacheLuceneAnalysisTokenStream *OrgApacheLuceneSearchHighlightTokenSources_getTokenStreamWithOrgApacheLuceneIndexTermPositionVector_withBoolean_(id<OrgApacheLuceneIndexTermPositionVector> tpv, jboolean tokenPositionsGuaranteedContiguous) {
  OrgApacheLuceneSearchHighlightTokenSources_initialize();
  if (!tokenPositionsGuaranteedContiguous && [((id<OrgApacheLuceneIndexTermPositionVector>) nil_chk(tpv)) getTermPositionsWithInt:0] != nil) {
    return new_OrgApacheLuceneSearchHighlightTokenStreamFromTermPositionVector_initWithOrgApacheLuceneIndexTermPositionVector_(tpv);
  }
  IOSObjectArray *terms = [((id<OrgApacheLuceneIndexTermPositionVector>) nil_chk(tpv)) getTerms];
  IOSIntArray *freq = [tpv getTermFrequencies];
  jint totalTokens = 0;
  for (jint t = 0; t < ((IOSIntArray *) nil_chk(freq))->size_; t++) {
    totalTokens += IOSIntArray_Get(freq, t);
  }
  IOSObjectArray *tokensInOriginalOrder = [IOSObjectArray newArrayWithLength:totalTokens type:OrgApacheLuceneAnalysisToken_class_()];
  JavaUtilArrayList *unsortedTokens = nil;
  for (jint t = 0; t < freq->size_; t++) {
    IOSObjectArray *offsets = [tpv getOffsetsWithInt:t];
    if (offsets == nil) {
      @throw new_JavaLangIllegalArgumentException_initWithNSString_(@"Required TermVector Offset information was not found");
    }
    IOSIntArray *pos = nil;
    if (tokenPositionsGuaranteedContiguous) {
      pos = [tpv getTermPositionsWithInt:t];
    }
    if (pos == nil) {
      if (unsortedTokens == nil) {
        unsortedTokens = new_JavaUtilArrayList_init();
      }
      for (jint tp = 0; tp < offsets->size_; tp++) {
        OrgApacheLuceneAnalysisToken *token = new_OrgApacheLuceneAnalysisToken_initWithNSString_withInt_withInt_(IOSObjectArray_Get(nil_chk(terms), t), [((OrgApacheLuceneIndexTermVectorOffsetInfo *) nil_chk(IOSObjectArray_Get(offsets, tp))) getStartOffset], [((OrgApacheLuceneIndexTermVectorOffsetInfo *) nil_chk(IOSObjectArray_Get(offsets, tp))) getEndOffset]);
        [unsortedTokens addWithId:token];
      }
    }
    else {
      for (jint tp = 0; tp < pos->size_; tp++) {
        OrgApacheLuceneAnalysisToken *token = new_OrgApacheLuceneAnalysisToken_initWithNSString_withInt_withInt_(IOSObjectArray_Get(nil_chk(terms), t), [((OrgApacheLuceneIndexTermVectorOffsetInfo *) nil_chk(IOSObjectArray_Get(offsets, tp))) getStartOffset], [((OrgApacheLuceneIndexTermVectorOffsetInfo *) nil_chk(IOSObjectArray_Get(offsets, tp))) getEndOffset]);
        (void) IOSObjectArray_Set(tokensInOriginalOrder, IOSIntArray_Get(pos, tp), token);
      }
    }
  }
  if (unsortedTokens != nil) {
    tokensInOriginalOrder = [unsortedTokens toArrayWithNSObjectArray:[IOSObjectArray newArrayWithLength:[unsortedTokens size] type:OrgApacheLuceneAnalysisToken_class_()]];
    OrgApacheLuceneUtilArrayUtil_mergeSortWithNSObjectArray_withJavaUtilComparator_(tokensInOriginalOrder, new_OrgApacheLuceneSearchHighlightTokenSources_1_init());
  }
  return new_OrgApacheLuceneSearchHighlightTokenSources_1StoredTokenStream_initWithOrgApacheLuceneAnalysisTokenArray_(tokensInOriginalOrder);
}

OrgApacheLuceneAnalysisTokenStream *OrgApacheLuceneSearchHighlightTokenSources_getTokenStreamWithOrgApacheLuceneIndexIndexReader_withInt_withNSString_(OrgApacheLuceneIndexIndexReader *reader, jint docId, NSString *field) {
  OrgApacheLuceneSearchHighlightTokenSources_initialize();
  id<OrgApacheLuceneIndexTermFreqVector> tfv = [((OrgApacheLuceneIndexIndexReader *) nil_chk(reader)) getTermFreqVectorWithInt:docId withNSString:field];
  if (tfv == nil) {
    @throw new_JavaLangIllegalArgumentException_initWithNSString_(JreStrcat("$$I$", field, @" in doc #", docId, @"does not have any term position data stored"));
  }
  if ([OrgApacheLuceneIndexTermPositionVector_class_() isInstance:tfv]) {
    id<OrgApacheLuceneIndexTermPositionVector> tpv = (id<OrgApacheLuceneIndexTermPositionVector>) cast_check([reader getTermFreqVectorWithInt:docId withNSString:field], OrgApacheLuceneIndexTermPositionVector_class_());
    return OrgApacheLuceneSearchHighlightTokenSources_getTokenStreamWithOrgApacheLuceneIndexTermPositionVector_(tpv);
  }
  @throw new_JavaLangIllegalArgumentException_initWithNSString_(JreStrcat("$$I$", field, @" in doc #", docId, @"does not have any term position data stored"));
}

OrgApacheLuceneAnalysisTokenStream *OrgApacheLuceneSearchHighlightTokenSources_getTokenStreamWithOrgApacheLuceneIndexIndexReader_withInt_withNSString_withOrgApacheLuceneAnalysisAnalyzer_(OrgApacheLuceneIndexIndexReader *reader, jint docId, NSString *field, OrgApacheLuceneAnalysisAnalyzer *analyzer) {
  OrgApacheLuceneSearchHighlightTokenSources_initialize();
  OrgApacheLuceneDocumentDocument *doc = [((OrgApacheLuceneIndexIndexReader *) nil_chk(reader)) documentWithInt:docId];
  return OrgApacheLuceneSearchHighlightTokenSources_getTokenStreamWithOrgApacheLuceneDocumentDocument_withNSString_withOrgApacheLuceneAnalysisAnalyzer_(doc, field, analyzer);
}

OrgApacheLuceneAnalysisTokenStream *OrgApacheLuceneSearchHighlightTokenSources_getTokenStreamWithOrgApacheLuceneDocumentDocument_withNSString_withOrgApacheLuceneAnalysisAnalyzer_(OrgApacheLuceneDocumentDocument *doc, NSString *field, OrgApacheLuceneAnalysisAnalyzer *analyzer) {
  OrgApacheLuceneSearchHighlightTokenSources_initialize();
  NSString *contents = [((OrgApacheLuceneDocumentDocument *) nil_chk(doc)) getWithNSString:field];
  if (contents == nil) {
    @throw new_JavaLangIllegalArgumentException_initWithNSString_(JreStrcat("$$$", @"Field ", field, @" in document is not stored and cannot be analyzed"));
  }
  return OrgApacheLuceneSearchHighlightTokenSources_getTokenStreamWithNSString_withNSString_withOrgApacheLuceneAnalysisAnalyzer_(field, contents, analyzer);
}

OrgApacheLuceneAnalysisTokenStream *OrgApacheLuceneSearchHighlightTokenSources_getTokenStreamWithNSString_withNSString_withOrgApacheLuceneAnalysisAnalyzer_(NSString *field, NSString *contents, OrgApacheLuceneAnalysisAnalyzer *analyzer) {
  OrgApacheLuceneSearchHighlightTokenSources_initialize();
  @try {
    return [((OrgApacheLuceneAnalysisAnalyzer *) nil_chk(analyzer)) reusableTokenStreamWithNSString:field withJavaIoReader:new_JavaIoStringReader_initWithNSString_(contents)];
  }
  @catch (JavaIoIOException *ex) {
    @throw new_JavaLangRuntimeException_initWithNSException_(ex);
  }
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheLuceneSearchHighlightTokenSources)

@implementation OrgApacheLuceneSearchHighlightTokenSources_1StoredTokenStream

- (instancetype)initWithOrgApacheLuceneAnalysisTokenArray:(IOSObjectArray *)tokens {
  OrgApacheLuceneSearchHighlightTokenSources_1StoredTokenStream_initWithOrgApacheLuceneAnalysisTokenArray_(self, tokens);
  return self;
}

- (jboolean)incrementToken {
  if (currentToken_ >= ((IOSObjectArray *) nil_chk(tokens_))->size_) {
    return false;
  }
  OrgApacheLuceneAnalysisToken *token = IOSObjectArray_Get(tokens_, currentToken_++);
  [self clearAttributes];
  (void) [((id<OrgApacheLuceneAnalysisTokenattributesCharTermAttribute>) nil_chk([((id<OrgApacheLuceneAnalysisTokenattributesCharTermAttribute>) nil_chk(termAtt_)) setEmpty])) appendWithOrgApacheLuceneAnalysisTokenattributesCharTermAttribute:token];
  [((id<OrgApacheLuceneAnalysisTokenattributesOffsetAttribute>) nil_chk(offsetAtt_)) setOffsetWithInt:[((OrgApacheLuceneAnalysisToken *) nil_chk(token)) startOffset] withInt:[token endOffset]];
  [((id<OrgApacheLuceneAnalysisTokenattributesPositionIncrementAttribute>) nil_chk(posincAtt_)) setPositionIncrementWithInt:currentToken_ <= 1 || [((OrgApacheLuceneAnalysisToken *) nil_chk(IOSObjectArray_Get(nil_chk(tokens_), currentToken_ - 1))) startOffset] > [((OrgApacheLuceneAnalysisToken *) nil_chk(IOSObjectArray_Get(nil_chk(tokens_), currentToken_ - 2))) startOffset] ? 1 : 0];
  return true;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, 0, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, -1, -1, 1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithOrgApacheLuceneAnalysisTokenArray:);
  methods[1].selector = @selector(incrementToken);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "tokens_", "[LOrgApacheLuceneAnalysisToken;", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
    { "currentToken_", "I", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
    { "termAtt_", "LOrgApacheLuceneAnalysisTokenattributesCharTermAttribute;", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
    { "offsetAtt_", "LOrgApacheLuceneAnalysisTokenattributesOffsetAttribute;", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
    { "posincAtt_", "LOrgApacheLuceneAnalysisTokenattributesPositionIncrementAttribute;", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "[LOrgApacheLuceneAnalysisToken;", "LJavaIoIOException;", "LOrgApacheLuceneSearchHighlightTokenSources;", "getTokenStreamWithOrgApacheLuceneIndexTermPositionVector:withBoolean:" };
  static const J2ObjcClassInfo _OrgApacheLuceneSearchHighlightTokenSources_1StoredTokenStream = { "StoredTokenStream", "org.apache.lucene.search.highlight", ptrTable, methods, fields, 7, 0x10, 2, 5, 2, -1, 3, -1, -1 };
  return &_OrgApacheLuceneSearchHighlightTokenSources_1StoredTokenStream;
}

@end

void OrgApacheLuceneSearchHighlightTokenSources_1StoredTokenStream_initWithOrgApacheLuceneAnalysisTokenArray_(OrgApacheLuceneSearchHighlightTokenSources_1StoredTokenStream *self, IOSObjectArray *tokens) {
  OrgApacheLuceneAnalysisTokenStream_init(self);
  self->currentToken_ = 0;
  self->tokens_ = tokens;
  self->termAtt_ = ((id<OrgApacheLuceneAnalysisTokenattributesCharTermAttribute>) [self addAttributeWithIOSClass:OrgApacheLuceneAnalysisTokenattributesCharTermAttribute_class_()]);
  self->offsetAtt_ = ((id<OrgApacheLuceneAnalysisTokenattributesOffsetAttribute>) [self addAttributeWithIOSClass:OrgApacheLuceneAnalysisTokenattributesOffsetAttribute_class_()]);
  self->posincAtt_ = ((id<OrgApacheLuceneAnalysisTokenattributesPositionIncrementAttribute>) [self addAttributeWithIOSClass:OrgApacheLuceneAnalysisTokenattributesPositionIncrementAttribute_class_()]);
}

OrgApacheLuceneSearchHighlightTokenSources_1StoredTokenStream *new_OrgApacheLuceneSearchHighlightTokenSources_1StoredTokenStream_initWithOrgApacheLuceneAnalysisTokenArray_(IOSObjectArray *tokens) {
  J2OBJC_NEW_IMPL(OrgApacheLuceneSearchHighlightTokenSources_1StoredTokenStream, initWithOrgApacheLuceneAnalysisTokenArray_, tokens)
}

OrgApacheLuceneSearchHighlightTokenSources_1StoredTokenStream *create_OrgApacheLuceneSearchHighlightTokenSources_1StoredTokenStream_initWithOrgApacheLuceneAnalysisTokenArray_(IOSObjectArray *tokens) {
  J2OBJC_CREATE_IMPL(OrgApacheLuceneSearchHighlightTokenSources_1StoredTokenStream, initWithOrgApacheLuceneAnalysisTokenArray_, tokens)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheLuceneSearchHighlightTokenSources_1StoredTokenStream)

@implementation OrgApacheLuceneSearchHighlightTokenSources_1

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  OrgApacheLuceneSearchHighlightTokenSources_1_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (jint)compareWithId:(OrgApacheLuceneAnalysisToken *)t1
               withId:(OrgApacheLuceneAnalysisToken *)t2 {
  if ([((OrgApacheLuceneAnalysisToken *) nil_chk(t1)) startOffset] == [((OrgApacheLuceneAnalysisToken *) nil_chk(t2)) startOffset]) return [t1 endOffset] - [t2 endOffset];
  else return [t1 startOffset] - [t2 startOffset];
}

- (id<JavaUtilComparator>)reversed {
  return JavaUtilComparator_reversed(self);
}

- (id<JavaUtilComparator>)thenComparingWithJavaUtilComparator:(id<JavaUtilComparator>)arg0 {
  return JavaUtilComparator_thenComparingWithJavaUtilComparator_(self, arg0);
}

- (id<JavaUtilComparator>)thenComparingWithJavaUtilFunctionFunction:(id<JavaUtilFunctionFunction>)arg0
                                             withJavaUtilComparator:(id<JavaUtilComparator>)arg1 {
  return JavaUtilComparator_thenComparingWithJavaUtilFunctionFunction_withJavaUtilComparator_(self, arg0, arg1);
}

- (id<JavaUtilComparator>)thenComparingWithJavaUtilFunctionFunction:(id<JavaUtilFunctionFunction>)arg0 {
  return JavaUtilComparator_thenComparingWithJavaUtilFunctionFunction_(self, arg0);
}

- (id<JavaUtilComparator>)thenComparingIntWithJavaUtilFunctionToIntFunction:(id<JavaUtilFunctionToIntFunction>)arg0 {
  return JavaUtilComparator_thenComparingIntWithJavaUtilFunctionToIntFunction_(self, arg0);
}

- (id<JavaUtilComparator>)thenComparingLongWithJavaUtilFunctionToLongFunction:(id<JavaUtilFunctionToLongFunction>)arg0 {
  return JavaUtilComparator_thenComparingLongWithJavaUtilFunctionToLongFunction_(self, arg0);
}

- (id<JavaUtilComparator>)thenComparingDoubleWithJavaUtilFunctionToDoubleFunction:(id<JavaUtilFunctionToDoubleFunction>)arg0 {
  return JavaUtilComparator_thenComparingDoubleWithJavaUtilFunctionToDoubleFunction_(self, arg0);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x1, 0, 1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(compareWithId:withId:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "compare", "LOrgApacheLuceneAnalysisToken;LOrgApacheLuceneAnalysisToken;", "LOrgApacheLuceneSearchHighlightTokenSources;", "getTokenStreamWithOrgApacheLuceneIndexTermPositionVector:withBoolean:", "Ljava/lang/Object;Ljava/util/Comparator<Lorg/apache/lucene/analysis/Token;>;" };
  static const J2ObjcClassInfo _OrgApacheLuceneSearchHighlightTokenSources_1 = { "", "org.apache.lucene.search.highlight", ptrTable, methods, NULL, 7, 0x8018, 2, 0, 2, -1, 3, 4, -1 };
  return &_OrgApacheLuceneSearchHighlightTokenSources_1;
}

@end

void OrgApacheLuceneSearchHighlightTokenSources_1_init(OrgApacheLuceneSearchHighlightTokenSources_1 *self) {
  NSObject_init(self);
}

OrgApacheLuceneSearchHighlightTokenSources_1 *new_OrgApacheLuceneSearchHighlightTokenSources_1_init() {
  J2OBJC_NEW_IMPL(OrgApacheLuceneSearchHighlightTokenSources_1, init)
}

OrgApacheLuceneSearchHighlightTokenSources_1 *create_OrgApacheLuceneSearchHighlightTokenSources_1_init() {
  J2OBJC_CREATE_IMPL(OrgApacheLuceneSearchHighlightTokenSources_1, init)
}
