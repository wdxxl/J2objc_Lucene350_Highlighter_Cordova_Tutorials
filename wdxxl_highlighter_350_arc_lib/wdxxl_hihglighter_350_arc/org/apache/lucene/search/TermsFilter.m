//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: jar:file:wdxxl_lucene_350_highlighter.jar!org/apache/lucene/search/TermsFilter.java
//

#include "IOSClass.h"
#include "J2ObjC_source.h"
#include "java/util/Iterator.h"
#include "java/util/Set.h"
#include "java/util/TreeSet.h"
#include "org/apache/lucene/index/IndexReader.h"
#include "org/apache/lucene/index/Term.h"
#include "org/apache/lucene/index/TermDocs.h"
#include "org/apache/lucene/search/DocIdSet.h"
#include "org/apache/lucene/search/Filter.h"
#include "org/apache/lucene/search/TermsFilter.h"
#include "org/apache/lucene/util/FixedBitSet.h"

@implementation OrgApacheLuceneSearchTermsFilter

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  OrgApacheLuceneSearchTermsFilter_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (void)addTermWithOrgApacheLuceneIndexTerm:(OrgApacheLuceneIndexTerm *)term {
  [((id<JavaUtilSet>) nil_chk(terms_)) addWithId:term];
}

- (OrgApacheLuceneSearchDocIdSet *)getDocIdSetWithOrgApacheLuceneIndexIndexReader:(OrgApacheLuceneIndexIndexReader *)reader {
  OrgApacheLuceneUtilFixedBitSet *result = new_OrgApacheLuceneUtilFixedBitSet_initWithInt_([((OrgApacheLuceneIndexIndexReader *) nil_chk(reader)) maxDoc]);
  id<OrgApacheLuceneIndexTermDocs> td = [reader termDocs];
  @try {
    for (id<JavaUtilIterator> iter = [((id<JavaUtilSet>) nil_chk(terms_)) iterator]; [((id<JavaUtilIterator>) nil_chk(iter)) hasNext]; ) {
      OrgApacheLuceneIndexTerm *term = [iter next];
      [((id<OrgApacheLuceneIndexTermDocs>) nil_chk(td)) seekWithOrgApacheLuceneIndexTerm:term];
      while ([td next]) {
        [result setWithInt:[td doc]];
      }
    }
  }
  @finally {
    [((id<OrgApacheLuceneIndexTermDocs>) nil_chk(td)) close];
  }
  return result;
}

- (jboolean)isEqual:(id)obj {
  if (self == obj) return true;
  if ((obj == nil) || ([nil_chk(obj) java_getClass] != [self java_getClass])) return false;
  OrgApacheLuceneSearchTermsFilter *test = (OrgApacheLuceneSearchTermsFilter *) cast_chk(obj, [OrgApacheLuceneSearchTermsFilter class]);
  return (terms_ == ((OrgApacheLuceneSearchTermsFilter *) nil_chk(test))->terms_ || (terms_ != nil && [terms_ isEqual:test->terms_]));
}

- (NSUInteger)hash {
  jint hash_ = 9;
  for (id<JavaUtilIterator> iter = [((id<JavaUtilSet>) nil_chk(terms_)) iterator]; [((id<JavaUtilIterator>) nil_chk(iter)) hasNext]; ) {
    OrgApacheLuceneIndexTerm *term = [iter next];
    hash_ = 31 * hash_ + ((jint) [((OrgApacheLuceneIndexTerm *) nil_chk(term)) hash]);
  }
  return hash_;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 0, 1, -1, -1, -1, -1 },
    { NULL, "LOrgApacheLuceneSearchDocIdSet;", 0x1, 2, 3, 4, -1, -1, -1 },
    { NULL, "Z", 0x1, 5, 6, -1, -1, -1, -1 },
    { NULL, "I", 0x1, 7, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(addTermWithOrgApacheLuceneIndexTerm:);
  methods[2].selector = @selector(getDocIdSetWithOrgApacheLuceneIndexIndexReader:);
  methods[3].selector = @selector(isEqual:);
  methods[4].selector = @selector(hash);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "terms_", "LJavaUtilSet;", .constantValue.asLong = 0, 0x0, -1, -1, 8, -1 },
  };
  static const void *ptrTable[] = { "addTerm", "LOrgApacheLuceneIndexTerm;", "getDocIdSet", "LOrgApacheLuceneIndexIndexReader;", "LJavaIoIOException;", "equals", "LNSObject;", "hashCode", "Ljava/util/Set<Lorg/apache/lucene/index/Term;>;" };
  static const J2ObjcClassInfo _OrgApacheLuceneSearchTermsFilter = { "TermsFilter", "org.apache.lucene.search", ptrTable, methods, fields, 7, 0x1, 5, 1, -1, -1, -1, -1, -1 };
  return &_OrgApacheLuceneSearchTermsFilter;
}

@end

void OrgApacheLuceneSearchTermsFilter_init(OrgApacheLuceneSearchTermsFilter *self) {
  OrgApacheLuceneSearchFilter_init(self);
  self->terms_ = new_JavaUtilTreeSet_init();
}

OrgApacheLuceneSearchTermsFilter *new_OrgApacheLuceneSearchTermsFilter_init() {
  J2OBJC_NEW_IMPL(OrgApacheLuceneSearchTermsFilter, init)
}

OrgApacheLuceneSearchTermsFilter *create_OrgApacheLuceneSearchTermsFilter_init() {
  J2OBJC_CREATE_IMPL(OrgApacheLuceneSearchTermsFilter, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheLuceneSearchTermsFilter)
