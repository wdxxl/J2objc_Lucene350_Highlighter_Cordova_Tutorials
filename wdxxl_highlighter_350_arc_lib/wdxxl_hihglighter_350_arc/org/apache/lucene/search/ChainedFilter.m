//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: jar:file:wdxxl_lucene_350_highlighter.jar!org/apache/lucene/search/ChainedFilter.java
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "java/lang/Deprecated.h"
#include "java/lang/IllegalArgumentException.h"
#include "java/lang/StringBuilder.h"
#include "java/lang/annotation/Annotation.h"
#include "org/apache/lucene/index/IndexReader.h"
#include "org/apache/lucene/search/ChainedFilter.h"
#include "org/apache/lucene/search/DocIdSet.h"
#include "org/apache/lucene/search/DocIdSetIterator.h"
#include "org/apache/lucene/search/Filter.h"
#include "org/apache/lucene/util/OpenBitSet.h"
#include "org/apache/lucene/util/OpenBitSetDISI.h"

@interface OrgApacheLuceneSearchChainedFilter () {
 @public
  IOSObjectArray *chain_;
  IOSIntArray *logicArray_;
  jint logic_;
}

- (OrgApacheLuceneSearchDocIdSetIterator *)getDISIWithOrgApacheLuceneSearchFilter:(OrgApacheLuceneSearchFilter *)filter
                                              withOrgApacheLuceneIndexIndexReader:(OrgApacheLuceneIndexIndexReader *)reader;

- (OrgApacheLuceneUtilOpenBitSetDISI *)initialResultWithOrgApacheLuceneIndexIndexReader:(OrgApacheLuceneIndexIndexReader *)reader
                                                                                withInt:(jint)logic
                                                                           withIntArray:(IOSIntArray *)index OBJC_METHOD_FAMILY_NONE;

- (OrgApacheLuceneSearchDocIdSet *)getDocIdSetWithOrgApacheLuceneIndexIndexReader:(OrgApacheLuceneIndexIndexReader *)reader
                                                                          withInt:(jint)logic
                                                                     withIntArray:(IOSIntArray *)index;

- (OrgApacheLuceneSearchDocIdSet *)getDocIdSetWithOrgApacheLuceneIndexIndexReader:(OrgApacheLuceneIndexIndexReader *)reader
                                                                     withIntArray:(IOSIntArray *)logic
                                                                     withIntArray:(IOSIntArray *)index;

- (void)doChainWithOrgApacheLuceneUtilOpenBitSetDISI:(OrgApacheLuceneUtilOpenBitSetDISI *)result
                                             withInt:(jint)logic
                   withOrgApacheLuceneSearchDocIdSet:(OrgApacheLuceneSearchDocIdSet *)dis;

@end

J2OBJC_FIELD_SETTER(OrgApacheLuceneSearchChainedFilter, chain_, IOSObjectArray *)
J2OBJC_FIELD_SETTER(OrgApacheLuceneSearchChainedFilter, logicArray_, IOSIntArray *)

__attribute__((unused)) static OrgApacheLuceneSearchDocIdSetIterator *OrgApacheLuceneSearchChainedFilter_getDISIWithOrgApacheLuceneSearchFilter_withOrgApacheLuceneIndexIndexReader_(OrgApacheLuceneSearchChainedFilter *self, OrgApacheLuceneSearchFilter *filter, OrgApacheLuceneIndexIndexReader *reader);

__attribute__((unused)) static OrgApacheLuceneUtilOpenBitSetDISI *OrgApacheLuceneSearchChainedFilter_initialResultWithOrgApacheLuceneIndexIndexReader_withInt_withIntArray_(OrgApacheLuceneSearchChainedFilter *self, OrgApacheLuceneIndexIndexReader *reader, jint logic, IOSIntArray *index);

__attribute__((unused)) static OrgApacheLuceneSearchDocIdSet *OrgApacheLuceneSearchChainedFilter_finalResultWithOrgApacheLuceneUtilOpenBitSetDISI_withInt_(OrgApacheLuceneSearchChainedFilter *self, OrgApacheLuceneUtilOpenBitSetDISI *result, jint maxDocs);

__attribute__((unused)) static OrgApacheLuceneSearchDocIdSet *OrgApacheLuceneSearchChainedFilter_getDocIdSetWithOrgApacheLuceneIndexIndexReader_withInt_withIntArray_(OrgApacheLuceneSearchChainedFilter *self, OrgApacheLuceneIndexIndexReader *reader, jint logic, IOSIntArray *index);

__attribute__((unused)) static OrgApacheLuceneSearchDocIdSet *OrgApacheLuceneSearchChainedFilter_getDocIdSetWithOrgApacheLuceneIndexIndexReader_withIntArray_withIntArray_(OrgApacheLuceneSearchChainedFilter *self, OrgApacheLuceneIndexIndexReader *reader, IOSIntArray *logic, IOSIntArray *index);

__attribute__((unused)) static void OrgApacheLuceneSearchChainedFilter_doChainWithOrgApacheLuceneUtilOpenBitSetDISI_withInt_withOrgApacheLuceneSearchDocIdSet_(OrgApacheLuceneSearchChainedFilter *self, OrgApacheLuceneUtilOpenBitSetDISI *result, jint logic, OrgApacheLuceneSearchDocIdSet *dis);

__attribute__((unused)) static IOSObjectArray *OrgApacheLuceneSearchChainedFilter__Annotations$0();

jint OrgApacheLuceneSearchChainedFilter_DEFAULT = 0;

@implementation OrgApacheLuceneSearchChainedFilter

- (instancetype)initWithOrgApacheLuceneSearchFilterArray:(IOSObjectArray *)chain {
  OrgApacheLuceneSearchChainedFilter_initWithOrgApacheLuceneSearchFilterArray_(self, chain);
  return self;
}

- (instancetype)initWithOrgApacheLuceneSearchFilterArray:(IOSObjectArray *)chain
                                            withIntArray:(IOSIntArray *)logicArray {
  OrgApacheLuceneSearchChainedFilter_initWithOrgApacheLuceneSearchFilterArray_withIntArray_(self, chain, logicArray);
  return self;
}

- (instancetype)initWithOrgApacheLuceneSearchFilterArray:(IOSObjectArray *)chain
                                                 withInt:(jint)logic {
  OrgApacheLuceneSearchChainedFilter_initWithOrgApacheLuceneSearchFilterArray_withInt_(self, chain, logic);
  return self;
}

- (OrgApacheLuceneSearchDocIdSet *)getDocIdSetWithOrgApacheLuceneIndexIndexReader:(OrgApacheLuceneIndexIndexReader *)reader {
  IOSIntArray *index = [IOSIntArray newArrayWithLength:1];
  *IOSIntArray_GetRef(index, 0) = 0;
  if (logic_ != -1) return OrgApacheLuceneSearchChainedFilter_getDocIdSetWithOrgApacheLuceneIndexIndexReader_withInt_withIntArray_(self, reader, logic_, index);
  else if (logicArray_ != nil) return OrgApacheLuceneSearchChainedFilter_getDocIdSetWithOrgApacheLuceneIndexIndexReader_withIntArray_withIntArray_(self, reader, logicArray_, index);
  else return OrgApacheLuceneSearchChainedFilter_getDocIdSetWithOrgApacheLuceneIndexIndexReader_withInt_withIntArray_(self, reader, OrgApacheLuceneSearchChainedFilter_DEFAULT, index);
}

- (OrgApacheLuceneSearchDocIdSetIterator *)getDISIWithOrgApacheLuceneSearchFilter:(OrgApacheLuceneSearchFilter *)filter
                                              withOrgApacheLuceneIndexIndexReader:(OrgApacheLuceneIndexIndexReader *)reader {
  return OrgApacheLuceneSearchChainedFilter_getDISIWithOrgApacheLuceneSearchFilter_withOrgApacheLuceneIndexIndexReader_(self, filter, reader);
}

- (OrgApacheLuceneUtilOpenBitSetDISI *)initialResultWithOrgApacheLuceneIndexIndexReader:(OrgApacheLuceneIndexIndexReader *)reader
                                                                                withInt:(jint)logic
                                                                           withIntArray:(IOSIntArray *)index {
  return OrgApacheLuceneSearchChainedFilter_initialResultWithOrgApacheLuceneIndexIndexReader_withInt_withIntArray_(self, reader, logic, index);
}

- (OrgApacheLuceneSearchDocIdSet *)finalResultWithOrgApacheLuceneUtilOpenBitSetDISI:(OrgApacheLuceneUtilOpenBitSetDISI *)result
                                                                            withInt:(jint)maxDocs {
  return OrgApacheLuceneSearchChainedFilter_finalResultWithOrgApacheLuceneUtilOpenBitSetDISI_withInt_(self, result, maxDocs);
}

- (OrgApacheLuceneSearchDocIdSet *)getDocIdSetWithOrgApacheLuceneIndexIndexReader:(OrgApacheLuceneIndexIndexReader *)reader
                                                                          withInt:(jint)logic
                                                                     withIntArray:(IOSIntArray *)index {
  return OrgApacheLuceneSearchChainedFilter_getDocIdSetWithOrgApacheLuceneIndexIndexReader_withInt_withIntArray_(self, reader, logic, index);
}

- (OrgApacheLuceneSearchDocIdSet *)getDocIdSetWithOrgApacheLuceneIndexIndexReader:(OrgApacheLuceneIndexIndexReader *)reader
                                                                     withIntArray:(IOSIntArray *)logic
                                                                     withIntArray:(IOSIntArray *)index {
  return OrgApacheLuceneSearchChainedFilter_getDocIdSetWithOrgApacheLuceneIndexIndexReader_withIntArray_withIntArray_(self, reader, logic, index);
}

- (NSString *)description {
  JavaLangStringBuilder *sb = new_JavaLangStringBuilder_init();
  (void) [sb appendWithNSString:@"ChainedFilter: ["];
  for (jint i = 0; i < ((IOSObjectArray *) nil_chk(chain_))->size_; i++) {
    (void) [sb appendWithId:IOSObjectArray_Get(chain_, i)];
    (void) [sb appendWithChar:' '];
  }
  (void) [sb appendWithChar:']'];
  return [sb description];
}

- (void)doChainWithOrgApacheLuceneUtilOpenBitSetDISI:(OrgApacheLuceneUtilOpenBitSetDISI *)result
                                             withInt:(jint)logic
                   withOrgApacheLuceneSearchDocIdSet:(OrgApacheLuceneSearchDocIdSet *)dis {
  OrgApacheLuceneSearchChainedFilter_doChainWithOrgApacheLuceneUtilOpenBitSetDISI_withInt_withOrgApacheLuceneSearchDocIdSet_(self, result, logic, dis);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 1, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 2, -1, -1, -1, -1 },
    { NULL, "LOrgApacheLuceneSearchDocIdSet;", 0x1, 3, 4, 5, -1, -1, -1 },
    { NULL, "LOrgApacheLuceneSearchDocIdSetIterator;", 0x2, 6, 7, 5, -1, -1, -1 },
    { NULL, "LOrgApacheLuceneUtilOpenBitSetDISI;", 0x2, 8, 9, 5, -1, -1, -1 },
    { NULL, "LOrgApacheLuceneSearchDocIdSet;", 0x14, 10, 11, -1, -1, 12, -1 },
    { NULL, "LOrgApacheLuceneSearchDocIdSet;", 0x2, 3, 9, 5, -1, -1, -1 },
    { NULL, "LOrgApacheLuceneSearchDocIdSet;", 0x2, 3, 13, 5, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, 14, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x2, 15, 16, 5, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithOrgApacheLuceneSearchFilterArray:);
  methods[1].selector = @selector(initWithOrgApacheLuceneSearchFilterArray:withIntArray:);
  methods[2].selector = @selector(initWithOrgApacheLuceneSearchFilterArray:withInt:);
  methods[3].selector = @selector(getDocIdSetWithOrgApacheLuceneIndexIndexReader:);
  methods[4].selector = @selector(getDISIWithOrgApacheLuceneSearchFilter:withOrgApacheLuceneIndexIndexReader:);
  methods[5].selector = @selector(initialResultWithOrgApacheLuceneIndexIndexReader:withInt:withIntArray:);
  methods[6].selector = @selector(finalResultWithOrgApacheLuceneUtilOpenBitSetDISI:withInt:);
  methods[7].selector = @selector(getDocIdSetWithOrgApacheLuceneIndexIndexReader:withInt:withIntArray:);
  methods[8].selector = @selector(getDocIdSetWithOrgApacheLuceneIndexIndexReader:withIntArray:withIntArray:);
  methods[9].selector = @selector(description);
  methods[10].selector = @selector(doChainWithOrgApacheLuceneUtilOpenBitSetDISI:withInt:withOrgApacheLuceneSearchDocIdSet:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "OR", "I", .constantValue.asInt = OrgApacheLuceneSearchChainedFilter_OR, 0x19, -1, -1, -1, -1 },
    { "AND", "I", .constantValue.asInt = OrgApacheLuceneSearchChainedFilter_AND, 0x19, -1, -1, -1, -1 },
    { "ANDNOT", "I", .constantValue.asInt = OrgApacheLuceneSearchChainedFilter_ANDNOT, 0x19, -1, -1, -1, -1 },
    { "XOR", "I", .constantValue.asInt = OrgApacheLuceneSearchChainedFilter_XOR, 0x19, -1, -1, -1, -1 },
    { "DEFAULT", "I", .constantValue.asLong = 0, 0x9, -1, 17, -1, -1 },
    { "chain_", "[LOrgApacheLuceneSearchFilter;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "logicArray_", "[I", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "logic_", "I", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "[LOrgApacheLuceneSearchFilter;", "[LOrgApacheLuceneSearchFilter;[I", "[LOrgApacheLuceneSearchFilter;I", "getDocIdSet", "LOrgApacheLuceneIndexIndexReader;", "LJavaIoIOException;", "getDISI", "LOrgApacheLuceneSearchFilter;LOrgApacheLuceneIndexIndexReader;", "initialResult", "LOrgApacheLuceneIndexIndexReader;I[I", "finalResult", "LOrgApacheLuceneUtilOpenBitSetDISI;I", (void *)&OrgApacheLuceneSearchChainedFilter__Annotations$0, "LOrgApacheLuceneIndexIndexReader;[I[I", "toString", "doChain", "LOrgApacheLuceneUtilOpenBitSetDISI;ILOrgApacheLuceneSearchDocIdSet;", &OrgApacheLuceneSearchChainedFilter_DEFAULT };
  static const J2ObjcClassInfo _OrgApacheLuceneSearchChainedFilter = { "ChainedFilter", "org.apache.lucene.search", ptrTable, methods, fields, 7, 0x1, 11, 8, -1, -1, -1, -1, -1 };
  return &_OrgApacheLuceneSearchChainedFilter;
}

@end

void OrgApacheLuceneSearchChainedFilter_initWithOrgApacheLuceneSearchFilterArray_(OrgApacheLuceneSearchChainedFilter *self, IOSObjectArray *chain) {
  OrgApacheLuceneSearchFilter_init(self);
  self->chain_ = nil;
  self->logic_ = -1;
  self->chain_ = chain;
}

OrgApacheLuceneSearchChainedFilter *new_OrgApacheLuceneSearchChainedFilter_initWithOrgApacheLuceneSearchFilterArray_(IOSObjectArray *chain) {
  J2OBJC_NEW_IMPL(OrgApacheLuceneSearchChainedFilter, initWithOrgApacheLuceneSearchFilterArray_, chain)
}

OrgApacheLuceneSearchChainedFilter *create_OrgApacheLuceneSearchChainedFilter_initWithOrgApacheLuceneSearchFilterArray_(IOSObjectArray *chain) {
  J2OBJC_CREATE_IMPL(OrgApacheLuceneSearchChainedFilter, initWithOrgApacheLuceneSearchFilterArray_, chain)
}

void OrgApacheLuceneSearchChainedFilter_initWithOrgApacheLuceneSearchFilterArray_withIntArray_(OrgApacheLuceneSearchChainedFilter *self, IOSObjectArray *chain, IOSIntArray *logicArray) {
  OrgApacheLuceneSearchFilter_init(self);
  self->chain_ = nil;
  self->logic_ = -1;
  self->chain_ = chain;
  self->logicArray_ = logicArray;
}

OrgApacheLuceneSearchChainedFilter *new_OrgApacheLuceneSearchChainedFilter_initWithOrgApacheLuceneSearchFilterArray_withIntArray_(IOSObjectArray *chain, IOSIntArray *logicArray) {
  J2OBJC_NEW_IMPL(OrgApacheLuceneSearchChainedFilter, initWithOrgApacheLuceneSearchFilterArray_withIntArray_, chain, logicArray)
}

OrgApacheLuceneSearchChainedFilter *create_OrgApacheLuceneSearchChainedFilter_initWithOrgApacheLuceneSearchFilterArray_withIntArray_(IOSObjectArray *chain, IOSIntArray *logicArray) {
  J2OBJC_CREATE_IMPL(OrgApacheLuceneSearchChainedFilter, initWithOrgApacheLuceneSearchFilterArray_withIntArray_, chain, logicArray)
}

void OrgApacheLuceneSearchChainedFilter_initWithOrgApacheLuceneSearchFilterArray_withInt_(OrgApacheLuceneSearchChainedFilter *self, IOSObjectArray *chain, jint logic) {
  OrgApacheLuceneSearchFilter_init(self);
  self->chain_ = nil;
  self->logic_ = -1;
  self->chain_ = chain;
  self->logic_ = logic;
}

OrgApacheLuceneSearchChainedFilter *new_OrgApacheLuceneSearchChainedFilter_initWithOrgApacheLuceneSearchFilterArray_withInt_(IOSObjectArray *chain, jint logic) {
  J2OBJC_NEW_IMPL(OrgApacheLuceneSearchChainedFilter, initWithOrgApacheLuceneSearchFilterArray_withInt_, chain, logic)
}

OrgApacheLuceneSearchChainedFilter *create_OrgApacheLuceneSearchChainedFilter_initWithOrgApacheLuceneSearchFilterArray_withInt_(IOSObjectArray *chain, jint logic) {
  J2OBJC_CREATE_IMPL(OrgApacheLuceneSearchChainedFilter, initWithOrgApacheLuceneSearchFilterArray_withInt_, chain, logic)
}

OrgApacheLuceneSearchDocIdSetIterator *OrgApacheLuceneSearchChainedFilter_getDISIWithOrgApacheLuceneSearchFilter_withOrgApacheLuceneIndexIndexReader_(OrgApacheLuceneSearchChainedFilter *self, OrgApacheLuceneSearchFilter *filter, OrgApacheLuceneIndexIndexReader *reader) {
  OrgApacheLuceneSearchDocIdSet *docIdSet = [((OrgApacheLuceneSearchFilter *) nil_chk(filter)) getDocIdSetWithOrgApacheLuceneIndexIndexReader:reader];
  if (docIdSet == nil) {
    return [((OrgApacheLuceneSearchDocIdSet *) nil_chk(JreLoadStatic(OrgApacheLuceneSearchDocIdSet, EMPTY_DOCIDSET))) iterator];
  }
  else {
    OrgApacheLuceneSearchDocIdSetIterator *iter = [docIdSet iterator];
    if (iter == nil) {
      return [((OrgApacheLuceneSearchDocIdSet *) nil_chk(JreLoadStatic(OrgApacheLuceneSearchDocIdSet, EMPTY_DOCIDSET))) iterator];
    }
    else {
      return iter;
    }
  }
}

OrgApacheLuceneUtilOpenBitSetDISI *OrgApacheLuceneSearchChainedFilter_initialResultWithOrgApacheLuceneIndexIndexReader_withInt_withIntArray_(OrgApacheLuceneSearchChainedFilter *self, OrgApacheLuceneIndexIndexReader *reader, jint logic, IOSIntArray *index) {
  OrgApacheLuceneUtilOpenBitSetDISI *result;
  if (logic == OrgApacheLuceneSearchChainedFilter_AND) {
    result = new_OrgApacheLuceneUtilOpenBitSetDISI_initWithOrgApacheLuceneSearchDocIdSetIterator_withInt_(OrgApacheLuceneSearchChainedFilter_getDISIWithOrgApacheLuceneSearchFilter_withOrgApacheLuceneIndexIndexReader_(self, IOSObjectArray_Get(nil_chk(self->chain_), IOSIntArray_Get(nil_chk(index), 0)), reader), [((OrgApacheLuceneIndexIndexReader *) nil_chk(reader)) maxDoc]);
    ++(*IOSIntArray_GetRef(index, 0));
  }
  else if (logic == OrgApacheLuceneSearchChainedFilter_ANDNOT) {
    result = new_OrgApacheLuceneUtilOpenBitSetDISI_initWithOrgApacheLuceneSearchDocIdSetIterator_withInt_(OrgApacheLuceneSearchChainedFilter_getDISIWithOrgApacheLuceneSearchFilter_withOrgApacheLuceneIndexIndexReader_(self, IOSObjectArray_Get(nil_chk(self->chain_), IOSIntArray_Get(nil_chk(index), 0)), reader), [((OrgApacheLuceneIndexIndexReader *) nil_chk(reader)) maxDoc]);
    [result flipWithLong:0 withLong:[reader maxDoc]];
    ++(*IOSIntArray_GetRef(index, 0));
  }
  else {
    result = new_OrgApacheLuceneUtilOpenBitSetDISI_initWithInt_([((OrgApacheLuceneIndexIndexReader *) nil_chk(reader)) maxDoc]);
  }
  return result;
}

OrgApacheLuceneSearchDocIdSet *OrgApacheLuceneSearchChainedFilter_finalResultWithOrgApacheLuceneUtilOpenBitSetDISI_withInt_(OrgApacheLuceneSearchChainedFilter *self, OrgApacheLuceneUtilOpenBitSetDISI *result, jint maxDocs) {
  return result;
}

OrgApacheLuceneSearchDocIdSet *OrgApacheLuceneSearchChainedFilter_getDocIdSetWithOrgApacheLuceneIndexIndexReader_withInt_withIntArray_(OrgApacheLuceneSearchChainedFilter *self, OrgApacheLuceneIndexIndexReader *reader, jint logic, IOSIntArray *index) {
  OrgApacheLuceneUtilOpenBitSetDISI *result = OrgApacheLuceneSearchChainedFilter_initialResultWithOrgApacheLuceneIndexIndexReader_withInt_withIntArray_(self, reader, logic, index);
  for (; IOSIntArray_Get(nil_chk(index), 0) < ((IOSObjectArray *) nil_chk(self->chain_))->size_; (*IOSIntArray_GetRef(index, 0))++) {
    OrgApacheLuceneSearchChainedFilter_doChainWithOrgApacheLuceneUtilOpenBitSetDISI_withInt_withOrgApacheLuceneSearchDocIdSet_(self, result, logic, [((OrgApacheLuceneSearchFilter *) nil_chk(IOSObjectArray_Get(self->chain_, IOSIntArray_Get(index, 0)))) getDocIdSetWithOrgApacheLuceneIndexIndexReader:reader]);
  }
  return OrgApacheLuceneSearchChainedFilter_finalResultWithOrgApacheLuceneUtilOpenBitSetDISI_withInt_(self, result, [((OrgApacheLuceneIndexIndexReader *) nil_chk(reader)) maxDoc]);
}

OrgApacheLuceneSearchDocIdSet *OrgApacheLuceneSearchChainedFilter_getDocIdSetWithOrgApacheLuceneIndexIndexReader_withIntArray_withIntArray_(OrgApacheLuceneSearchChainedFilter *self, OrgApacheLuceneIndexIndexReader *reader, IOSIntArray *logic, IOSIntArray *index) {
  if (((IOSIntArray *) nil_chk(logic))->size_ != ((IOSObjectArray *) nil_chk(self->chain_))->size_) @throw new_JavaLangIllegalArgumentException_initWithNSString_(@"Invalid number of elements in logic array");
  OrgApacheLuceneUtilOpenBitSetDISI *result = OrgApacheLuceneSearchChainedFilter_initialResultWithOrgApacheLuceneIndexIndexReader_withInt_withIntArray_(self, reader, IOSIntArray_Get(logic, 0), index);
  for (; IOSIntArray_Get(nil_chk(index), 0) < ((IOSObjectArray *) nil_chk(self->chain_))->size_; (*IOSIntArray_GetRef(index, 0))++) {
    OrgApacheLuceneSearchChainedFilter_doChainWithOrgApacheLuceneUtilOpenBitSetDISI_withInt_withOrgApacheLuceneSearchDocIdSet_(self, result, IOSIntArray_Get(logic, IOSIntArray_Get(index, 0)), [((OrgApacheLuceneSearchFilter *) nil_chk(IOSObjectArray_Get(self->chain_, IOSIntArray_Get(index, 0)))) getDocIdSetWithOrgApacheLuceneIndexIndexReader:reader]);
  }
  return OrgApacheLuceneSearchChainedFilter_finalResultWithOrgApacheLuceneUtilOpenBitSetDISI_withInt_(self, result, [((OrgApacheLuceneIndexIndexReader *) nil_chk(reader)) maxDoc]);
}

void OrgApacheLuceneSearchChainedFilter_doChainWithOrgApacheLuceneUtilOpenBitSetDISI_withInt_withOrgApacheLuceneSearchDocIdSet_(OrgApacheLuceneSearchChainedFilter *self, OrgApacheLuceneUtilOpenBitSetDISI *result, jint logic, OrgApacheLuceneSearchDocIdSet *dis) {
  if ([dis isKindOfClass:[OrgApacheLuceneUtilOpenBitSet class]]) {
    switch (logic) {
      case OrgApacheLuceneSearchChainedFilter_OR:
      [((OrgApacheLuceneUtilOpenBitSetDISI *) nil_chk(result)) or__WithOrgApacheLuceneUtilOpenBitSet:(OrgApacheLuceneUtilOpenBitSet *) cast_chk(dis, [OrgApacheLuceneUtilOpenBitSet class])];
      break;
      case OrgApacheLuceneSearchChainedFilter_AND:
      [((OrgApacheLuceneUtilOpenBitSetDISI *) nil_chk(result)) and__WithOrgApacheLuceneUtilOpenBitSet:(OrgApacheLuceneUtilOpenBitSet *) cast_chk(dis, [OrgApacheLuceneUtilOpenBitSet class])];
      break;
      case OrgApacheLuceneSearchChainedFilter_ANDNOT:
      [((OrgApacheLuceneUtilOpenBitSetDISI *) nil_chk(result)) andNotWithOrgApacheLuceneUtilOpenBitSet:(OrgApacheLuceneUtilOpenBitSet *) cast_chk(dis, [OrgApacheLuceneUtilOpenBitSet class])];
      break;
      case OrgApacheLuceneSearchChainedFilter_XOR:
      [((OrgApacheLuceneUtilOpenBitSetDISI *) nil_chk(result)) xor__WithOrgApacheLuceneUtilOpenBitSet:(OrgApacheLuceneUtilOpenBitSet *) cast_chk(dis, [OrgApacheLuceneUtilOpenBitSet class])];
      break;
      default:
      OrgApacheLuceneSearchChainedFilter_doChainWithOrgApacheLuceneUtilOpenBitSetDISI_withInt_withOrgApacheLuceneSearchDocIdSet_(self, result, OrgApacheLuceneSearchChainedFilter_DEFAULT, dis);
      break;
    }
  }
  else {
    OrgApacheLuceneSearchDocIdSetIterator *disi;
    if (dis == nil) {
      disi = [((OrgApacheLuceneSearchDocIdSet *) nil_chk(JreLoadStatic(OrgApacheLuceneSearchDocIdSet, EMPTY_DOCIDSET))) iterator];
    }
    else {
      disi = [dis iterator];
      if (disi == nil) {
        disi = [((OrgApacheLuceneSearchDocIdSet *) nil_chk(JreLoadStatic(OrgApacheLuceneSearchDocIdSet, EMPTY_DOCIDSET))) iterator];
      }
    }
    switch (logic) {
      case OrgApacheLuceneSearchChainedFilter_OR:
      [((OrgApacheLuceneUtilOpenBitSetDISI *) nil_chk(result)) inPlaceOrWithOrgApacheLuceneSearchDocIdSetIterator:disi];
      break;
      case OrgApacheLuceneSearchChainedFilter_AND:
      [((OrgApacheLuceneUtilOpenBitSetDISI *) nil_chk(result)) inPlaceAndWithOrgApacheLuceneSearchDocIdSetIterator:disi];
      break;
      case OrgApacheLuceneSearchChainedFilter_ANDNOT:
      [((OrgApacheLuceneUtilOpenBitSetDISI *) nil_chk(result)) inPlaceNotWithOrgApacheLuceneSearchDocIdSetIterator:disi];
      break;
      case OrgApacheLuceneSearchChainedFilter_XOR:
      [((OrgApacheLuceneUtilOpenBitSetDISI *) nil_chk(result)) inPlaceXorWithOrgApacheLuceneSearchDocIdSetIterator:disi];
      break;
      default:
      OrgApacheLuceneSearchChainedFilter_doChainWithOrgApacheLuceneUtilOpenBitSetDISI_withInt_withOrgApacheLuceneSearchDocIdSet_(self, result, OrgApacheLuceneSearchChainedFilter_DEFAULT, dis);
      break;
    }
  }
}

IOSObjectArray *OrgApacheLuceneSearchChainedFilter__Annotations$0() {
  return [IOSObjectArray newArrayWithObjects:(id[]){ create_JavaLangDeprecated() } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheLuceneSearchChainedFilter)
