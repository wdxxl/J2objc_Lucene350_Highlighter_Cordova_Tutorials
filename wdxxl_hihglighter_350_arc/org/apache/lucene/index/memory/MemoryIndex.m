//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: jar:file:wdxxl_lucene_350_highlighter.jar!org/apache/lucene/index/memory/MemoryIndex.java
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "java/io/IOException.h"
#include "java/io/Serializable.h"
#include "java/io/StringReader.h"
#include "java/lang/IllegalArgumentException.h"
#include "java/lang/IndexOutOfBoundsException.h"
#include "java/lang/Math.h"
#include "java/lang/RuntimeException.h"
#include "java/lang/StringBuilder.h"
#include "java/lang/System.h"
#include "java/lang/UnsupportedOperationException.h"
#include "java/util/Arrays.h"
#include "java/util/Collection.h"
#include "java/util/Collections.h"
#include "java/util/Comparator.h"
#include "java/util/HashMap.h"
#include "java/util/HashSet.h"
#include "java/util/Iterator.h"
#include "java/util/Map.h"
#include "java/util/Set.h"
#include "java/util/function/Function.h"
#include "java/util/function/ToDoubleFunction.h"
#include "java/util/function/ToIntFunction.h"
#include "java/util/function/ToLongFunction.h"
#include "org/apache/lucene/analysis/Analyzer.h"
#include "org/apache/lucene/analysis/TokenStream.h"
#include "org/apache/lucene/analysis/tokenattributes/CharTermAttribute.h"
#include "org/apache/lucene/analysis/tokenattributes/OffsetAttribute.h"
#include "org/apache/lucene/analysis/tokenattributes/PositionIncrementAttribute.h"
#include "org/apache/lucene/document/Document.h"
#include "org/apache/lucene/document/FieldSelector.h"
#include "org/apache/lucene/index/FieldInvertState.h"
#include "org/apache/lucene/index/IndexReader.h"
#include "org/apache/lucene/index/Term.h"
#include "org/apache/lucene/index/TermDocs.h"
#include "org/apache/lucene/index/TermEnum.h"
#include "org/apache/lucene/index/TermFreqVector.h"
#include "org/apache/lucene/index/TermPositionVector.h"
#include "org/apache/lucene/index/TermPositions.h"
#include "org/apache/lucene/index/TermVectorMapper.h"
#include "org/apache/lucene/index/TermVectorOffsetInfo.h"
#include "org/apache/lucene/index/memory/MemoryIndex.h"
#include "org/apache/lucene/search/Collector.h"
#include "org/apache/lucene/search/IndexSearcher.h"
#include "org/apache/lucene/search/Query.h"
#include "org/apache/lucene/search/Scorer.h"
#include "org/apache/lucene/search/Searcher.h"
#include "org/apache/lucene/search/Similarity.h"
#include "org/apache/lucene/util/ArrayUtil.h"
#include "org/apache/lucene/util/Constants.h"

@class OrgApacheLuceneIndexMemoryMemoryIndex_ArrayIntList;

#pragma clang diagnostic ignored "-Wprotocol"

@interface OrgApacheLuceneIndexMemoryMemoryIndex () {
 @public
  JavaUtilHashMap *fields_;
  IOSObjectArray *sortedFields_;
  jint stride_;
}

- (instancetype)initWithBoolean:(jboolean)storeOffsets;

- (jint)numPositionsWithOrgApacheLuceneIndexMemoryMemoryIndex_ArrayIntList:(OrgApacheLuceneIndexMemoryMemoryIndex_ArrayIntList *)positions;

- (void)sortFields;

+ (IOSObjectArray *)sortWithJavaUtilHashMap:(JavaUtilHashMap *)map;

@end

J2OBJC_FIELD_SETTER(OrgApacheLuceneIndexMemoryMemoryIndex, fields_, JavaUtilHashMap *)
J2OBJC_FIELD_SETTER(OrgApacheLuceneIndexMemoryMemoryIndex, sortedFields_, IOSObjectArray *)

inline jfloat OrgApacheLuceneIndexMemoryMemoryIndex_get_docBoost();
#define OrgApacheLuceneIndexMemoryMemoryIndex_docBoost 1.0f
J2OBJC_STATIC_FIELD_CONSTANT(OrgApacheLuceneIndexMemoryMemoryIndex, docBoost, jfloat)

inline jlong OrgApacheLuceneIndexMemoryMemoryIndex_get_serialVersionUID();
#define OrgApacheLuceneIndexMemoryMemoryIndex_serialVersionUID 2782195016849084649LL
J2OBJC_STATIC_FIELD_CONSTANT(OrgApacheLuceneIndexMemoryMemoryIndex, serialVersionUID, jlong)

inline jboolean OrgApacheLuceneIndexMemoryMemoryIndex_get_DEBUG();
#define OrgApacheLuceneIndexMemoryMemoryIndex_DEBUG false
J2OBJC_STATIC_FIELD_CONSTANT(OrgApacheLuceneIndexMemoryMemoryIndex, DEBUG, jboolean)

inline id<JavaUtilComparator> OrgApacheLuceneIndexMemoryMemoryIndex_get_termComparator();
static id<JavaUtilComparator> OrgApacheLuceneIndexMemoryMemoryIndex_termComparator;
J2OBJC_STATIC_FIELD_OBJ_FINAL(OrgApacheLuceneIndexMemoryMemoryIndex, termComparator, id<JavaUtilComparator>)

inline OrgApacheLuceneIndexTerm *OrgApacheLuceneIndexMemoryMemoryIndex_get_MATCH_ALL_TERM();
static OrgApacheLuceneIndexTerm *OrgApacheLuceneIndexMemoryMemoryIndex_MATCH_ALL_TERM;
J2OBJC_STATIC_FIELD_OBJ_FINAL(OrgApacheLuceneIndexMemoryMemoryIndex, MATCH_ALL_TERM, OrgApacheLuceneIndexTerm *)

__attribute__((unused)) static void OrgApacheLuceneIndexMemoryMemoryIndex_initWithBoolean_(OrgApacheLuceneIndexMemoryMemoryIndex *self, jboolean storeOffsets);

__attribute__((unused)) static OrgApacheLuceneIndexMemoryMemoryIndex *new_OrgApacheLuceneIndexMemoryMemoryIndex_initWithBoolean_(jboolean storeOffsets) NS_RETURNS_RETAINED;

__attribute__((unused)) static OrgApacheLuceneIndexMemoryMemoryIndex *create_OrgApacheLuceneIndexMemoryMemoryIndex_initWithBoolean_(jboolean storeOffsets);

__attribute__((unused)) static jint OrgApacheLuceneIndexMemoryMemoryIndex_numPositionsWithOrgApacheLuceneIndexMemoryMemoryIndex_ArrayIntList_(OrgApacheLuceneIndexMemoryMemoryIndex *self, OrgApacheLuceneIndexMemoryMemoryIndex_ArrayIntList *positions);

__attribute__((unused)) static void OrgApacheLuceneIndexMemoryMemoryIndex_sortFields(OrgApacheLuceneIndexMemoryMemoryIndex *self);

__attribute__((unused)) static IOSObjectArray *OrgApacheLuceneIndexMemoryMemoryIndex_sortWithJavaUtilHashMap_(JavaUtilHashMap *map);

@interface OrgApacheLuceneIndexMemoryMemoryIndex_1 : NSObject < JavaUtilComparator >

- (instancetype)init;

- (jint)compareWithId:(id)o1
               withId:(id)o2;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgApacheLuceneIndexMemoryMemoryIndex_1)

__attribute__((unused)) static void OrgApacheLuceneIndexMemoryMemoryIndex_1_init(OrgApacheLuceneIndexMemoryMemoryIndex_1 *self);

__attribute__((unused)) static OrgApacheLuceneIndexMemoryMemoryIndex_1 *new_OrgApacheLuceneIndexMemoryMemoryIndex_1_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static OrgApacheLuceneIndexMemoryMemoryIndex_1 *create_OrgApacheLuceneIndexMemoryMemoryIndex_1_init();

@interface OrgApacheLuceneIndexMemoryMemoryIndex_2 : OrgApacheLuceneAnalysisTokenStream {
 @public
  id<JavaUtilIterator> iter_;
  jint start_;
  id<OrgApacheLuceneAnalysisTokenattributesCharTermAttribute> termAtt_;
  id<OrgApacheLuceneAnalysisTokenattributesOffsetAttribute> offsetAtt_;
}

- (instancetype)initWithJavaUtilCollection:(id<JavaUtilCollection>)capture$0;

- (jboolean)incrementToken;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgApacheLuceneIndexMemoryMemoryIndex_2)

J2OBJC_FIELD_SETTER(OrgApacheLuceneIndexMemoryMemoryIndex_2, iter_, id<JavaUtilIterator>)
J2OBJC_FIELD_SETTER(OrgApacheLuceneIndexMemoryMemoryIndex_2, termAtt_, id<OrgApacheLuceneAnalysisTokenattributesCharTermAttribute>)
J2OBJC_FIELD_SETTER(OrgApacheLuceneIndexMemoryMemoryIndex_2, offsetAtt_, id<OrgApacheLuceneAnalysisTokenattributesOffsetAttribute>)

__attribute__((unused)) static void OrgApacheLuceneIndexMemoryMemoryIndex_2_initWithJavaUtilCollection_(OrgApacheLuceneIndexMemoryMemoryIndex_2 *self, id<JavaUtilCollection> capture$0);

__attribute__((unused)) static OrgApacheLuceneIndexMemoryMemoryIndex_2 *new_OrgApacheLuceneIndexMemoryMemoryIndex_2_initWithJavaUtilCollection_(id<JavaUtilCollection> capture$0) NS_RETURNS_RETAINED;

__attribute__((unused)) static OrgApacheLuceneIndexMemoryMemoryIndex_2 *create_OrgApacheLuceneIndexMemoryMemoryIndex_2_initWithJavaUtilCollection_(id<JavaUtilCollection> capture$0);

@interface OrgApacheLuceneIndexMemoryMemoryIndex_3 : OrgApacheLuceneSearchCollector {
 @public
  IOSFloatArray *val$scores_;
  OrgApacheLuceneSearchScorer *scorer_;
}

- (instancetype)initWithFloatArray:(IOSFloatArray *)capture$0;

- (void)collectWithInt:(jint)doc;

- (void)setScorerWithOrgApacheLuceneSearchScorer:(OrgApacheLuceneSearchScorer *)scorer;

- (jboolean)acceptsDocsOutOfOrder;

- (void)setNextReaderWithOrgApacheLuceneIndexIndexReader:(OrgApacheLuceneIndexIndexReader *)reader
                                                 withInt:(jint)docBase;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgApacheLuceneIndexMemoryMemoryIndex_3)

J2OBJC_FIELD_SETTER(OrgApacheLuceneIndexMemoryMemoryIndex_3, scorer_, OrgApacheLuceneSearchScorer *)

__attribute__((unused)) static void OrgApacheLuceneIndexMemoryMemoryIndex_3_initWithFloatArray_(OrgApacheLuceneIndexMemoryMemoryIndex_3 *self, IOSFloatArray *capture$0);

__attribute__((unused)) static OrgApacheLuceneIndexMemoryMemoryIndex_3 *new_OrgApacheLuceneIndexMemoryMemoryIndex_3_initWithFloatArray_(IOSFloatArray *capture$0) NS_RETURNS_RETAINED;

__attribute__((unused)) static OrgApacheLuceneIndexMemoryMemoryIndex_3 *create_OrgApacheLuceneIndexMemoryMemoryIndex_3_initWithFloatArray_(IOSFloatArray *capture$0);

@interface OrgApacheLuceneIndexMemoryMemoryIndex_Info : NSObject < JavaIoSerializable > {
 @public
  JavaUtilHashMap *terms_;
  IOSObjectArray *sortedTerms_;
  jint numTokens_;
  jint numOverlapTokens_;
  jfloat boost_;
  OrgApacheLuceneIndexTerm *template__;
}

- (instancetype)initWithJavaUtilHashMap:(JavaUtilHashMap *)terms
                                withInt:(jint)numTokens
                                withInt:(jint)numOverlapTokens
                              withFloat:(jfloat)boost;

- (void)sortTerms;

- (OrgApacheLuceneIndexMemoryMemoryIndex_ArrayIntList *)getPositionsWithNSString:(NSString *)term;

- (OrgApacheLuceneIndexMemoryMemoryIndex_ArrayIntList *)getPositionsWithInt:(jint)pos;

- (jfloat)getBoost;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgApacheLuceneIndexMemoryMemoryIndex_Info)

J2OBJC_FIELD_SETTER(OrgApacheLuceneIndexMemoryMemoryIndex_Info, terms_, JavaUtilHashMap *)
J2OBJC_FIELD_SETTER(OrgApacheLuceneIndexMemoryMemoryIndex_Info, sortedTerms_, IOSObjectArray *)
J2OBJC_FIELD_SETTER(OrgApacheLuceneIndexMemoryMemoryIndex_Info, template__, OrgApacheLuceneIndexTerm *)

inline jlong OrgApacheLuceneIndexMemoryMemoryIndex_Info_get_serialVersionUID();
#define OrgApacheLuceneIndexMemoryMemoryIndex_Info_serialVersionUID 2882195016849084649LL
J2OBJC_STATIC_FIELD_CONSTANT(OrgApacheLuceneIndexMemoryMemoryIndex_Info, serialVersionUID, jlong)

__attribute__((unused)) static void OrgApacheLuceneIndexMemoryMemoryIndex_Info_initWithJavaUtilHashMap_withInt_withInt_withFloat_(OrgApacheLuceneIndexMemoryMemoryIndex_Info *self, JavaUtilHashMap *terms, jint numTokens, jint numOverlapTokens, jfloat boost);

__attribute__((unused)) static OrgApacheLuceneIndexMemoryMemoryIndex_Info *new_OrgApacheLuceneIndexMemoryMemoryIndex_Info_initWithJavaUtilHashMap_withInt_withInt_withFloat_(JavaUtilHashMap *terms, jint numTokens, jint numOverlapTokens, jfloat boost) NS_RETURNS_RETAINED;

__attribute__((unused)) static OrgApacheLuceneIndexMemoryMemoryIndex_Info *create_OrgApacheLuceneIndexMemoryMemoryIndex_Info_initWithJavaUtilHashMap_withInt_withInt_withFloat_(JavaUtilHashMap *terms, jint numTokens, jint numOverlapTokens, jfloat boost);

J2OBJC_TYPE_LITERAL_HEADER(OrgApacheLuceneIndexMemoryMemoryIndex_Info)

@interface OrgApacheLuceneIndexMemoryMemoryIndex_ArrayIntList : NSObject < JavaIoSerializable > {
 @public
  IOSIntArray *elements_;
  jint size_;
}

- (instancetype)init;

- (instancetype)initWithInt:(jint)initialCapacity;

- (void)addWithInt:(jint)elem;

- (void)addWithInt:(jint)pos
           withInt:(jint)start
           withInt:(jint)end;

- (jint)getWithInt:(jint)index;

- (jint)size;

- (IOSIntArray *)toArrayWithInt:(jint)stride;

- (void)ensureCapacityWithInt:(jint)minCapacity;

- (void)throwIndexWithInt:(jint)index;

- (NSString *)toStringWithInt:(jint)stride;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgApacheLuceneIndexMemoryMemoryIndex_ArrayIntList)

J2OBJC_FIELD_SETTER(OrgApacheLuceneIndexMemoryMemoryIndex_ArrayIntList, elements_, IOSIntArray *)

inline jlong OrgApacheLuceneIndexMemoryMemoryIndex_ArrayIntList_get_serialVersionUID();
#define OrgApacheLuceneIndexMemoryMemoryIndex_ArrayIntList_serialVersionUID 2282195016849084649LL
J2OBJC_STATIC_FIELD_CONSTANT(OrgApacheLuceneIndexMemoryMemoryIndex_ArrayIntList, serialVersionUID, jlong)

__attribute__((unused)) static void OrgApacheLuceneIndexMemoryMemoryIndex_ArrayIntList_init(OrgApacheLuceneIndexMemoryMemoryIndex_ArrayIntList *self);

__attribute__((unused)) static OrgApacheLuceneIndexMemoryMemoryIndex_ArrayIntList *new_OrgApacheLuceneIndexMemoryMemoryIndex_ArrayIntList_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static OrgApacheLuceneIndexMemoryMemoryIndex_ArrayIntList *create_OrgApacheLuceneIndexMemoryMemoryIndex_ArrayIntList_init();

__attribute__((unused)) static void OrgApacheLuceneIndexMemoryMemoryIndex_ArrayIntList_initWithInt_(OrgApacheLuceneIndexMemoryMemoryIndex_ArrayIntList *self, jint initialCapacity);

__attribute__((unused)) static OrgApacheLuceneIndexMemoryMemoryIndex_ArrayIntList *new_OrgApacheLuceneIndexMemoryMemoryIndex_ArrayIntList_initWithInt_(jint initialCapacity) NS_RETURNS_RETAINED;

__attribute__((unused)) static OrgApacheLuceneIndexMemoryMemoryIndex_ArrayIntList *create_OrgApacheLuceneIndexMemoryMemoryIndex_ArrayIntList_initWithInt_(jint initialCapacity);

__attribute__((unused)) static void OrgApacheLuceneIndexMemoryMemoryIndex_ArrayIntList_ensureCapacityWithInt_(OrgApacheLuceneIndexMemoryMemoryIndex_ArrayIntList *self, jint minCapacity);

__attribute__((unused)) static void OrgApacheLuceneIndexMemoryMemoryIndex_ArrayIntList_throwIndexWithInt_(OrgApacheLuceneIndexMemoryMemoryIndex_ArrayIntList *self, jint index);

J2OBJC_TYPE_LITERAL_HEADER(OrgApacheLuceneIndexMemoryMemoryIndex_ArrayIntList)

@interface OrgApacheLuceneIndexMemoryMemoryIndex_MemoryIndexReader : OrgApacheLuceneIndexIndexReader {
 @public
  OrgApacheLuceneIndexMemoryMemoryIndex *this$0_;
  OrgApacheLuceneSearchSearcher *searcher_;
  IOSByteArray *cachedNorms_;
  NSString *cachedFieldName_;
  OrgApacheLuceneSearchSimilarity *cachedSimilarity_;
}

- (instancetype)initWithOrgApacheLuceneIndexMemoryMemoryIndex:(OrgApacheLuceneIndexMemoryMemoryIndex *)outer$;

- (OrgApacheLuceneIndexMemoryMemoryIndex_Info *)getInfoWithNSString:(NSString *)fieldName;

- (OrgApacheLuceneIndexMemoryMemoryIndex_Info *)getInfoWithInt:(jint)pos;

- (jint)docFreqWithOrgApacheLuceneIndexTerm:(OrgApacheLuceneIndexTerm *)term;

- (OrgApacheLuceneIndexTermEnum *)terms;

- (OrgApacheLuceneIndexTermEnum *)termsWithOrgApacheLuceneIndexTerm:(OrgApacheLuceneIndexTerm *)term;

- (id<OrgApacheLuceneIndexTermPositions>)termPositions;

- (id<OrgApacheLuceneIndexTermDocs>)termDocs;

- (IOSObjectArray *)getTermFreqVectorsWithInt:(jint)docNumber;

- (void)getTermFreqVectorWithInt:(jint)docNumber
withOrgApacheLuceneIndexTermVectorMapper:(OrgApacheLuceneIndexTermVectorMapper *)mapper;

- (void)getTermFreqVectorWithInt:(jint)docNumber
                    withNSString:(NSString *)field
withOrgApacheLuceneIndexTermVectorMapper:(OrgApacheLuceneIndexTermVectorMapper *)mapper;

- (id<OrgApacheLuceneIndexTermFreqVector>)getTermFreqVectorWithInt:(jint)docNumber
                                                      withNSString:(NSString *)fieldName;

- (OrgApacheLuceneSearchSimilarity *)getSimilarity;

- (void)setSearcherWithOrgApacheLuceneSearchSearcher:(OrgApacheLuceneSearchSearcher *)searcher;

- (IOSByteArray *)normsWithNSString:(NSString *)fieldName;

- (void)normsWithNSString:(NSString *)fieldName
            withByteArray:(IOSByteArray *)bytes
                  withInt:(jint)offset;

- (void)doSetNormWithInt:(jint)doc
            withNSString:(NSString *)fieldName
                withByte:(jbyte)value;

- (jint)numDocs;

- (jint)maxDoc;

- (OrgApacheLuceneDocumentDocument *)documentWithInt:(jint)n;

- (OrgApacheLuceneDocumentDocument *)documentWithInt:(jint)n
            withOrgApacheLuceneDocumentFieldSelector:(id<OrgApacheLuceneDocumentFieldSelector>)fieldSelector;

- (jboolean)isDeletedWithInt:(jint)n;

- (jboolean)hasDeletions;

- (void)doDeleteWithInt:(jint)docNum;

- (void)doUndeleteAll;

- (void)doCommitWithJavaUtilMap:(id<JavaUtilMap>)commitUserData;

- (void)doClose;

- (id<JavaUtilCollection>)getFieldNamesWithOrgApacheLuceneIndexIndexReader_FieldOption:(OrgApacheLuceneIndexIndexReader_FieldOption *)fieldOption;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgApacheLuceneIndexMemoryMemoryIndex_MemoryIndexReader)

J2OBJC_FIELD_SETTER(OrgApacheLuceneIndexMemoryMemoryIndex_MemoryIndexReader, searcher_, OrgApacheLuceneSearchSearcher *)
J2OBJC_FIELD_SETTER(OrgApacheLuceneIndexMemoryMemoryIndex_MemoryIndexReader, cachedNorms_, IOSByteArray *)
J2OBJC_FIELD_SETTER(OrgApacheLuceneIndexMemoryMemoryIndex_MemoryIndexReader, cachedFieldName_, NSString *)
J2OBJC_FIELD_SETTER(OrgApacheLuceneIndexMemoryMemoryIndex_MemoryIndexReader, cachedSimilarity_, OrgApacheLuceneSearchSimilarity *)

__attribute__((unused)) static void OrgApacheLuceneIndexMemoryMemoryIndex_MemoryIndexReader_initWithOrgApacheLuceneIndexMemoryMemoryIndex_(OrgApacheLuceneIndexMemoryMemoryIndex_MemoryIndexReader *self, OrgApacheLuceneIndexMemoryMemoryIndex *outer$);

__attribute__((unused)) static OrgApacheLuceneIndexMemoryMemoryIndex_MemoryIndexReader *new_OrgApacheLuceneIndexMemoryMemoryIndex_MemoryIndexReader_initWithOrgApacheLuceneIndexMemoryMemoryIndex_(OrgApacheLuceneIndexMemoryMemoryIndex *outer$) NS_RETURNS_RETAINED;

__attribute__((unused)) static OrgApacheLuceneIndexMemoryMemoryIndex_MemoryIndexReader *create_OrgApacheLuceneIndexMemoryMemoryIndex_MemoryIndexReader_initWithOrgApacheLuceneIndexMemoryMemoryIndex_(OrgApacheLuceneIndexMemoryMemoryIndex *outer$);

__attribute__((unused)) static OrgApacheLuceneIndexMemoryMemoryIndex_Info *OrgApacheLuceneIndexMemoryMemoryIndex_MemoryIndexReader_getInfoWithNSString_(OrgApacheLuceneIndexMemoryMemoryIndex_MemoryIndexReader *self, NSString *fieldName);

__attribute__((unused)) static OrgApacheLuceneIndexMemoryMemoryIndex_Info *OrgApacheLuceneIndexMemoryMemoryIndex_MemoryIndexReader_getInfoWithInt_(OrgApacheLuceneIndexMemoryMemoryIndex_MemoryIndexReader *self, jint pos);

__attribute__((unused)) static OrgApacheLuceneSearchSimilarity *OrgApacheLuceneIndexMemoryMemoryIndex_MemoryIndexReader_getSimilarity(OrgApacheLuceneIndexMemoryMemoryIndex_MemoryIndexReader *self);

__attribute__((unused)) static void OrgApacheLuceneIndexMemoryMemoryIndex_MemoryIndexReader_setSearcherWithOrgApacheLuceneSearchSearcher_(OrgApacheLuceneIndexMemoryMemoryIndex_MemoryIndexReader *self, OrgApacheLuceneSearchSearcher *searcher);

J2OBJC_TYPE_LITERAL_HEADER(OrgApacheLuceneIndexMemoryMemoryIndex_MemoryIndexReader)

@interface OrgApacheLuceneIndexMemoryMemoryIndex_MemoryIndexReader_1 : OrgApacheLuceneIndexTermEnum {
 @public
  OrgApacheLuceneIndexMemoryMemoryIndex_MemoryIndexReader *this$0_;
  jint srtTermsIdx_;
  jint srtFldsIdx_;
}

- (instancetype)initWithOrgApacheLuceneIndexMemoryMemoryIndex_MemoryIndexReader:(OrgApacheLuceneIndexMemoryMemoryIndex_MemoryIndexReader *)outer$
                                                                        withInt:(jint)capture$0
                                                                        withInt:(jint)capture$1;

- (jboolean)next;

- (OrgApacheLuceneIndexTerm *)term;

- (jint)docFreq;

- (void)close;

- (OrgApacheLuceneIndexTerm *)createTermWithOrgApacheLuceneIndexMemoryMemoryIndex_Info:(OrgApacheLuceneIndexMemoryMemoryIndex_Info *)info
                                                                               withInt:(jint)pos
                                                                          withNSString:(NSString *)text;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgApacheLuceneIndexMemoryMemoryIndex_MemoryIndexReader_1)

__attribute__((unused)) static void OrgApacheLuceneIndexMemoryMemoryIndex_MemoryIndexReader_1_initWithOrgApacheLuceneIndexMemoryMemoryIndex_MemoryIndexReader_withInt_withInt_(OrgApacheLuceneIndexMemoryMemoryIndex_MemoryIndexReader_1 *self, OrgApacheLuceneIndexMemoryMemoryIndex_MemoryIndexReader *outer$, jint capture$0, jint capture$1);

__attribute__((unused)) static OrgApacheLuceneIndexMemoryMemoryIndex_MemoryIndexReader_1 *new_OrgApacheLuceneIndexMemoryMemoryIndex_MemoryIndexReader_1_initWithOrgApacheLuceneIndexMemoryMemoryIndex_MemoryIndexReader_withInt_withInt_(OrgApacheLuceneIndexMemoryMemoryIndex_MemoryIndexReader *outer$, jint capture$0, jint capture$1) NS_RETURNS_RETAINED;

__attribute__((unused)) static OrgApacheLuceneIndexMemoryMemoryIndex_MemoryIndexReader_1 *create_OrgApacheLuceneIndexMemoryMemoryIndex_MemoryIndexReader_1_initWithOrgApacheLuceneIndexMemoryMemoryIndex_MemoryIndexReader_withInt_withInt_(OrgApacheLuceneIndexMemoryMemoryIndex_MemoryIndexReader *outer$, jint capture$0, jint capture$1);

__attribute__((unused)) static OrgApacheLuceneIndexTerm *OrgApacheLuceneIndexMemoryMemoryIndex_MemoryIndexReader_1_createTermWithOrgApacheLuceneIndexMemoryMemoryIndex_Info_withInt_withNSString_(OrgApacheLuceneIndexMemoryMemoryIndex_MemoryIndexReader_1 *self, OrgApacheLuceneIndexMemoryMemoryIndex_Info *info, jint pos, NSString *text);

@interface OrgApacheLuceneIndexMemoryMemoryIndex_MemoryIndexReader_2 : NSObject < OrgApacheLuceneIndexTermPositions > {
 @public
  OrgApacheLuceneIndexMemoryMemoryIndex_MemoryIndexReader *this$0_;
  jboolean hasNext_;
  jint cursor_;
  OrgApacheLuceneIndexMemoryMemoryIndex_ArrayIntList *current_;
  OrgApacheLuceneIndexTerm *term_;
}

- (instancetype)initWithOrgApacheLuceneIndexMemoryMemoryIndex_MemoryIndexReader:(OrgApacheLuceneIndexMemoryMemoryIndex_MemoryIndexReader *)outer$;

- (void)seekWithOrgApacheLuceneIndexTerm:(OrgApacheLuceneIndexTerm *)term;

- (void)seekWithOrgApacheLuceneIndexTermEnum:(OrgApacheLuceneIndexTermEnum *)termEnum;

- (jint)doc;

- (jint)freq;

- (jboolean)next;

- (jint)readWithIntArray:(IOSIntArray *)docs
            withIntArray:(IOSIntArray *)freqs;

- (jboolean)skipToWithInt:(jint)target;

- (void)close;

- (jint)nextPosition;

- (jint)getPayloadLength;

- (IOSByteArray *)getPayloadWithByteArray:(IOSByteArray *)data
                                  withInt:(jint)offset;

- (jboolean)isPayloadAvailable;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgApacheLuceneIndexMemoryMemoryIndex_MemoryIndexReader_2)

J2OBJC_FIELD_SETTER(OrgApacheLuceneIndexMemoryMemoryIndex_MemoryIndexReader_2, current_, OrgApacheLuceneIndexMemoryMemoryIndex_ArrayIntList *)
J2OBJC_FIELD_SETTER(OrgApacheLuceneIndexMemoryMemoryIndex_MemoryIndexReader_2, term_, OrgApacheLuceneIndexTerm *)

__attribute__((unused)) static void OrgApacheLuceneIndexMemoryMemoryIndex_MemoryIndexReader_2_initWithOrgApacheLuceneIndexMemoryMemoryIndex_MemoryIndexReader_(OrgApacheLuceneIndexMemoryMemoryIndex_MemoryIndexReader_2 *self, OrgApacheLuceneIndexMemoryMemoryIndex_MemoryIndexReader *outer$);

__attribute__((unused)) static OrgApacheLuceneIndexMemoryMemoryIndex_MemoryIndexReader_2 *new_OrgApacheLuceneIndexMemoryMemoryIndex_MemoryIndexReader_2_initWithOrgApacheLuceneIndexMemoryMemoryIndex_MemoryIndexReader_(OrgApacheLuceneIndexMemoryMemoryIndex_MemoryIndexReader *outer$) NS_RETURNS_RETAINED;

__attribute__((unused)) static OrgApacheLuceneIndexMemoryMemoryIndex_MemoryIndexReader_2 *create_OrgApacheLuceneIndexMemoryMemoryIndex_MemoryIndexReader_2_initWithOrgApacheLuceneIndexMemoryMemoryIndex_MemoryIndexReader_(OrgApacheLuceneIndexMemoryMemoryIndex_MemoryIndexReader *outer$);

@interface OrgApacheLuceneIndexMemoryMemoryIndex_MemoryIndexReader_3 : NSObject < OrgApacheLuceneIndexTermPositionVector > {
 @public
  OrgApacheLuceneIndexMemoryMemoryIndex_MemoryIndexReader *this$0_;
  NSString *val$fieldName_;
  IOSObjectArray *sortedTerms_;
}

- (instancetype)initWithOrgApacheLuceneIndexMemoryMemoryIndex_MemoryIndexReader:(OrgApacheLuceneIndexMemoryMemoryIndex_MemoryIndexReader *)outer$
                                 withOrgApacheLuceneIndexMemoryMemoryIndex_Info:(OrgApacheLuceneIndexMemoryMemoryIndex_Info *)capture$0
                                                                   withNSString:(NSString *)capture$1;

- (NSString *)getField;

- (jint)size;

- (IOSObjectArray *)getTerms;

- (IOSIntArray *)getTermFrequencies;

- (jint)indexOfWithNSString:(NSString *)term;

- (IOSIntArray *)indexesOfWithNSStringArray:(IOSObjectArray *)terms
                                    withInt:(jint)start
                                    withInt:(jint)len;

- (IOSIntArray *)getTermPositionsWithInt:(jint)index;

- (IOSObjectArray *)getOffsetsWithInt:(jint)index;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgApacheLuceneIndexMemoryMemoryIndex_MemoryIndexReader_3)

J2OBJC_FIELD_SETTER(OrgApacheLuceneIndexMemoryMemoryIndex_MemoryIndexReader_3, sortedTerms_, IOSObjectArray *)

__attribute__((unused)) static void OrgApacheLuceneIndexMemoryMemoryIndex_MemoryIndexReader_3_initWithOrgApacheLuceneIndexMemoryMemoryIndex_MemoryIndexReader_withOrgApacheLuceneIndexMemoryMemoryIndex_Info_withNSString_(OrgApacheLuceneIndexMemoryMemoryIndex_MemoryIndexReader_3 *self, OrgApacheLuceneIndexMemoryMemoryIndex_MemoryIndexReader *outer$, OrgApacheLuceneIndexMemoryMemoryIndex_Info *capture$0, NSString *capture$1);

__attribute__((unused)) static OrgApacheLuceneIndexMemoryMemoryIndex_MemoryIndexReader_3 *new_OrgApacheLuceneIndexMemoryMemoryIndex_MemoryIndexReader_3_initWithOrgApacheLuceneIndexMemoryMemoryIndex_MemoryIndexReader_withOrgApacheLuceneIndexMemoryMemoryIndex_Info_withNSString_(OrgApacheLuceneIndexMemoryMemoryIndex_MemoryIndexReader *outer$, OrgApacheLuceneIndexMemoryMemoryIndex_Info *capture$0, NSString *capture$1) NS_RETURNS_RETAINED;

__attribute__((unused)) static OrgApacheLuceneIndexMemoryMemoryIndex_MemoryIndexReader_3 *create_OrgApacheLuceneIndexMemoryMemoryIndex_MemoryIndexReader_3_initWithOrgApacheLuceneIndexMemoryMemoryIndex_MemoryIndexReader_withOrgApacheLuceneIndexMemoryMemoryIndex_Info_withNSString_(OrgApacheLuceneIndexMemoryMemoryIndex_MemoryIndexReader *outer$, OrgApacheLuceneIndexMemoryMemoryIndex_Info *capture$0, NSString *capture$1);

@interface OrgApacheLuceneIndexMemoryMemoryIndex_VM : NSObject

- (instancetype)init;

+ (jint)sizeOfWithInt:(jint)n;

+ (jint)sizeOfObjectWithInt:(jint)n;

+ (jint)sizeOfObjectArrayWithInt:(jint)len;

+ (jint)sizeOfCharArrayWithInt:(jint)len;

+ (jint)sizeOfIntArrayWithInt:(jint)len;

+ (jint)sizeOfStringWithInt:(jint)len;

+ (jint)sizeOfHashMapWithInt:(jint)len;

+ (jint)sizeOfArrayListWithInt:(jint)len;

+ (jint)sizeOfArrayIntListWithInt:(jint)len;

+ (jdouble)log2WithDouble:(jdouble)value;

@end

J2OBJC_STATIC_INIT(OrgApacheLuceneIndexMemoryMemoryIndex_VM)

inline jint OrgApacheLuceneIndexMemoryMemoryIndex_VM_get_PTR();
static jint OrgApacheLuceneIndexMemoryMemoryIndex_VM_PTR;
J2OBJC_STATIC_FIELD_PRIMITIVE_FINAL(OrgApacheLuceneIndexMemoryMemoryIndex_VM, PTR, jint)

inline jint OrgApacheLuceneIndexMemoryMemoryIndex_VM_get_BOOLEAN();
#define OrgApacheLuceneIndexMemoryMemoryIndex_VM_BOOLEAN 1
J2OBJC_STATIC_FIELD_CONSTANT(OrgApacheLuceneIndexMemoryMemoryIndex_VM, BOOLEAN, jint)

inline jint OrgApacheLuceneIndexMemoryMemoryIndex_VM_get_BYTE();
#define OrgApacheLuceneIndexMemoryMemoryIndex_VM_BYTE 1
J2OBJC_STATIC_FIELD_CONSTANT(OrgApacheLuceneIndexMemoryMemoryIndex_VM, BYTE, jint)

inline jint OrgApacheLuceneIndexMemoryMemoryIndex_VM_get_CHAR();
#define OrgApacheLuceneIndexMemoryMemoryIndex_VM_CHAR 2
J2OBJC_STATIC_FIELD_CONSTANT(OrgApacheLuceneIndexMemoryMemoryIndex_VM, CHAR, jint)

inline jint OrgApacheLuceneIndexMemoryMemoryIndex_VM_get_SHORT();
#define OrgApacheLuceneIndexMemoryMemoryIndex_VM_SHORT 2
J2OBJC_STATIC_FIELD_CONSTANT(OrgApacheLuceneIndexMemoryMemoryIndex_VM, SHORT, jint)

inline jint OrgApacheLuceneIndexMemoryMemoryIndex_VM_get_INT();
#define OrgApacheLuceneIndexMemoryMemoryIndex_VM_INT 4
J2OBJC_STATIC_FIELD_CONSTANT(OrgApacheLuceneIndexMemoryMemoryIndex_VM, INT, jint)

inline jint OrgApacheLuceneIndexMemoryMemoryIndex_VM_get_LONG();
#define OrgApacheLuceneIndexMemoryMemoryIndex_VM_LONG 8
J2OBJC_STATIC_FIELD_CONSTANT(OrgApacheLuceneIndexMemoryMemoryIndex_VM, LONG, jint)

inline jint OrgApacheLuceneIndexMemoryMemoryIndex_VM_get_FLOAT();
#define OrgApacheLuceneIndexMemoryMemoryIndex_VM_FLOAT 4
J2OBJC_STATIC_FIELD_CONSTANT(OrgApacheLuceneIndexMemoryMemoryIndex_VM, FLOAT, jint)

inline jint OrgApacheLuceneIndexMemoryMemoryIndex_VM_get_DOUBLE();
#define OrgApacheLuceneIndexMemoryMemoryIndex_VM_DOUBLE 8
J2OBJC_STATIC_FIELD_CONSTANT(OrgApacheLuceneIndexMemoryMemoryIndex_VM, DOUBLE, jint)

inline jint OrgApacheLuceneIndexMemoryMemoryIndex_VM_get_LOG_PTR();
static jint OrgApacheLuceneIndexMemoryMemoryIndex_VM_LOG_PTR;
J2OBJC_STATIC_FIELD_PRIMITIVE_FINAL(OrgApacheLuceneIndexMemoryMemoryIndex_VM, LOG_PTR, jint)

inline jint OrgApacheLuceneIndexMemoryMemoryIndex_VM_get_OBJECT_HEADER();
static jint OrgApacheLuceneIndexMemoryMemoryIndex_VM_OBJECT_HEADER;
J2OBJC_STATIC_FIELD_PRIMITIVE_FINAL(OrgApacheLuceneIndexMemoryMemoryIndex_VM, OBJECT_HEADER, jint)

__attribute__((unused)) static void OrgApacheLuceneIndexMemoryMemoryIndex_VM_init(OrgApacheLuceneIndexMemoryMemoryIndex_VM *self);

__attribute__((unused)) static OrgApacheLuceneIndexMemoryMemoryIndex_VM *new_OrgApacheLuceneIndexMemoryMemoryIndex_VM_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static OrgApacheLuceneIndexMemoryMemoryIndex_VM *create_OrgApacheLuceneIndexMemoryMemoryIndex_VM_init();

__attribute__((unused)) static jint OrgApacheLuceneIndexMemoryMemoryIndex_VM_sizeOfWithInt_(jint n);

__attribute__((unused)) static jint OrgApacheLuceneIndexMemoryMemoryIndex_VM_sizeOfObjectWithInt_(jint n);

__attribute__((unused)) static jint OrgApacheLuceneIndexMemoryMemoryIndex_VM_sizeOfObjectArrayWithInt_(jint len);

__attribute__((unused)) static jint OrgApacheLuceneIndexMemoryMemoryIndex_VM_sizeOfCharArrayWithInt_(jint len);

__attribute__((unused)) static jint OrgApacheLuceneIndexMemoryMemoryIndex_VM_sizeOfIntArrayWithInt_(jint len);

__attribute__((unused)) static jint OrgApacheLuceneIndexMemoryMemoryIndex_VM_sizeOfStringWithInt_(jint len);

__attribute__((unused)) static jint OrgApacheLuceneIndexMemoryMemoryIndex_VM_sizeOfHashMapWithInt_(jint len);

__attribute__((unused)) static jint OrgApacheLuceneIndexMemoryMemoryIndex_VM_sizeOfArrayListWithInt_(jint len);

__attribute__((unused)) static jint OrgApacheLuceneIndexMemoryMemoryIndex_VM_sizeOfArrayIntListWithInt_(jint len);

__attribute__((unused)) static jdouble OrgApacheLuceneIndexMemoryMemoryIndex_VM_log2WithDouble_(jdouble value);

J2OBJC_TYPE_LITERAL_HEADER(OrgApacheLuceneIndexMemoryMemoryIndex_VM)

J2OBJC_INITIALIZED_DEFN(OrgApacheLuceneIndexMemoryMemoryIndex)

@implementation OrgApacheLuceneIndexMemoryMemoryIndex

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  OrgApacheLuceneIndexMemoryMemoryIndex_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (instancetype)initWithBoolean:(jboolean)storeOffsets {
  OrgApacheLuceneIndexMemoryMemoryIndex_initWithBoolean_(self, storeOffsets);
  return self;
}

- (void)addFieldWithNSString:(NSString *)fieldName
                withNSString:(NSString *)text
withOrgApacheLuceneAnalysisAnalyzer:(OrgApacheLuceneAnalysisAnalyzer *)analyzer {
  if (fieldName == nil) @throw new_JavaLangIllegalArgumentException_initWithNSString_(@"fieldName must not be null");
  if (text == nil) @throw new_JavaLangIllegalArgumentException_initWithNSString_(@"text must not be null");
  if (analyzer == nil) @throw new_JavaLangIllegalArgumentException_initWithNSString_(@"analyzer must not be null");
  OrgApacheLuceneAnalysisTokenStream *stream;
  @try {
    stream = [analyzer reusableTokenStreamWithNSString:fieldName withJavaIoReader:new_JavaIoStringReader_initWithNSString_(text)];
  }
  @catch (JavaIoIOException *ex) {
    @throw new_JavaLangRuntimeException_initWithNSException_(ex);
  }
  [self addFieldWithNSString:fieldName withOrgApacheLuceneAnalysisTokenStream:stream];
}

- (OrgApacheLuceneAnalysisTokenStream *)keywordTokenStreamWithJavaUtilCollection:(id<JavaUtilCollection>)keywords {
  if (keywords == nil) @throw new_JavaLangIllegalArgumentException_initWithNSString_(@"keywords must not be null");
  return new_OrgApacheLuceneIndexMemoryMemoryIndex_2_initWithJavaUtilCollection_(keywords);
}

- (void)addFieldWithNSString:(NSString *)fieldName
withOrgApacheLuceneAnalysisTokenStream:(OrgApacheLuceneAnalysisTokenStream *)stream {
  [self addFieldWithNSString:fieldName withOrgApacheLuceneAnalysisTokenStream:stream withFloat:1.0f];
}

- (void)addFieldWithNSString:(NSString *)fieldName
withOrgApacheLuceneAnalysisTokenStream:(OrgApacheLuceneAnalysisTokenStream *)stream
                   withFloat:(jfloat)boost {
  @try {
    if (fieldName == nil) @throw new_JavaLangIllegalArgumentException_initWithNSString_(@"fieldName must not be null");
    if (stream == nil) @throw new_JavaLangIllegalArgumentException_initWithNSString_(@"token stream must not be null");
    if (boost <= 0.0f) @throw new_JavaLangIllegalArgumentException_initWithNSString_(@"boost factor must be greater than 0.0");
    if ([((JavaUtilHashMap *) nil_chk(fields_)) getWithId:fieldName] != nil) @throw new_JavaLangIllegalArgumentException_initWithNSString_(@"field must not be added more than once");
    JavaUtilHashMap *terms = new_JavaUtilHashMap_init();
    jint numTokens = 0;
    jint numOverlapTokens = 0;
    jint pos = -1;
    id<OrgApacheLuceneAnalysisTokenattributesCharTermAttribute> termAtt = ((id<OrgApacheLuceneAnalysisTokenattributesCharTermAttribute>) [stream addAttributeWithIOSClass:OrgApacheLuceneAnalysisTokenattributesCharTermAttribute_class_()]);
    id<OrgApacheLuceneAnalysisTokenattributesPositionIncrementAttribute> posIncrAttribute = ((id<OrgApacheLuceneAnalysisTokenattributesPositionIncrementAttribute>) [stream addAttributeWithIOSClass:OrgApacheLuceneAnalysisTokenattributesPositionIncrementAttribute_class_()]);
    id<OrgApacheLuceneAnalysisTokenattributesOffsetAttribute> offsetAtt = ((id<OrgApacheLuceneAnalysisTokenattributesOffsetAttribute>) [stream addAttributeWithIOSClass:OrgApacheLuceneAnalysisTokenattributesOffsetAttribute_class_()]);
    [stream reset];
    while ([stream incrementToken]) {
      NSString *term = [((id<OrgApacheLuceneAnalysisTokenattributesCharTermAttribute>) nil_chk(termAtt)) description];
      if ([((NSString *) nil_chk(term)) java_length] == 0) continue;
      numTokens++;
      jint posIncr = [((id<OrgApacheLuceneAnalysisTokenattributesPositionIncrementAttribute>) nil_chk(posIncrAttribute)) getPositionIncrement];
      if (posIncr == 0) numOverlapTokens++;
      pos += posIncr;
      OrgApacheLuceneIndexMemoryMemoryIndex_ArrayIntList *positions = [terms getWithId:term];
      if (positions == nil) {
        positions = new_OrgApacheLuceneIndexMemoryMemoryIndex_ArrayIntList_initWithInt_(stride_);
        (void) [terms putWithId:term withId:positions];
      }
      if (stride_ == 1) {
        [positions addWithInt:pos];
      }
      else {
        [positions addWithInt:pos withInt:[((id<OrgApacheLuceneAnalysisTokenattributesOffsetAttribute>) nil_chk(offsetAtt)) startOffset] withInt:[offsetAtt endOffset]];
      }
    }
    [stream end];
    if (numTokens > 0) {
      boost = boost * OrgApacheLuceneIndexMemoryMemoryIndex_docBoost;
      (void) [fields_ putWithId:fieldName withId:new_OrgApacheLuceneIndexMemoryMemoryIndex_Info_initWithJavaUtilHashMap_withInt_withInt_withFloat_(terms, numTokens, numOverlapTokens, boost)];
      sortedFields_ = nil;
    }
  }
  @catch (JavaIoIOException *e) {
    @throw new_JavaLangRuntimeException_initWithNSException_(e);
  }
  @finally {
    @try {
      if (stream != nil) [stream close];
    }
    @catch (JavaIoIOException *e2) {
      @throw new_JavaLangRuntimeException_initWithNSException_(e2);
    }
  }
}

- (OrgApacheLuceneSearchIndexSearcher *)createSearcher {
  OrgApacheLuceneIndexMemoryMemoryIndex_MemoryIndexReader *reader = new_OrgApacheLuceneIndexMemoryMemoryIndex_MemoryIndexReader_initWithOrgApacheLuceneIndexMemoryMemoryIndex_(self);
  OrgApacheLuceneSearchIndexSearcher *searcher = new_OrgApacheLuceneSearchIndexSearcher_initWithOrgApacheLuceneIndexIndexReader_(reader);
  OrgApacheLuceneIndexMemoryMemoryIndex_MemoryIndexReader_setSearcherWithOrgApacheLuceneSearchSearcher_(reader, searcher);
  return searcher;
}

- (jfloat)searchWithOrgApacheLuceneSearchQuery:(OrgApacheLuceneSearchQuery *)query {
  if (query == nil) @throw new_JavaLangIllegalArgumentException_initWithNSString_(@"query must not be null");
  OrgApacheLuceneSearchSearcher *searcher = [self createSearcher];
  @try {
    IOSFloatArray *scores = [IOSFloatArray newArrayWithLength:1];
    [((OrgApacheLuceneSearchSearcher *) nil_chk(searcher)) searchWithOrgApacheLuceneSearchQuery:query withOrgApacheLuceneSearchCollector:new_OrgApacheLuceneIndexMemoryMemoryIndex_3_initWithFloatArray_(scores)];
    jfloat score = IOSFloatArray_Get(scores, 0);
    return score;
  }
  @catch (JavaIoIOException *e) {
    @throw new_JavaLangRuntimeException_initWithNSException_(e);
  }
  @finally {
  }
}

- (jint)getMemorySize {
  jint PTR = JreLoadStatic(OrgApacheLuceneIndexMemoryMemoryIndex_VM, PTR);
  jint INT = OrgApacheLuceneIndexMemoryMemoryIndex_VM_INT;
  jint size = 0;
  size += OrgApacheLuceneIndexMemoryMemoryIndex_VM_sizeOfObjectWithInt_(2 * PTR + INT);
  if (sortedFields_ != nil) size += OrgApacheLuceneIndexMemoryMemoryIndex_VM_sizeOfObjectArrayWithInt_(sortedFields_->size_);
  size += OrgApacheLuceneIndexMemoryMemoryIndex_VM_sizeOfHashMapWithInt_([((JavaUtilHashMap *) nil_chk(fields_)) size]);
  for (id<JavaUtilMap_Entry> __strong entry_ in nil_chk([fields_ entrySet])) {
    OrgApacheLuceneIndexMemoryMemoryIndex_Info *info = [((id<JavaUtilMap_Entry>) nil_chk(entry_)) getValue];
    size += OrgApacheLuceneIndexMemoryMemoryIndex_VM_sizeOfObjectWithInt_(2 * INT + 3 * PTR);
    if (((OrgApacheLuceneIndexMemoryMemoryIndex_Info *) nil_chk(info))->sortedTerms_ != nil) size += OrgApacheLuceneIndexMemoryMemoryIndex_VM_sizeOfObjectArrayWithInt_(info->sortedTerms_->size_);
    jint len = [((JavaUtilHashMap *) nil_chk(info->terms_)) size];
    size += OrgApacheLuceneIndexMemoryMemoryIndex_VM_sizeOfHashMapWithInt_(len);
    id<JavaUtilIterator> iter2 = [((id<JavaUtilSet>) nil_chk([info->terms_ entrySet])) iterator];
    while (--len >= 0) {
      id<JavaUtilMap_Entry> e = [((id<JavaUtilIterator>) nil_chk(iter2)) next];
      size += OrgApacheLuceneIndexMemoryMemoryIndex_VM_sizeOfObjectWithInt_(PTR + 3 * INT);
      OrgApacheLuceneIndexMemoryMemoryIndex_ArrayIntList *positions = [((id<JavaUtilMap_Entry>) nil_chk(e)) getValue];
      size += OrgApacheLuceneIndexMemoryMemoryIndex_VM_sizeOfArrayIntListWithInt_([((OrgApacheLuceneIndexMemoryMemoryIndex_ArrayIntList *) nil_chk(positions)) size]);
    }
  }
  return size;
}

- (jint)numPositionsWithOrgApacheLuceneIndexMemoryMemoryIndex_ArrayIntList:(OrgApacheLuceneIndexMemoryMemoryIndex_ArrayIntList *)positions {
  return OrgApacheLuceneIndexMemoryMemoryIndex_numPositionsWithOrgApacheLuceneIndexMemoryMemoryIndex_ArrayIntList_(self, positions);
}

- (void)sortFields {
  OrgApacheLuceneIndexMemoryMemoryIndex_sortFields(self);
}

+ (IOSObjectArray *)sortWithJavaUtilHashMap:(JavaUtilHashMap *)map {
  return OrgApacheLuceneIndexMemoryMemoryIndex_sortWithJavaUtilHashMap_(map);
}

- (NSString *)description {
  JavaLangStringBuilder *result = new_JavaLangStringBuilder_initWithInt_(256);
  OrgApacheLuceneIndexMemoryMemoryIndex_sortFields(self);
  jint sumChars = 0;
  jint sumPositions = 0;
  jint sumTerms = 0;
  for (jint i = 0; i < ((IOSObjectArray *) nil_chk(sortedFields_))->size_; i++) {
    id<JavaUtilMap_Entry> entry_ = IOSObjectArray_Get(sortedFields_, i);
    NSString *fieldName = [((id<JavaUtilMap_Entry>) nil_chk(entry_)) getKey];
    OrgApacheLuceneIndexMemoryMemoryIndex_Info *info = [entry_ getValue];
    [((OrgApacheLuceneIndexMemoryMemoryIndex_Info *) nil_chk(info)) sortTerms];
    (void) [result appendWithNSString:JreStrcat("$$", fieldName, @":\n")];
    jint numChars = 0;
    jint numPositions = 0;
    for (jint j = 0; j < ((IOSObjectArray *) nil_chk(info->sortedTerms_))->size_; j++) {
      id<JavaUtilMap_Entry> e = IOSObjectArray_Get(info->sortedTerms_, j);
      NSString *term = [((id<JavaUtilMap_Entry>) nil_chk(e)) getKey];
      OrgApacheLuceneIndexMemoryMemoryIndex_ArrayIntList *positions = [e getValue];
      (void) [result appendWithNSString:JreStrcat("$$$IC", @"\t'", term, @"':", OrgApacheLuceneIndexMemoryMemoryIndex_numPositionsWithOrgApacheLuceneIndexMemoryMemoryIndex_ArrayIntList_(self, positions), ':')];
      (void) [result appendWithNSString:[((OrgApacheLuceneIndexMemoryMemoryIndex_ArrayIntList *) nil_chk(positions)) toStringWithInt:stride_]];
      (void) [result appendWithNSString:@"\n"];
      numPositions += OrgApacheLuceneIndexMemoryMemoryIndex_numPositionsWithOrgApacheLuceneIndexMemoryMemoryIndex_ArrayIntList_(self, positions);
      numChars += [((NSString *) nil_chk(term)) java_length];
    }
    (void) [result appendWithNSString:JreStrcat("$I", @"\tterms=", info->sortedTerms_->size_)];
    (void) [result appendWithNSString:JreStrcat("$I", @", positions=", numPositions)];
    (void) [result appendWithNSString:JreStrcat("$F", @", Kchars=", (numChars / 1000.0f))];
    (void) [result appendWithNSString:@"\n"];
    sumPositions += numPositions;
    sumChars += numChars;
    sumTerms += ((IOSObjectArray *) nil_chk(info->sortedTerms_))->size_;
  }
  (void) [result appendWithNSString:JreStrcat("$I", @"\nfields=", sortedFields_->size_)];
  (void) [result appendWithNSString:JreStrcat("$I", @", terms=", sumTerms)];
  (void) [result appendWithNSString:JreStrcat("$I", @", positions=", sumPositions)];
  (void) [result appendWithNSString:JreStrcat("$F", @", Kchars=", (sumChars / 1000.0f))];
  return [result description];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, NULL, 0x2, -1, 0, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 1, 2, -1, -1, -1, -1 },
    { NULL, "LOrgApacheLuceneAnalysisTokenStream;", 0x1, 3, 4, -1, 5, -1, -1 },
    { NULL, "V", 0x1, 1, 6, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 1, 7, -1, -1, -1, -1 },
    { NULL, "LOrgApacheLuceneSearchIndexSearcher;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "F", 0x1, 8, 9, -1, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x2, 10, 11, -1, -1, -1, -1 },
    { NULL, "V", 0x2, -1, -1, -1, -1, -1, -1 },
    { NULL, "[LJavaUtilMap_Entry;", 0xa, 12, 13, -1, 14, -1, -1 },
    { NULL, "LNSString;", 0x1, 15, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(initWithBoolean:);
  methods[2].selector = @selector(addFieldWithNSString:withNSString:withOrgApacheLuceneAnalysisAnalyzer:);
  methods[3].selector = @selector(keywordTokenStreamWithJavaUtilCollection:);
  methods[4].selector = @selector(addFieldWithNSString:withOrgApacheLuceneAnalysisTokenStream:);
  methods[5].selector = @selector(addFieldWithNSString:withOrgApacheLuceneAnalysisTokenStream:withFloat:);
  methods[6].selector = @selector(createSearcher);
  methods[7].selector = @selector(searchWithOrgApacheLuceneSearchQuery:);
  methods[8].selector = @selector(getMemorySize);
  methods[9].selector = @selector(numPositionsWithOrgApacheLuceneIndexMemoryMemoryIndex_ArrayIntList:);
  methods[10].selector = @selector(sortFields);
  methods[11].selector = @selector(sortWithJavaUtilHashMap:);
  methods[12].selector = @selector(description);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "fields_", "LJavaUtilHashMap;", .constantValue.asLong = 0, 0x12, -1, -1, 16, -1 },
    { "sortedFields_", "[LJavaUtilMap_Entry;", .constantValue.asLong = 0, 0x82, -1, -1, 17, -1 },
    { "stride_", "I", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "docBoost", "F", .constantValue.asFloat = OrgApacheLuceneIndexMemoryMemoryIndex_docBoost, 0x1a, -1, -1, -1, -1 },
    { "serialVersionUID", "J", .constantValue.asLong = OrgApacheLuceneIndexMemoryMemoryIndex_serialVersionUID, 0x1a, -1, -1, -1, -1 },
    { "DEBUG", "Z", .constantValue.asBOOL = OrgApacheLuceneIndexMemoryMemoryIndex_DEBUG, 0x1a, -1, -1, -1, -1 },
    { "termComparator", "LJavaUtilComparator;", .constantValue.asLong = 0, 0x1a, -1, 18, 19, -1 },
    { "MATCH_ALL_TERM", "LOrgApacheLuceneIndexTerm;", .constantValue.asLong = 0, 0x1a, -1, 20, -1, -1 },
  };
  static const void *ptrTable[] = { "Z", "addField", "LNSString;LNSString;LOrgApacheLuceneAnalysisAnalyzer;", "keywordTokenStream", "LJavaUtilCollection;", "<T:Ljava/lang/Object;>(Ljava/util/Collection<TT;>;)Lorg/apache/lucene/analysis/TokenStream;", "LNSString;LOrgApacheLuceneAnalysisTokenStream;", "LNSString;LOrgApacheLuceneAnalysisTokenStream;F", "search", "LOrgApacheLuceneSearchQuery;", "numPositions", "LOrgApacheLuceneIndexMemoryMemoryIndex_ArrayIntList;", "sort", "LJavaUtilHashMap;", "<K:Ljava/lang/Object;V:Ljava/lang/Object;>(Ljava/util/HashMap<TK;TV;>;)[Ljava/util/Map$Entry<TK;TV;>;", "toString", "Ljava/util/HashMap<Ljava/lang/String;Lorg/apache/lucene/index/memory/MemoryIndex$Info;>;", "[Ljava/util/Map$Entry<Ljava/lang/String;Lorg/apache/lucene/index/memory/MemoryIndex$Info;>;", &OrgApacheLuceneIndexMemoryMemoryIndex_termComparator, "Ljava/util/Comparator<Ljava/lang/Object;>;", &OrgApacheLuceneIndexMemoryMemoryIndex_MATCH_ALL_TERM, "LOrgApacheLuceneIndexMemoryMemoryIndex_Info;LOrgApacheLuceneIndexMemoryMemoryIndex_ArrayIntList;LOrgApacheLuceneIndexMemoryMemoryIndex_MemoryIndexReader;LOrgApacheLuceneIndexMemoryMemoryIndex_VM;" };
  static const J2ObjcClassInfo _OrgApacheLuceneIndexMemoryMemoryIndex = { "MemoryIndex", "org.apache.lucene.index.memory", ptrTable, methods, fields, 7, 0x1, 13, 8, -1, 21, -1, -1, -1 };
  return &_OrgApacheLuceneIndexMemoryMemoryIndex;
}

+ (void)initialize {
  if (self == [OrgApacheLuceneIndexMemoryMemoryIndex class]) {
    OrgApacheLuceneIndexMemoryMemoryIndex_termComparator = new_OrgApacheLuceneIndexMemoryMemoryIndex_1_init();
    OrgApacheLuceneIndexMemoryMemoryIndex_MATCH_ALL_TERM = new_OrgApacheLuceneIndexTerm_initWithNSString_(@"");
    J2OBJC_SET_INITIALIZED(OrgApacheLuceneIndexMemoryMemoryIndex)
  }
}

@end

void OrgApacheLuceneIndexMemoryMemoryIndex_init(OrgApacheLuceneIndexMemoryMemoryIndex *self) {
  OrgApacheLuceneIndexMemoryMemoryIndex_initWithBoolean_(self, false);
}

OrgApacheLuceneIndexMemoryMemoryIndex *new_OrgApacheLuceneIndexMemoryMemoryIndex_init() {
  J2OBJC_NEW_IMPL(OrgApacheLuceneIndexMemoryMemoryIndex, init)
}

OrgApacheLuceneIndexMemoryMemoryIndex *create_OrgApacheLuceneIndexMemoryMemoryIndex_init() {
  J2OBJC_CREATE_IMPL(OrgApacheLuceneIndexMemoryMemoryIndex, init)
}

void OrgApacheLuceneIndexMemoryMemoryIndex_initWithBoolean_(OrgApacheLuceneIndexMemoryMemoryIndex *self, jboolean storeOffsets) {
  NSObject_init(self);
  self->fields_ = new_JavaUtilHashMap_init();
  self->stride_ = storeOffsets ? 3 : 1;
}

OrgApacheLuceneIndexMemoryMemoryIndex *new_OrgApacheLuceneIndexMemoryMemoryIndex_initWithBoolean_(jboolean storeOffsets) {
  J2OBJC_NEW_IMPL(OrgApacheLuceneIndexMemoryMemoryIndex, initWithBoolean_, storeOffsets)
}

OrgApacheLuceneIndexMemoryMemoryIndex *create_OrgApacheLuceneIndexMemoryMemoryIndex_initWithBoolean_(jboolean storeOffsets) {
  J2OBJC_CREATE_IMPL(OrgApacheLuceneIndexMemoryMemoryIndex, initWithBoolean_, storeOffsets)
}

jint OrgApacheLuceneIndexMemoryMemoryIndex_numPositionsWithOrgApacheLuceneIndexMemoryMemoryIndex_ArrayIntList_(OrgApacheLuceneIndexMemoryMemoryIndex *self, OrgApacheLuceneIndexMemoryMemoryIndex_ArrayIntList *positions) {
  return [((OrgApacheLuceneIndexMemoryMemoryIndex_ArrayIntList *) nil_chk(positions)) size] / self->stride_;
}

void OrgApacheLuceneIndexMemoryMemoryIndex_sortFields(OrgApacheLuceneIndexMemoryMemoryIndex *self) {
  if (self->sortedFields_ == nil) self->sortedFields_ = OrgApacheLuceneIndexMemoryMemoryIndex_sortWithJavaUtilHashMap_(self->fields_);
}

IOSObjectArray *OrgApacheLuceneIndexMemoryMemoryIndex_sortWithJavaUtilHashMap_(JavaUtilHashMap *map) {
  OrgApacheLuceneIndexMemoryMemoryIndex_initialize();
  jint size = [((JavaUtilHashMap *) nil_chk(map)) size];
  IOSObjectArray *entries = [IOSObjectArray newArrayWithLength:size type:JavaUtilMap_Entry_class_()];
  id<JavaUtilIterator> iter = [((id<JavaUtilSet>) nil_chk([map entrySet])) iterator];
  for (jint i = 0; i < size; i++) {
    (void) IOSObjectArray_Set(entries, i, [((id<JavaUtilIterator>) nil_chk(iter)) next]);
  }
  if (size > 1) OrgApacheLuceneUtilArrayUtil_quickSortWithNSObjectArray_withJavaUtilComparator_(entries, OrgApacheLuceneIndexMemoryMemoryIndex_termComparator);
  return entries;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheLuceneIndexMemoryMemoryIndex)

@implementation OrgApacheLuceneIndexMemoryMemoryIndex_1

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  OrgApacheLuceneIndexMemoryMemoryIndex_1_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (jint)compareWithId:(id)o1
               withId:(id)o2 {
  if ([JavaUtilMap_Entry_class_() isInstance:o1]) o1 = [((id<JavaUtilMap_Entry>) nil_chk(((id<JavaUtilMap_Entry>) cast_check(o1, JavaUtilMap_Entry_class_())))) getKey];
  if ([JavaUtilMap_Entry_class_() isInstance:o2]) o2 = [((id<JavaUtilMap_Entry>) nil_chk(((id<JavaUtilMap_Entry>) cast_check(o2, JavaUtilMap_Entry_class_())))) getKey];
  if (o1 == o2) return 0;
  return [((NSString *) nil_chk(((NSString *) cast_chk(o1, [NSString class])))) compareToWithId:(NSString *) cast_chk(o2, [NSString class])];
}

- (id<JavaUtilComparator>)reversed {
  return JavaUtilComparator_reversed(self);
}

- (id<JavaUtilComparator>)thenComparingWithJavaUtilComparator:(id<JavaUtilComparator>)arg0 {
  return JavaUtilComparator_thenComparingWithJavaUtilComparator_(self, arg0);
}

- (id<JavaUtilComparator>)thenComparingWithJavaUtilFunctionFunction:(id<JavaUtilFunctionFunction>)arg0
                                             withJavaUtilComparator:(id<JavaUtilComparator>)arg1 {
  return JavaUtilComparator_thenComparingWithJavaUtilFunctionFunction_withJavaUtilComparator_(self, arg0, arg1);
}

- (id<JavaUtilComparator>)thenComparingWithJavaUtilFunctionFunction:(id<JavaUtilFunctionFunction>)arg0 {
  return JavaUtilComparator_thenComparingWithJavaUtilFunctionFunction_(self, arg0);
}

- (id<JavaUtilComparator>)thenComparingIntWithJavaUtilFunctionToIntFunction:(id<JavaUtilFunctionToIntFunction>)arg0 {
  return JavaUtilComparator_thenComparingIntWithJavaUtilFunctionToIntFunction_(self, arg0);
}

- (id<JavaUtilComparator>)thenComparingLongWithJavaUtilFunctionToLongFunction:(id<JavaUtilFunctionToLongFunction>)arg0 {
  return JavaUtilComparator_thenComparingLongWithJavaUtilFunctionToLongFunction_(self, arg0);
}

- (id<JavaUtilComparator>)thenComparingDoubleWithJavaUtilFunctionToDoubleFunction:(id<JavaUtilFunctionToDoubleFunction>)arg0 {
  return JavaUtilComparator_thenComparingDoubleWithJavaUtilFunctionToDoubleFunction_(self, arg0);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x1, 0, 1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(compareWithId:withId:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "compare", "LNSObject;LNSObject;", "LOrgApacheLuceneIndexMemoryMemoryIndex;", "Ljava/lang/Object;Ljava/util/Comparator<Ljava/lang/Object;>;" };
  static const J2ObjcClassInfo _OrgApacheLuceneIndexMemoryMemoryIndex_1 = { "", "org.apache.lucene.index.memory", ptrTable, methods, NULL, 7, 0x8018, 2, 0, 2, -1, -1, 3, -1 };
  return &_OrgApacheLuceneIndexMemoryMemoryIndex_1;
}

@end

void OrgApacheLuceneIndexMemoryMemoryIndex_1_init(OrgApacheLuceneIndexMemoryMemoryIndex_1 *self) {
  NSObject_init(self);
}

OrgApacheLuceneIndexMemoryMemoryIndex_1 *new_OrgApacheLuceneIndexMemoryMemoryIndex_1_init() {
  J2OBJC_NEW_IMPL(OrgApacheLuceneIndexMemoryMemoryIndex_1, init)
}

OrgApacheLuceneIndexMemoryMemoryIndex_1 *create_OrgApacheLuceneIndexMemoryMemoryIndex_1_init() {
  J2OBJC_CREATE_IMPL(OrgApacheLuceneIndexMemoryMemoryIndex_1, init)
}

@implementation OrgApacheLuceneIndexMemoryMemoryIndex_2

- (instancetype)initWithJavaUtilCollection:(id<JavaUtilCollection>)capture$0 {
  OrgApacheLuceneIndexMemoryMemoryIndex_2_initWithJavaUtilCollection_(self, capture$0);
  return self;
}

- (jboolean)incrementToken {
  if (![((id<JavaUtilIterator>) nil_chk(iter_)) hasNext]) return false;
  id obj = [((id<JavaUtilIterator>) nil_chk(iter_)) next];
  if (obj == nil) @throw new_JavaLangIllegalArgumentException_initWithNSString_(@"keyword must not be null");
  NSString *term = [obj description];
  [self clearAttributes];
  (void) [((id<OrgApacheLuceneAnalysisTokenattributesCharTermAttribute>) nil_chk([((id<OrgApacheLuceneAnalysisTokenattributesCharTermAttribute>) nil_chk(termAtt_)) setEmpty])) appendWithNSString:term];
  [((id<OrgApacheLuceneAnalysisTokenattributesOffsetAttribute>) nil_chk(offsetAtt_)) setOffsetWithInt:start_ withInt:start_ + [termAtt_ java_length]];
  start_ += [((NSString *) nil_chk(term)) java_length] + 1;
  return true;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithJavaUtilCollection:);
  methods[1].selector = @selector(incrementToken);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "iter_", "LJavaUtilIterator;", .constantValue.asLong = 0, 0x2, -1, -1, 0, -1 },
    { "start_", "I", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "termAtt_", "LOrgApacheLuceneAnalysisTokenattributesCharTermAttribute;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "offsetAtt_", "LOrgApacheLuceneAnalysisTokenattributesOffsetAttribute;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "Ljava/util/Iterator<TT;>;", "LOrgApacheLuceneIndexMemoryMemoryIndex;", "keywordTokenStreamWithJavaUtilCollection:" };
  static const J2ObjcClassInfo _OrgApacheLuceneIndexMemoryMemoryIndex_2 = { "", "org.apache.lucene.index.memory", ptrTable, methods, fields, 7, 0x8018, 2, 4, 1, -1, 2, -1, -1 };
  return &_OrgApacheLuceneIndexMemoryMemoryIndex_2;
}

@end

void OrgApacheLuceneIndexMemoryMemoryIndex_2_initWithJavaUtilCollection_(OrgApacheLuceneIndexMemoryMemoryIndex_2 *self, id<JavaUtilCollection> capture$0) {
  OrgApacheLuceneAnalysisTokenStream_init(self);
  self->iter_ = [((id<JavaUtilCollection>) nil_chk(capture$0)) iterator];
  self->start_ = 0;
  self->termAtt_ = ((id<OrgApacheLuceneAnalysisTokenattributesCharTermAttribute>) [self addAttributeWithIOSClass:OrgApacheLuceneAnalysisTokenattributesCharTermAttribute_class_()]);
  self->offsetAtt_ = ((id<OrgApacheLuceneAnalysisTokenattributesOffsetAttribute>) [self addAttributeWithIOSClass:OrgApacheLuceneAnalysisTokenattributesOffsetAttribute_class_()]);
}

OrgApacheLuceneIndexMemoryMemoryIndex_2 *new_OrgApacheLuceneIndexMemoryMemoryIndex_2_initWithJavaUtilCollection_(id<JavaUtilCollection> capture$0) {
  J2OBJC_NEW_IMPL(OrgApacheLuceneIndexMemoryMemoryIndex_2, initWithJavaUtilCollection_, capture$0)
}

OrgApacheLuceneIndexMemoryMemoryIndex_2 *create_OrgApacheLuceneIndexMemoryMemoryIndex_2_initWithJavaUtilCollection_(id<JavaUtilCollection> capture$0) {
  J2OBJC_CREATE_IMPL(OrgApacheLuceneIndexMemoryMemoryIndex_2, initWithJavaUtilCollection_, capture$0)
}

@implementation OrgApacheLuceneIndexMemoryMemoryIndex_3

- (instancetype)initWithFloatArray:(IOSFloatArray *)capture$0 {
  OrgApacheLuceneIndexMemoryMemoryIndex_3_initWithFloatArray_(self, capture$0);
  return self;
}

- (void)collectWithInt:(jint)doc {
  *IOSFloatArray_GetRef(nil_chk(val$scores_), 0) = [((OrgApacheLuceneSearchScorer *) nil_chk(scorer_)) score];
}

- (void)setScorerWithOrgApacheLuceneSearchScorer:(OrgApacheLuceneSearchScorer *)scorer {
  self->scorer_ = scorer;
}

- (jboolean)acceptsDocsOutOfOrder {
  return true;
}

- (void)setNextReaderWithOrgApacheLuceneIndexIndexReader:(OrgApacheLuceneIndexIndexReader *)reader
                                                 withInt:(jint)docBase {
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 0, 1, 2, -1, -1, -1 },
    { NULL, "V", 0x1, 3, 4, 2, -1, -1, -1 },
    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 5, 6, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithFloatArray:);
  methods[1].selector = @selector(collectWithInt:);
  methods[2].selector = @selector(setScorerWithOrgApacheLuceneSearchScorer:);
  methods[3].selector = @selector(acceptsDocsOutOfOrder);
  methods[4].selector = @selector(setNextReaderWithOrgApacheLuceneIndexIndexReader:withInt:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "val$scores_", "[F", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
    { "scorer_", "LOrgApacheLuceneSearchScorer;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "collect", "I", "LJavaIoIOException;", "setScorer", "LOrgApacheLuceneSearchScorer;", "setNextReader", "LOrgApacheLuceneIndexIndexReader;I", "LOrgApacheLuceneIndexMemoryMemoryIndex;", "searchWithOrgApacheLuceneSearchQuery:" };
  static const J2ObjcClassInfo _OrgApacheLuceneIndexMemoryMemoryIndex_3 = { "", "org.apache.lucene.index.memory", ptrTable, methods, fields, 7, 0x8018, 5, 2, 7, -1, 8, -1, -1 };
  return &_OrgApacheLuceneIndexMemoryMemoryIndex_3;
}

@end

void OrgApacheLuceneIndexMemoryMemoryIndex_3_initWithFloatArray_(OrgApacheLuceneIndexMemoryMemoryIndex_3 *self, IOSFloatArray *capture$0) {
  self->val$scores_ = capture$0;
  OrgApacheLuceneSearchCollector_init(self);
}

OrgApacheLuceneIndexMemoryMemoryIndex_3 *new_OrgApacheLuceneIndexMemoryMemoryIndex_3_initWithFloatArray_(IOSFloatArray *capture$0) {
  J2OBJC_NEW_IMPL(OrgApacheLuceneIndexMemoryMemoryIndex_3, initWithFloatArray_, capture$0)
}

OrgApacheLuceneIndexMemoryMemoryIndex_3 *create_OrgApacheLuceneIndexMemoryMemoryIndex_3_initWithFloatArray_(IOSFloatArray *capture$0) {
  J2OBJC_CREATE_IMPL(OrgApacheLuceneIndexMemoryMemoryIndex_3, initWithFloatArray_, capture$0)
}

@implementation OrgApacheLuceneIndexMemoryMemoryIndex_Info

- (instancetype)initWithJavaUtilHashMap:(JavaUtilHashMap *)terms
                                withInt:(jint)numTokens
                                withInt:(jint)numOverlapTokens
                              withFloat:(jfloat)boost {
  OrgApacheLuceneIndexMemoryMemoryIndex_Info_initWithJavaUtilHashMap_withInt_withInt_withFloat_(self, terms, numTokens, numOverlapTokens, boost);
  return self;
}

- (void)sortTerms {
  if (sortedTerms_ == nil) sortedTerms_ = OrgApacheLuceneIndexMemoryMemoryIndex_sortWithJavaUtilHashMap_(terms_);
}

- (OrgApacheLuceneIndexMemoryMemoryIndex_ArrayIntList *)getPositionsWithNSString:(NSString *)term {
  return [((JavaUtilHashMap *) nil_chk(terms_)) getWithId:term];
}

- (OrgApacheLuceneIndexMemoryMemoryIndex_ArrayIntList *)getPositionsWithInt:(jint)pos {
  return [((id<JavaUtilMap_Entry>) nil_chk(IOSObjectArray_Get(nil_chk(sortedTerms_), pos))) getValue];
}

- (jfloat)getBoost {
  return boost_;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, 1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgApacheLuceneIndexMemoryMemoryIndex_ArrayIntList;", 0x1, 2, 3, -1, -1, -1, -1 },
    { NULL, "LOrgApacheLuceneIndexMemoryMemoryIndex_ArrayIntList;", 0x1, 2, 4, -1, -1, -1, -1 },
    { NULL, "F", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithJavaUtilHashMap:withInt:withInt:withFloat:);
  methods[1].selector = @selector(sortTerms);
  methods[2].selector = @selector(getPositionsWithNSString:);
  methods[3].selector = @selector(getPositionsWithInt:);
  methods[4].selector = @selector(getBoost);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "terms_", "LJavaUtilHashMap;", .constantValue.asLong = 0, 0x12, -1, -1, 5, -1 },
    { "sortedTerms_", "[LJavaUtilMap_Entry;", .constantValue.asLong = 0, 0x82, -1, -1, 6, -1 },
    { "numTokens_", "I", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "numOverlapTokens_", "I", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "boost_", "F", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "template__", "LOrgApacheLuceneIndexTerm;", .constantValue.asLong = 0, 0x81, 7, -1, -1, -1 },
    { "serialVersionUID", "J", .constantValue.asLong = OrgApacheLuceneIndexMemoryMemoryIndex_Info_serialVersionUID, 0x1a, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LJavaUtilHashMap;IIF", "(Ljava/util/HashMap<Ljava/lang/String;Lorg/apache/lucene/index/memory/MemoryIndex$ArrayIntList;>;IIF)V", "getPositions", "LNSString;", "I", "Ljava/util/HashMap<Ljava/lang/String;Lorg/apache/lucene/index/memory/MemoryIndex$ArrayIntList;>;", "[Ljava/util/Map$Entry<Ljava/lang/String;Lorg/apache/lucene/index/memory/MemoryIndex$ArrayIntList;>;", "template", "LOrgApacheLuceneIndexMemoryMemoryIndex;" };
  static const J2ObjcClassInfo _OrgApacheLuceneIndexMemoryMemoryIndex_Info = { "Info", "org.apache.lucene.index.memory", ptrTable, methods, fields, 7, 0x1a, 5, 7, 8, -1, -1, -1, -1 };
  return &_OrgApacheLuceneIndexMemoryMemoryIndex_Info;
}

@end

void OrgApacheLuceneIndexMemoryMemoryIndex_Info_initWithJavaUtilHashMap_withInt_withInt_withFloat_(OrgApacheLuceneIndexMemoryMemoryIndex_Info *self, JavaUtilHashMap *terms, jint numTokens, jint numOverlapTokens, jfloat boost) {
  NSObject_init(self);
  self->terms_ = terms;
  self->numTokens_ = numTokens;
  self->numOverlapTokens_ = numOverlapTokens;
  self->boost_ = boost;
}

OrgApacheLuceneIndexMemoryMemoryIndex_Info *new_OrgApacheLuceneIndexMemoryMemoryIndex_Info_initWithJavaUtilHashMap_withInt_withInt_withFloat_(JavaUtilHashMap *terms, jint numTokens, jint numOverlapTokens, jfloat boost) {
  J2OBJC_NEW_IMPL(OrgApacheLuceneIndexMemoryMemoryIndex_Info, initWithJavaUtilHashMap_withInt_withInt_withFloat_, terms, numTokens, numOverlapTokens, boost)
}

OrgApacheLuceneIndexMemoryMemoryIndex_Info *create_OrgApacheLuceneIndexMemoryMemoryIndex_Info_initWithJavaUtilHashMap_withInt_withInt_withFloat_(JavaUtilHashMap *terms, jint numTokens, jint numOverlapTokens, jfloat boost) {
  J2OBJC_CREATE_IMPL(OrgApacheLuceneIndexMemoryMemoryIndex_Info, initWithJavaUtilHashMap_withInt_withInt_withFloat_, terms, numTokens, numOverlapTokens, boost)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheLuceneIndexMemoryMemoryIndex_Info)

@implementation OrgApacheLuceneIndexMemoryMemoryIndex_ArrayIntList

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  OrgApacheLuceneIndexMemoryMemoryIndex_ArrayIntList_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (instancetype)initWithInt:(jint)initialCapacity {
  OrgApacheLuceneIndexMemoryMemoryIndex_ArrayIntList_initWithInt_(self, initialCapacity);
  return self;
}

- (void)addWithInt:(jint)elem {
  if (size_ == ((IOSIntArray *) nil_chk(elements_))->size_) OrgApacheLuceneIndexMemoryMemoryIndex_ArrayIntList_ensureCapacityWithInt_(self, size_ + 1);
  *IOSIntArray_GetRef(nil_chk(elements_), size_++) = elem;
}

- (void)addWithInt:(jint)pos
           withInt:(jint)start
           withInt:(jint)end {
  if (size_ + 3 > ((IOSIntArray *) nil_chk(elements_))->size_) OrgApacheLuceneIndexMemoryMemoryIndex_ArrayIntList_ensureCapacityWithInt_(self, size_ + 3);
  *IOSIntArray_GetRef(nil_chk(elements_), size_) = pos;
  *IOSIntArray_GetRef(elements_, size_ + 1) = start;
  *IOSIntArray_GetRef(elements_, size_ + 2) = end;
  size_ += 3;
}

- (jint)getWithInt:(jint)index {
  if (index >= size_) OrgApacheLuceneIndexMemoryMemoryIndex_ArrayIntList_throwIndexWithInt_(self, index);
  return IOSIntArray_Get(nil_chk(elements_), index);
}

- (jint)size {
  return size_;
}

- (IOSIntArray *)toArrayWithInt:(jint)stride {
  IOSIntArray *arr = [IOSIntArray newArrayWithLength:[self size] / stride];
  if (stride == 1) {
    JavaLangSystem_arraycopyWithId_withInt_withId_withInt_withInt_(elements_, 0, arr, 0, size_);
  }
  else {
    for (jint i = 0, j = 0; j < size_; i++, j += stride) *IOSIntArray_GetRef(arr, i) = IOSIntArray_Get(nil_chk(elements_), j);
  }
  return arr;
}

- (void)ensureCapacityWithInt:(jint)minCapacity {
  OrgApacheLuceneIndexMemoryMemoryIndex_ArrayIntList_ensureCapacityWithInt_(self, minCapacity);
}

- (void)throwIndexWithInt:(jint)index {
  OrgApacheLuceneIndexMemoryMemoryIndex_ArrayIntList_throwIndexWithInt_(self, index);
}

- (NSString *)toStringWithInt:(jint)stride {
  jint s = [self size] / stride;
  jint len = JavaLangMath_minWithInt_withInt_(10, s);
  JavaLangStringBuilder *buf = new_JavaLangStringBuilder_initWithInt_(4 * len);
  (void) [buf appendWithNSString:@"["];
  for (jint i = 0; i < len; i++) {
    (void) [buf appendWithInt:[self getWithInt:i * stride]];
    if (i < len - 1) (void) [buf appendWithNSString:@", "];
  }
  if (len != s) (void) [buf appendWithNSString:@", ..."];
  (void) [buf appendWithNSString:@"]"];
  return [buf description];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 1, 0, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 1, 2, -1, -1, -1, -1 },
    { NULL, "I", 0x1, 3, 0, -1, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "[I", 0x1, 4, 0, -1, -1, -1, -1 },
    { NULL, "V", 0x2, 5, 0, -1, -1, -1, -1 },
    { NULL, "V", 0x2, 6, 0, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, 7, 0, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(initWithInt:);
  methods[2].selector = @selector(addWithInt:);
  methods[3].selector = @selector(addWithInt:withInt:withInt:);
  methods[4].selector = @selector(getWithInt:);
  methods[5].selector = @selector(size);
  methods[6].selector = @selector(toArrayWithInt:);
  methods[7].selector = @selector(ensureCapacityWithInt:);
  methods[8].selector = @selector(throwIndexWithInt:);
  methods[9].selector = @selector(toStringWithInt:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "elements_", "[I", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "size_", "I", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "serialVersionUID", "J", .constantValue.asLong = OrgApacheLuceneIndexMemoryMemoryIndex_ArrayIntList_serialVersionUID, 0x1a, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "I", "add", "III", "get", "toArray", "ensureCapacity", "throwIndex", "toString", "LOrgApacheLuceneIndexMemoryMemoryIndex;" };
  static const J2ObjcClassInfo _OrgApacheLuceneIndexMemoryMemoryIndex_ArrayIntList = { "ArrayIntList", "org.apache.lucene.index.memory", ptrTable, methods, fields, 7, 0x1a, 10, 3, 8, -1, -1, -1, -1 };
  return &_OrgApacheLuceneIndexMemoryMemoryIndex_ArrayIntList;
}

@end

void OrgApacheLuceneIndexMemoryMemoryIndex_ArrayIntList_init(OrgApacheLuceneIndexMemoryMemoryIndex_ArrayIntList *self) {
  OrgApacheLuceneIndexMemoryMemoryIndex_ArrayIntList_initWithInt_(self, 10);
}

OrgApacheLuceneIndexMemoryMemoryIndex_ArrayIntList *new_OrgApacheLuceneIndexMemoryMemoryIndex_ArrayIntList_init() {
  J2OBJC_NEW_IMPL(OrgApacheLuceneIndexMemoryMemoryIndex_ArrayIntList, init)
}

OrgApacheLuceneIndexMemoryMemoryIndex_ArrayIntList *create_OrgApacheLuceneIndexMemoryMemoryIndex_ArrayIntList_init() {
  J2OBJC_CREATE_IMPL(OrgApacheLuceneIndexMemoryMemoryIndex_ArrayIntList, init)
}

void OrgApacheLuceneIndexMemoryMemoryIndex_ArrayIntList_initWithInt_(OrgApacheLuceneIndexMemoryMemoryIndex_ArrayIntList *self, jint initialCapacity) {
  NSObject_init(self);
  self->size_ = 0;
  self->elements_ = [IOSIntArray newArrayWithLength:initialCapacity];
}

OrgApacheLuceneIndexMemoryMemoryIndex_ArrayIntList *new_OrgApacheLuceneIndexMemoryMemoryIndex_ArrayIntList_initWithInt_(jint initialCapacity) {
  J2OBJC_NEW_IMPL(OrgApacheLuceneIndexMemoryMemoryIndex_ArrayIntList, initWithInt_, initialCapacity)
}

OrgApacheLuceneIndexMemoryMemoryIndex_ArrayIntList *create_OrgApacheLuceneIndexMemoryMemoryIndex_ArrayIntList_initWithInt_(jint initialCapacity) {
  J2OBJC_CREATE_IMPL(OrgApacheLuceneIndexMemoryMemoryIndex_ArrayIntList, initWithInt_, initialCapacity)
}

void OrgApacheLuceneIndexMemoryMemoryIndex_ArrayIntList_ensureCapacityWithInt_(OrgApacheLuceneIndexMemoryMemoryIndex_ArrayIntList *self, jint minCapacity) {
  jint newCapacity = JavaLangMath_maxWithInt_withInt_(minCapacity, (((IOSIntArray *) nil_chk(self->elements_))->size_ * 3) / 2 + 1);
  IOSIntArray *newElements = [IOSIntArray newArrayWithLength:newCapacity];
  JavaLangSystem_arraycopyWithId_withInt_withId_withInt_withInt_(self->elements_, 0, newElements, 0, self->size_);
  self->elements_ = newElements;
}

void OrgApacheLuceneIndexMemoryMemoryIndex_ArrayIntList_throwIndexWithInt_(OrgApacheLuceneIndexMemoryMemoryIndex_ArrayIntList *self, jint index) {
  @throw new_JavaLangIndexOutOfBoundsException_initWithNSString_(JreStrcat("$I$I", @"index: ", index, @", size: ", self->size_));
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheLuceneIndexMemoryMemoryIndex_ArrayIntList)

@implementation OrgApacheLuceneIndexMemoryMemoryIndex_MemoryIndexReader

- (instancetype)initWithOrgApacheLuceneIndexMemoryMemoryIndex:(OrgApacheLuceneIndexMemoryMemoryIndex *)outer$ {
  OrgApacheLuceneIndexMemoryMemoryIndex_MemoryIndexReader_initWithOrgApacheLuceneIndexMemoryMemoryIndex_(self, outer$);
  return self;
}

- (OrgApacheLuceneIndexMemoryMemoryIndex_Info *)getInfoWithNSString:(NSString *)fieldName {
  return OrgApacheLuceneIndexMemoryMemoryIndex_MemoryIndexReader_getInfoWithNSString_(self, fieldName);
}

- (OrgApacheLuceneIndexMemoryMemoryIndex_Info *)getInfoWithInt:(jint)pos {
  return OrgApacheLuceneIndexMemoryMemoryIndex_MemoryIndexReader_getInfoWithInt_(self, pos);
}

- (jint)docFreqWithOrgApacheLuceneIndexTerm:(OrgApacheLuceneIndexTerm *)term {
  OrgApacheLuceneIndexMemoryMemoryIndex_Info *info = OrgApacheLuceneIndexMemoryMemoryIndex_MemoryIndexReader_getInfoWithNSString_(self, [((OrgApacheLuceneIndexTerm *) nil_chk(term)) field]);
  jint freq = 0;
  if (info != nil) freq = [info getPositionsWithNSString:[term text]] != nil ? 1 : 0;
  return freq;
}

- (OrgApacheLuceneIndexTermEnum *)terms {
  return [self termsWithOrgApacheLuceneIndexTerm:JreLoadStatic(OrgApacheLuceneIndexMemoryMemoryIndex, MATCH_ALL_TERM)];
}

- (OrgApacheLuceneIndexTermEnum *)termsWithOrgApacheLuceneIndexTerm:(OrgApacheLuceneIndexTerm *)term {
  jint i;
  jint j;
  OrgApacheLuceneIndexMemoryMemoryIndex_sortFields(this$0_);
  if (((IOSObjectArray *) nil_chk(this$0_->sortedFields_))->size_ == 1 && [((id<JavaUtilMap_Entry>) nil_chk(IOSObjectArray_Get(this$0_->sortedFields_, 0))) getKey] == [((OrgApacheLuceneIndexTerm *) nil_chk(term)) field]) {
    j = 0;
  }
  else {
    j = JavaUtilArrays_binarySearchWithNSObjectArray_withId_withJavaUtilComparator_(this$0_->sortedFields_, [((OrgApacheLuceneIndexTerm *) nil_chk(term)) field], JreLoadStatic(OrgApacheLuceneIndexMemoryMemoryIndex, termComparator));
  }
  if (j < 0) {
    j = -j - 1;
    i = 0;
    if (j < ((IOSObjectArray *) nil_chk(this$0_->sortedFields_))->size_) [((OrgApacheLuceneIndexMemoryMemoryIndex_Info *) nil_chk(OrgApacheLuceneIndexMemoryMemoryIndex_MemoryIndexReader_getInfoWithInt_(self, j))) sortTerms];
  }
  else {
    OrgApacheLuceneIndexMemoryMemoryIndex_Info *info = OrgApacheLuceneIndexMemoryMemoryIndex_MemoryIndexReader_getInfoWithInt_(self, j);
    [((OrgApacheLuceneIndexMemoryMemoryIndex_Info *) nil_chk(info)) sortTerms];
    i = JavaUtilArrays_binarySearchWithNSObjectArray_withId_withJavaUtilComparator_(info->sortedTerms_, [((OrgApacheLuceneIndexTerm *) nil_chk(term)) text], JreLoadStatic(OrgApacheLuceneIndexMemoryMemoryIndex, termComparator));
    if (i < 0) {
      i = -i - 1;
      if (i >= ((IOSObjectArray *) nil_chk(info->sortedTerms_))->size_) {
        j++;
        i = 0;
        if (j < ((IOSObjectArray *) nil_chk(this$0_->sortedFields_))->size_) [((OrgApacheLuceneIndexMemoryMemoryIndex_Info *) nil_chk(OrgApacheLuceneIndexMemoryMemoryIndex_MemoryIndexReader_getInfoWithInt_(self, j))) sortTerms];
      }
    }
  }
  jint ix = i;
  jint jx = j;
  return new_OrgApacheLuceneIndexMemoryMemoryIndex_MemoryIndexReader_1_initWithOrgApacheLuceneIndexMemoryMemoryIndex_MemoryIndexReader_withInt_withInt_(self, ix, jx);
}

- (id<OrgApacheLuceneIndexTermPositions>)termPositions {
  return new_OrgApacheLuceneIndexMemoryMemoryIndex_MemoryIndexReader_2_initWithOrgApacheLuceneIndexMemoryMemoryIndex_MemoryIndexReader_(self);
}

- (id<OrgApacheLuceneIndexTermDocs>)termDocs {
  return [self termPositions];
}

- (IOSObjectArray *)getTermFreqVectorsWithInt:(jint)docNumber {
  IOSObjectArray *vectors = [IOSObjectArray newArrayWithLength:[((JavaUtilHashMap *) nil_chk(this$0_->fields_)) size] type:OrgApacheLuceneIndexTermFreqVector_class_()];
  id<JavaUtilIterator> iter = [((id<JavaUtilSet>) nil_chk([this$0_->fields_ keySet])) iterator];
  for (jint i = 0; i < vectors->size_; i++) {
    (void) IOSObjectArray_Set(vectors, i, [self getTermFreqVectorWithInt:docNumber withNSString:[((id<JavaUtilIterator>) nil_chk(iter)) next]]);
  }
  return vectors;
}

- (void)getTermFreqVectorWithInt:(jint)docNumber
withOrgApacheLuceneIndexTermVectorMapper:(OrgApacheLuceneIndexTermVectorMapper *)mapper {
  for (NSString * __strong fieldName in nil_chk([((JavaUtilHashMap *) nil_chk(this$0_->fields_)) keySet])) {
    [self getTermFreqVectorWithInt:docNumber withNSString:fieldName withOrgApacheLuceneIndexTermVectorMapper:mapper];
  }
}

- (void)getTermFreqVectorWithInt:(jint)docNumber
                    withNSString:(NSString *)field
withOrgApacheLuceneIndexTermVectorMapper:(OrgApacheLuceneIndexTermVectorMapper *)mapper {
  OrgApacheLuceneIndexMemoryMemoryIndex_Info *info = OrgApacheLuceneIndexMemoryMemoryIndex_MemoryIndexReader_getInfoWithNSString_(self, field);
  if (info == nil) {
    return;
  }
  [info sortTerms];
  [((OrgApacheLuceneIndexTermVectorMapper *) nil_chk(mapper)) setExpectationsWithNSString:field withInt:((IOSObjectArray *) nil_chk(info->sortedTerms_))->size_ withBoolean:this$0_->stride_ != 1 withBoolean:true];
  for (jint i = ((IOSObjectArray *) nil_chk(info->sortedTerms_))->size_; --i >= 0; ) {
    OrgApacheLuceneIndexMemoryMemoryIndex_ArrayIntList *positions = [((id<JavaUtilMap_Entry>) nil_chk(IOSObjectArray_Get(nil_chk(info->sortedTerms_), i))) getValue];
    jint size = [((OrgApacheLuceneIndexMemoryMemoryIndex_ArrayIntList *) nil_chk(positions)) size];
    IOSObjectArray *offsets = [IOSObjectArray newArrayWithLength:size / this$0_->stride_ type:OrgApacheLuceneIndexTermVectorOffsetInfo_class_()];
    for (jint k = 0, j = 1; j < size; k++, j += this$0_->stride_) {
      jint start = [positions getWithInt:j];
      jint end = [positions getWithInt:j + 1];
      (void) IOSObjectArray_SetAndConsume(offsets, k, new_OrgApacheLuceneIndexTermVectorOffsetInfo_initWithInt_withInt_(start, end));
    }
    [mapper mapWithNSString:[((id<JavaUtilMap_Entry>) nil_chk(IOSObjectArray_Get(nil_chk(info->sortedTerms_), i))) getKey] withInt:OrgApacheLuceneIndexMemoryMemoryIndex_numPositionsWithOrgApacheLuceneIndexMemoryMemoryIndex_ArrayIntList_(this$0_, [((id<JavaUtilMap_Entry>) nil_chk(IOSObjectArray_Get(nil_chk(info->sortedTerms_), i))) getValue]) withOrgApacheLuceneIndexTermVectorOffsetInfoArray:offsets withIntArray:[((OrgApacheLuceneIndexMemoryMemoryIndex_ArrayIntList *) nil_chk(([((id<JavaUtilMap_Entry>) nil_chk(IOSObjectArray_Get(nil_chk(info->sortedTerms_), i))) getValue]))) toArrayWithInt:this$0_->stride_]];
  }
}

- (id<OrgApacheLuceneIndexTermFreqVector>)getTermFreqVectorWithInt:(jint)docNumber
                                                      withNSString:(NSString *)fieldName {
  OrgApacheLuceneIndexMemoryMemoryIndex_Info *info = OrgApacheLuceneIndexMemoryMemoryIndex_MemoryIndexReader_getInfoWithNSString_(self, fieldName);
  if (info == nil) return nil;
  [info sortTerms];
  return new_OrgApacheLuceneIndexMemoryMemoryIndex_MemoryIndexReader_3_initWithOrgApacheLuceneIndexMemoryMemoryIndex_MemoryIndexReader_withOrgApacheLuceneIndexMemoryMemoryIndex_Info_withNSString_(self, info, fieldName);
}

- (OrgApacheLuceneSearchSimilarity *)getSimilarity {
  return OrgApacheLuceneIndexMemoryMemoryIndex_MemoryIndexReader_getSimilarity(self);
}

- (void)setSearcherWithOrgApacheLuceneSearchSearcher:(OrgApacheLuceneSearchSearcher *)searcher {
  OrgApacheLuceneIndexMemoryMemoryIndex_MemoryIndexReader_setSearcherWithOrgApacheLuceneSearchSearcher_(self, searcher);
}

- (IOSByteArray *)normsWithNSString:(NSString *)fieldName {
  IOSByteArray *norms = cachedNorms_;
  OrgApacheLuceneSearchSimilarity *sim = OrgApacheLuceneIndexMemoryMemoryIndex_MemoryIndexReader_getSimilarity(self);
  if (fieldName != cachedFieldName_ || sim != cachedSimilarity_) {
    OrgApacheLuceneIndexMemoryMemoryIndex_Info *info = OrgApacheLuceneIndexMemoryMemoryIndex_MemoryIndexReader_getInfoWithNSString_(self, fieldName);
    jint numTokens = info != nil ? info->numTokens_ : 0;
    jint numOverlapTokens = info != nil ? info->numOverlapTokens_ : 0;
    jfloat boost = info != nil ? [info getBoost] : 1.0f;
    OrgApacheLuceneIndexFieldInvertState *invertState = new_OrgApacheLuceneIndexFieldInvertState_initWithInt_withInt_withInt_withInt_withFloat_(0, numTokens, numOverlapTokens, 0, boost);
    jfloat n = [((OrgApacheLuceneSearchSimilarity *) nil_chk(sim)) computeNormWithNSString:fieldName withOrgApacheLuceneIndexFieldInvertState:invertState];
    jbyte norm = [sim encodeNormValueWithFloat:n];
    norms = [IOSByteArray newArrayWithBytes:(jbyte[]){ norm } count:1];
    cachedNorms_ = norms;
    cachedFieldName_ = fieldName;
    cachedSimilarity_ = sim;
  }
  return norms;
}

- (void)normsWithNSString:(NSString *)fieldName
            withByteArray:(IOSByteArray *)bytes
                  withInt:(jint)offset {
  IOSByteArray *norms = [self normsWithNSString:fieldName];
  JavaLangSystem_arraycopyWithId_withInt_withId_withInt_withInt_(norms, 0, bytes, offset, ((IOSByteArray *) nil_chk(norms))->size_);
}

- (void)doSetNormWithInt:(jint)doc
            withNSString:(NSString *)fieldName
                withByte:(jbyte)value {
  @throw new_JavaLangUnsupportedOperationException_init();
}

- (jint)numDocs {
  return [((JavaUtilHashMap *) nil_chk(this$0_->fields_)) size] > 0 ? 1 : 0;
}

- (jint)maxDoc {
  return 1;
}

- (OrgApacheLuceneDocumentDocument *)documentWithInt:(jint)n {
  return new_OrgApacheLuceneDocumentDocument_init();
}

- (OrgApacheLuceneDocumentDocument *)documentWithInt:(jint)n
            withOrgApacheLuceneDocumentFieldSelector:(id<OrgApacheLuceneDocumentFieldSelector>)fieldSelector {
  return new_OrgApacheLuceneDocumentDocument_init();
}

- (jboolean)isDeletedWithInt:(jint)n {
  return false;
}

- (jboolean)hasDeletions {
  return false;
}

- (void)doDeleteWithInt:(jint)docNum {
  @throw new_JavaLangUnsupportedOperationException_init();
}

- (void)doUndeleteAll {
  @throw new_JavaLangUnsupportedOperationException_init();
}

- (void)doCommitWithJavaUtilMap:(id<JavaUtilMap>)commitUserData {
}

- (void)doClose {
}

- (id<JavaUtilCollection>)getFieldNamesWithOrgApacheLuceneIndexIndexReader_FieldOption:(OrgApacheLuceneIndexIndexReader_FieldOption *)fieldOption {
  if (fieldOption == JreLoadEnum(OrgApacheLuceneIndexIndexReader_FieldOption, UNINDEXED)) return JavaUtilCollections_emptySet();
  if (fieldOption == JreLoadEnum(OrgApacheLuceneIndexIndexReader_FieldOption, INDEXED_NO_TERMVECTOR)) return JavaUtilCollections_emptySet();
  if (fieldOption == JreLoadEnum(OrgApacheLuceneIndexIndexReader_FieldOption, TERMVECTOR_WITH_OFFSET) && this$0_->stride_ == 1) return JavaUtilCollections_emptySet();
  if (fieldOption == JreLoadEnum(OrgApacheLuceneIndexIndexReader_FieldOption, TERMVECTOR_WITH_POSITION_OFFSET) && this$0_->stride_ == 1) return JavaUtilCollections_emptySet();
  return JavaUtilCollections_unmodifiableSetWithJavaUtilSet_([((JavaUtilHashMap *) nil_chk(this$0_->fields_)) keySet]);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x2, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgApacheLuceneIndexMemoryMemoryIndex_Info;", 0x2, 0, 1, -1, -1, -1, -1 },
    { NULL, "LOrgApacheLuceneIndexMemoryMemoryIndex_Info;", 0x2, 0, 2, -1, -1, -1, -1 },
    { NULL, "I", 0x1, 3, 4, -1, -1, -1, -1 },
    { NULL, "LOrgApacheLuceneIndexTermEnum;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgApacheLuceneIndexTermEnum;", 0x1, 5, 4, -1, -1, -1, -1 },
    { NULL, "LOrgApacheLuceneIndexTermPositions;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgApacheLuceneIndexTermDocs;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "[LOrgApacheLuceneIndexTermFreqVector;", 0x1, 6, 2, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 7, 8, 9, -1, -1, -1 },
    { NULL, "V", 0x1, 7, 10, 9, -1, -1, -1 },
    { NULL, "LOrgApacheLuceneIndexTermFreqVector;", 0x1, 7, 11, -1, -1, -1, -1 },
    { NULL, "LOrgApacheLuceneSearchSimilarity;", 0x2, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x2, 12, 13, -1, -1, -1, -1 },
    { NULL, "[B", 0x1, 14, 1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 14, 15, -1, -1, -1, -1 },
    { NULL, "V", 0x4, 16, 17, -1, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgApacheLuceneDocumentDocument;", 0x1, 18, 2, -1, -1, -1, -1 },
    { NULL, "LOrgApacheLuceneDocumentDocument;", 0x1, 18, 19, 9, -1, -1, -1 },
    { NULL, "Z", 0x1, 20, 2, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x4, 21, 2, -1, -1, -1, -1 },
    { NULL, "V", 0x4, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x4, 22, 23, -1, 24, -1, -1 },
    { NULL, "V", 0x4, -1, -1, -1, -1, -1, -1 },
    { NULL, "LJavaUtilCollection;", 0x1, 25, 26, -1, 27, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithOrgApacheLuceneIndexMemoryMemoryIndex:);
  methods[1].selector = @selector(getInfoWithNSString:);
  methods[2].selector = @selector(getInfoWithInt:);
  methods[3].selector = @selector(docFreqWithOrgApacheLuceneIndexTerm:);
  methods[4].selector = @selector(terms);
  methods[5].selector = @selector(termsWithOrgApacheLuceneIndexTerm:);
  methods[6].selector = @selector(termPositions);
  methods[7].selector = @selector(termDocs);
  methods[8].selector = @selector(getTermFreqVectorsWithInt:);
  methods[9].selector = @selector(getTermFreqVectorWithInt:withOrgApacheLuceneIndexTermVectorMapper:);
  methods[10].selector = @selector(getTermFreqVectorWithInt:withNSString:withOrgApacheLuceneIndexTermVectorMapper:);
  methods[11].selector = @selector(getTermFreqVectorWithInt:withNSString:);
  methods[12].selector = @selector(getSimilarity);
  methods[13].selector = @selector(setSearcherWithOrgApacheLuceneSearchSearcher:);
  methods[14].selector = @selector(normsWithNSString:);
  methods[15].selector = @selector(normsWithNSString:withByteArray:withInt:);
  methods[16].selector = @selector(doSetNormWithInt:withNSString:withByte:);
  methods[17].selector = @selector(numDocs);
  methods[18].selector = @selector(maxDoc);
  methods[19].selector = @selector(documentWithInt:);
  methods[20].selector = @selector(documentWithInt:withOrgApacheLuceneDocumentFieldSelector:);
  methods[21].selector = @selector(isDeletedWithInt:);
  methods[22].selector = @selector(hasDeletions);
  methods[23].selector = @selector(doDeleteWithInt:);
  methods[24].selector = @selector(doUndeleteAll);
  methods[25].selector = @selector(doCommitWithJavaUtilMap:);
  methods[26].selector = @selector(doClose);
  methods[27].selector = @selector(getFieldNamesWithOrgApacheLuceneIndexIndexReader_FieldOption:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "this$0_", "LOrgApacheLuceneIndexMemoryMemoryIndex;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
    { "searcher_", "LOrgApacheLuceneSearchSearcher;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "cachedNorms_", "[B", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "cachedFieldName_", "LNSString;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "cachedSimilarity_", "LOrgApacheLuceneSearchSimilarity;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "getInfo", "LNSString;", "I", "docFreq", "LOrgApacheLuceneIndexTerm;", "terms", "getTermFreqVectors", "getTermFreqVector", "ILOrgApacheLuceneIndexTermVectorMapper;", "LJavaIoIOException;", "ILNSString;LOrgApacheLuceneIndexTermVectorMapper;", "ILNSString;", "setSearcher", "LOrgApacheLuceneSearchSearcher;", "norms", "LNSString;[BI", "doSetNorm", "ILNSString;B", "document", "ILOrgApacheLuceneDocumentFieldSelector;", "isDeleted", "doDelete", "doCommit", "LJavaUtilMap;", "(Ljava/util/Map<Ljava/lang/String;Ljava/lang/String;>;)V", "getFieldNames", "LOrgApacheLuceneIndexIndexReader_FieldOption;", "(Lorg/apache/lucene/index/IndexReader$FieldOption;)Ljava/util/Collection<Ljava/lang/String;>;", "LOrgApacheLuceneIndexMemoryMemoryIndex;" };
  static const J2ObjcClassInfo _OrgApacheLuceneIndexMemoryMemoryIndex_MemoryIndexReader = { "MemoryIndexReader", "org.apache.lucene.index.memory", ptrTable, methods, fields, 7, 0x12, 28, 5, 28, -1, -1, -1, -1 };
  return &_OrgApacheLuceneIndexMemoryMemoryIndex_MemoryIndexReader;
}

@end

void OrgApacheLuceneIndexMemoryMemoryIndex_MemoryIndexReader_initWithOrgApacheLuceneIndexMemoryMemoryIndex_(OrgApacheLuceneIndexMemoryMemoryIndex_MemoryIndexReader *self, OrgApacheLuceneIndexMemoryMemoryIndex *outer$) {
  self->this$0_ = outer$;
  OrgApacheLuceneIndexIndexReader_init(self);
  (void) JreVolatileStrongAssign(&self->readerFinishedListeners_, JavaUtilCollections_synchronizedSetWithJavaUtilSet_(new_JavaUtilHashSet_init()));
}

OrgApacheLuceneIndexMemoryMemoryIndex_MemoryIndexReader *new_OrgApacheLuceneIndexMemoryMemoryIndex_MemoryIndexReader_initWithOrgApacheLuceneIndexMemoryMemoryIndex_(OrgApacheLuceneIndexMemoryMemoryIndex *outer$) {
  J2OBJC_NEW_IMPL(OrgApacheLuceneIndexMemoryMemoryIndex_MemoryIndexReader, initWithOrgApacheLuceneIndexMemoryMemoryIndex_, outer$)
}

OrgApacheLuceneIndexMemoryMemoryIndex_MemoryIndexReader *create_OrgApacheLuceneIndexMemoryMemoryIndex_MemoryIndexReader_initWithOrgApacheLuceneIndexMemoryMemoryIndex_(OrgApacheLuceneIndexMemoryMemoryIndex *outer$) {
  J2OBJC_CREATE_IMPL(OrgApacheLuceneIndexMemoryMemoryIndex_MemoryIndexReader, initWithOrgApacheLuceneIndexMemoryMemoryIndex_, outer$)
}

OrgApacheLuceneIndexMemoryMemoryIndex_Info *OrgApacheLuceneIndexMemoryMemoryIndex_MemoryIndexReader_getInfoWithNSString_(OrgApacheLuceneIndexMemoryMemoryIndex_MemoryIndexReader *self, NSString *fieldName) {
  return [((JavaUtilHashMap *) nil_chk(self->this$0_->fields_)) getWithId:fieldName];
}

OrgApacheLuceneIndexMemoryMemoryIndex_Info *OrgApacheLuceneIndexMemoryMemoryIndex_MemoryIndexReader_getInfoWithInt_(OrgApacheLuceneIndexMemoryMemoryIndex_MemoryIndexReader *self, jint pos) {
  return [((id<JavaUtilMap_Entry>) nil_chk(IOSObjectArray_Get(nil_chk(self->this$0_->sortedFields_), pos))) getValue];
}

OrgApacheLuceneSearchSimilarity *OrgApacheLuceneIndexMemoryMemoryIndex_MemoryIndexReader_getSimilarity(OrgApacheLuceneIndexMemoryMemoryIndex_MemoryIndexReader *self) {
  if (self->searcher_ != nil) return [self->searcher_ getSimilarity];
  return OrgApacheLuceneSearchSimilarity_getDefault();
}

void OrgApacheLuceneIndexMemoryMemoryIndex_MemoryIndexReader_setSearcherWithOrgApacheLuceneSearchSearcher_(OrgApacheLuceneIndexMemoryMemoryIndex_MemoryIndexReader *self, OrgApacheLuceneSearchSearcher *searcher) {
  self->searcher_ = searcher;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheLuceneIndexMemoryMemoryIndex_MemoryIndexReader)

@implementation OrgApacheLuceneIndexMemoryMemoryIndex_MemoryIndexReader_1

- (instancetype)initWithOrgApacheLuceneIndexMemoryMemoryIndex_MemoryIndexReader:(OrgApacheLuceneIndexMemoryMemoryIndex_MemoryIndexReader *)outer$
                                                                        withInt:(jint)capture$0
                                                                        withInt:(jint)capture$1 {
  OrgApacheLuceneIndexMemoryMemoryIndex_MemoryIndexReader_1_initWithOrgApacheLuceneIndexMemoryMemoryIndex_MemoryIndexReader_withInt_withInt_(self, outer$, capture$0, capture$1);
  return self;
}

- (jboolean)next {
  if (srtFldsIdx_ >= ((IOSObjectArray *) nil_chk(this$0_->this$0_->sortedFields_))->size_) return false;
  OrgApacheLuceneIndexMemoryMemoryIndex_Info *info = OrgApacheLuceneIndexMemoryMemoryIndex_MemoryIndexReader_getInfoWithInt_(this$0_, srtFldsIdx_);
  if (++srtTermsIdx_ < ((IOSObjectArray *) nil_chk(((OrgApacheLuceneIndexMemoryMemoryIndex_Info *) nil_chk(info))->sortedTerms_))->size_) return true;
  srtFldsIdx_++;
  srtTermsIdx_ = 0;
  if (srtFldsIdx_ >= ((IOSObjectArray *) nil_chk(this$0_->this$0_->sortedFields_))->size_) return false;
  [((OrgApacheLuceneIndexMemoryMemoryIndex_Info *) nil_chk(OrgApacheLuceneIndexMemoryMemoryIndex_MemoryIndexReader_getInfoWithInt_(this$0_, srtFldsIdx_))) sortTerms];
  return true;
}

- (OrgApacheLuceneIndexTerm *)term {
  if (srtFldsIdx_ >= ((IOSObjectArray *) nil_chk(this$0_->this$0_->sortedFields_))->size_) return nil;
  OrgApacheLuceneIndexMemoryMemoryIndex_Info *info = OrgApacheLuceneIndexMemoryMemoryIndex_MemoryIndexReader_getInfoWithInt_(this$0_, srtFldsIdx_);
  if (srtTermsIdx_ >= ((IOSObjectArray *) nil_chk(((OrgApacheLuceneIndexMemoryMemoryIndex_Info *) nil_chk(info))->sortedTerms_))->size_) return nil;
  return OrgApacheLuceneIndexMemoryMemoryIndex_MemoryIndexReader_1_createTermWithOrgApacheLuceneIndexMemoryMemoryIndex_Info_withInt_withNSString_(self, info, srtFldsIdx_, [((id<JavaUtilMap_Entry>) nil_chk(IOSObjectArray_Get(info->sortedTerms_, srtTermsIdx_))) getKey]);
}

- (jint)docFreq {
  if (srtFldsIdx_ >= ((IOSObjectArray *) nil_chk(this$0_->this$0_->sortedFields_))->size_) return 0;
  OrgApacheLuceneIndexMemoryMemoryIndex_Info *info = OrgApacheLuceneIndexMemoryMemoryIndex_MemoryIndexReader_getInfoWithInt_(this$0_, srtFldsIdx_);
  if (srtTermsIdx_ >= ((IOSObjectArray *) nil_chk(((OrgApacheLuceneIndexMemoryMemoryIndex_Info *) nil_chk(info))->sortedTerms_))->size_) return 0;
  return OrgApacheLuceneIndexMemoryMemoryIndex_numPositionsWithOrgApacheLuceneIndexMemoryMemoryIndex_ArrayIntList_(this$0_->this$0_, [info getPositionsWithInt:srtTermsIdx_]);
}

- (void)close {
}

- (OrgApacheLuceneIndexTerm *)createTermWithOrgApacheLuceneIndexMemoryMemoryIndex_Info:(OrgApacheLuceneIndexMemoryMemoryIndex_Info *)info
                                                                               withInt:(jint)pos
                                                                          withNSString:(NSString *)text {
  return OrgApacheLuceneIndexMemoryMemoryIndex_MemoryIndexReader_1_createTermWithOrgApacheLuceneIndexMemoryMemoryIndex_Info_withInt_withNSString_(self, info, pos, text);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgApacheLuceneIndexTerm;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgApacheLuceneIndexTerm;", 0x2, 0, 1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithOrgApacheLuceneIndexMemoryMemoryIndex_MemoryIndexReader:withInt:withInt:);
  methods[1].selector = @selector(next);
  methods[2].selector = @selector(term);
  methods[3].selector = @selector(docFreq);
  methods[4].selector = @selector(close);
  methods[5].selector = @selector(createTermWithOrgApacheLuceneIndexMemoryMemoryIndex_Info:withInt:withNSString:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "this$0_", "LOrgApacheLuceneIndexMemoryMemoryIndex_MemoryIndexReader;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
    { "srtTermsIdx_", "I", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "srtFldsIdx_", "I", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "createTerm", "LOrgApacheLuceneIndexMemoryMemoryIndex_Info;ILNSString;", "LOrgApacheLuceneIndexMemoryMemoryIndex_MemoryIndexReader;", "termsWithOrgApacheLuceneIndexTerm:" };
  static const J2ObjcClassInfo _OrgApacheLuceneIndexMemoryMemoryIndex_MemoryIndexReader_1 = { "", "org.apache.lucene.index.memory", ptrTable, methods, fields, 7, 0x8018, 6, 3, 2, -1, 3, -1, -1 };
  return &_OrgApacheLuceneIndexMemoryMemoryIndex_MemoryIndexReader_1;
}

@end

void OrgApacheLuceneIndexMemoryMemoryIndex_MemoryIndexReader_1_initWithOrgApacheLuceneIndexMemoryMemoryIndex_MemoryIndexReader_withInt_withInt_(OrgApacheLuceneIndexMemoryMemoryIndex_MemoryIndexReader_1 *self, OrgApacheLuceneIndexMemoryMemoryIndex_MemoryIndexReader *outer$, jint capture$0, jint capture$1) {
  self->this$0_ = outer$;
  OrgApacheLuceneIndexTermEnum_init(self);
  self->srtTermsIdx_ = capture$0;
  self->srtFldsIdx_ = capture$1;
}

OrgApacheLuceneIndexMemoryMemoryIndex_MemoryIndexReader_1 *new_OrgApacheLuceneIndexMemoryMemoryIndex_MemoryIndexReader_1_initWithOrgApacheLuceneIndexMemoryMemoryIndex_MemoryIndexReader_withInt_withInt_(OrgApacheLuceneIndexMemoryMemoryIndex_MemoryIndexReader *outer$, jint capture$0, jint capture$1) {
  J2OBJC_NEW_IMPL(OrgApacheLuceneIndexMemoryMemoryIndex_MemoryIndexReader_1, initWithOrgApacheLuceneIndexMemoryMemoryIndex_MemoryIndexReader_withInt_withInt_, outer$, capture$0, capture$1)
}

OrgApacheLuceneIndexMemoryMemoryIndex_MemoryIndexReader_1 *create_OrgApacheLuceneIndexMemoryMemoryIndex_MemoryIndexReader_1_initWithOrgApacheLuceneIndexMemoryMemoryIndex_MemoryIndexReader_withInt_withInt_(OrgApacheLuceneIndexMemoryMemoryIndex_MemoryIndexReader *outer$, jint capture$0, jint capture$1) {
  J2OBJC_CREATE_IMPL(OrgApacheLuceneIndexMemoryMemoryIndex_MemoryIndexReader_1, initWithOrgApacheLuceneIndexMemoryMemoryIndex_MemoryIndexReader_withInt_withInt_, outer$, capture$0, capture$1)
}

OrgApacheLuceneIndexTerm *OrgApacheLuceneIndexMemoryMemoryIndex_MemoryIndexReader_1_createTermWithOrgApacheLuceneIndexMemoryMemoryIndex_Info_withInt_withNSString_(OrgApacheLuceneIndexMemoryMemoryIndex_MemoryIndexReader_1 *self, OrgApacheLuceneIndexMemoryMemoryIndex_Info *info, jint pos, NSString *text) {
  OrgApacheLuceneIndexTerm *template_ = ((OrgApacheLuceneIndexMemoryMemoryIndex_Info *) nil_chk(info))->template__;
  if (template_ == nil) {
    NSString *fieldName = [((id<JavaUtilMap_Entry>) nil_chk(IOSObjectArray_Get(nil_chk(self->this$0_->this$0_->sortedFields_), pos))) getKey];
    template_ = new_OrgApacheLuceneIndexTerm_initWithNSString_(fieldName);
    info->template__ = template_;
  }
  return [template_ createTermWithNSString:text];
}

@implementation OrgApacheLuceneIndexMemoryMemoryIndex_MemoryIndexReader_2

- (instancetype)initWithOrgApacheLuceneIndexMemoryMemoryIndex_MemoryIndexReader:(OrgApacheLuceneIndexMemoryMemoryIndex_MemoryIndexReader *)outer$ {
  OrgApacheLuceneIndexMemoryMemoryIndex_MemoryIndexReader_2_initWithOrgApacheLuceneIndexMemoryMemoryIndex_MemoryIndexReader_(self, outer$);
  return self;
}

- (void)seekWithOrgApacheLuceneIndexTerm:(OrgApacheLuceneIndexTerm *)term {
  self->term_ = term;
  if (term == nil) {
    hasNext_ = true;
  }
  else {
    OrgApacheLuceneIndexMemoryMemoryIndex_Info *info = OrgApacheLuceneIndexMemoryMemoryIndex_MemoryIndexReader_getInfoWithNSString_(this$0_, [term field]);
    current_ = info == nil ? nil : [info getPositionsWithNSString:[term text]];
    hasNext_ = (current_ != nil);
    cursor_ = 0;
  }
}

- (void)seekWithOrgApacheLuceneIndexTermEnum:(OrgApacheLuceneIndexTermEnum *)termEnum {
  [self seekWithOrgApacheLuceneIndexTerm:[((OrgApacheLuceneIndexTermEnum *) nil_chk(termEnum)) term]];
}

- (jint)doc {
  return 0;
}

- (jint)freq {
  jint freq = current_ != nil ? OrgApacheLuceneIndexMemoryMemoryIndex_numPositionsWithOrgApacheLuceneIndexMemoryMemoryIndex_ArrayIntList_(this$0_->this$0_, current_) : (term_ == nil ? 1 : 0);
  return freq;
}

- (jboolean)next {
  jboolean next = hasNext_;
  hasNext_ = false;
  return next;
}

- (jint)readWithIntArray:(IOSIntArray *)docs
            withIntArray:(IOSIntArray *)freqs {
  if (!hasNext_) return 0;
  hasNext_ = false;
  *IOSIntArray_GetRef(nil_chk(docs), 0) = 0;
  *IOSIntArray_GetRef(nil_chk(freqs), 0) = [self freq];
  return 1;
}

- (jboolean)skipToWithInt:(jint)target {
  return [self next];
}

- (void)close {
}

- (jint)nextPosition {
  jint pos = [((OrgApacheLuceneIndexMemoryMemoryIndex_ArrayIntList *) nil_chk(current_)) getWithInt:cursor_];
  cursor_ += this$0_->this$0_->stride_;
  return pos;
}

- (jint)getPayloadLength {
  @throw new_JavaLangUnsupportedOperationException_init();
}

- (IOSByteArray *)getPayloadWithByteArray:(IOSByteArray *)data
                                  withInt:(jint)offset {
  @throw new_JavaLangUnsupportedOperationException_init();
}

- (jboolean)isPayloadAvailable {
  return false;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 0, 1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 0, 2, -1, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x1, 3, 4, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, 5, 6, -1, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "[B", 0x1, 7, 8, 9, -1, -1, -1 },
    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithOrgApacheLuceneIndexMemoryMemoryIndex_MemoryIndexReader:);
  methods[1].selector = @selector(seekWithOrgApacheLuceneIndexTerm:);
  methods[2].selector = @selector(seekWithOrgApacheLuceneIndexTermEnum:);
  methods[3].selector = @selector(doc);
  methods[4].selector = @selector(freq);
  methods[5].selector = @selector(next);
  methods[6].selector = @selector(readWithIntArray:withIntArray:);
  methods[7].selector = @selector(skipToWithInt:);
  methods[8].selector = @selector(close);
  methods[9].selector = @selector(nextPosition);
  methods[10].selector = @selector(getPayloadLength);
  methods[11].selector = @selector(getPayloadWithByteArray:withInt:);
  methods[12].selector = @selector(isPayloadAvailable);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "this$0_", "LOrgApacheLuceneIndexMemoryMemoryIndex_MemoryIndexReader;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
    { "hasNext_", "Z", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "cursor_", "I", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "current_", "LOrgApacheLuceneIndexMemoryMemoryIndex_ArrayIntList;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "term_", "LOrgApacheLuceneIndexTerm;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "seek", "LOrgApacheLuceneIndexTerm;", "LOrgApacheLuceneIndexTermEnum;", "read", "[I[I", "skipTo", "I", "getPayload", "[BI", "LJavaIoIOException;", "LOrgApacheLuceneIndexMemoryMemoryIndex_MemoryIndexReader;", "termPositions" };
  static const J2ObjcClassInfo _OrgApacheLuceneIndexMemoryMemoryIndex_MemoryIndexReader_2 = { "", "org.apache.lucene.index.memory", ptrTable, methods, fields, 7, 0x8018, 13, 5, 10, -1, 11, -1, -1 };
  return &_OrgApacheLuceneIndexMemoryMemoryIndex_MemoryIndexReader_2;
}

@end

void OrgApacheLuceneIndexMemoryMemoryIndex_MemoryIndexReader_2_initWithOrgApacheLuceneIndexMemoryMemoryIndex_MemoryIndexReader_(OrgApacheLuceneIndexMemoryMemoryIndex_MemoryIndexReader_2 *self, OrgApacheLuceneIndexMemoryMemoryIndex_MemoryIndexReader *outer$) {
  self->this$0_ = outer$;
  NSObject_init(self);
  self->cursor_ = 0;
}

OrgApacheLuceneIndexMemoryMemoryIndex_MemoryIndexReader_2 *new_OrgApacheLuceneIndexMemoryMemoryIndex_MemoryIndexReader_2_initWithOrgApacheLuceneIndexMemoryMemoryIndex_MemoryIndexReader_(OrgApacheLuceneIndexMemoryMemoryIndex_MemoryIndexReader *outer$) {
  J2OBJC_NEW_IMPL(OrgApacheLuceneIndexMemoryMemoryIndex_MemoryIndexReader_2, initWithOrgApacheLuceneIndexMemoryMemoryIndex_MemoryIndexReader_, outer$)
}

OrgApacheLuceneIndexMemoryMemoryIndex_MemoryIndexReader_2 *create_OrgApacheLuceneIndexMemoryMemoryIndex_MemoryIndexReader_2_initWithOrgApacheLuceneIndexMemoryMemoryIndex_MemoryIndexReader_(OrgApacheLuceneIndexMemoryMemoryIndex_MemoryIndexReader *outer$) {
  J2OBJC_CREATE_IMPL(OrgApacheLuceneIndexMemoryMemoryIndex_MemoryIndexReader_2, initWithOrgApacheLuceneIndexMemoryMemoryIndex_MemoryIndexReader_, outer$)
}

@implementation OrgApacheLuceneIndexMemoryMemoryIndex_MemoryIndexReader_3

- (instancetype)initWithOrgApacheLuceneIndexMemoryMemoryIndex_MemoryIndexReader:(OrgApacheLuceneIndexMemoryMemoryIndex_MemoryIndexReader *)outer$
                                 withOrgApacheLuceneIndexMemoryMemoryIndex_Info:(OrgApacheLuceneIndexMemoryMemoryIndex_Info *)capture$0
                                                                   withNSString:(NSString *)capture$1 {
  OrgApacheLuceneIndexMemoryMemoryIndex_MemoryIndexReader_3_initWithOrgApacheLuceneIndexMemoryMemoryIndex_MemoryIndexReader_withOrgApacheLuceneIndexMemoryMemoryIndex_Info_withNSString_(self, outer$, capture$0, capture$1);
  return self;
}

- (NSString *)getField {
  return val$fieldName_;
}

- (jint)size {
  return ((IOSObjectArray *) nil_chk(sortedTerms_))->size_;
}

- (IOSObjectArray *)getTerms {
  IOSObjectArray *terms = [IOSObjectArray newArrayWithLength:((IOSObjectArray *) nil_chk(sortedTerms_))->size_ type:NSString_class_()];
  for (jint i = sortedTerms_->size_; --i >= 0; ) {
    (void) IOSObjectArray_Set(terms, i, [((id<JavaUtilMap_Entry>) nil_chk(IOSObjectArray_Get(sortedTerms_, i))) getKey]);
  }
  return terms;
}

- (IOSIntArray *)getTermFrequencies {
  IOSIntArray *freqs = [IOSIntArray newArrayWithLength:((IOSObjectArray *) nil_chk(sortedTerms_))->size_];
  for (jint i = sortedTerms_->size_; --i >= 0; ) {
    *IOSIntArray_GetRef(freqs, i) = OrgApacheLuceneIndexMemoryMemoryIndex_numPositionsWithOrgApacheLuceneIndexMemoryMemoryIndex_ArrayIntList_(this$0_->this$0_, [((id<JavaUtilMap_Entry>) nil_chk(IOSObjectArray_Get(sortedTerms_, i))) getValue]);
  }
  return freqs;
}

- (jint)indexOfWithNSString:(NSString *)term {
  jint i = JavaUtilArrays_binarySearchWithNSObjectArray_withId_withJavaUtilComparator_(sortedTerms_, term, JreLoadStatic(OrgApacheLuceneIndexMemoryMemoryIndex, termComparator));
  return i >= 0 ? i : -1;
}

- (IOSIntArray *)indexesOfWithNSStringArray:(IOSObjectArray *)terms
                                    withInt:(jint)start
                                    withInt:(jint)len {
  IOSIntArray *indexes = [IOSIntArray newArrayWithLength:len];
  for (jint i = 0; i < len; i++) {
    *IOSIntArray_GetRef(indexes, i) = [self indexOfWithNSString:IOSObjectArray_Get(nil_chk(terms), start++)];
  }
  return indexes;
}

- (IOSIntArray *)getTermPositionsWithInt:(jint)index {
  return [((OrgApacheLuceneIndexMemoryMemoryIndex_ArrayIntList *) nil_chk([((id<JavaUtilMap_Entry>) nil_chk(IOSObjectArray_Get(nil_chk(sortedTerms_), index))) getValue])) toArrayWithInt:this$0_->this$0_->stride_];
}

- (IOSObjectArray *)getOffsetsWithInt:(jint)index {
  if (this$0_->this$0_->stride_ == 1) return nil;
  OrgApacheLuceneIndexMemoryMemoryIndex_ArrayIntList *positions = [((id<JavaUtilMap_Entry>) nil_chk(IOSObjectArray_Get(nil_chk(sortedTerms_), index))) getValue];
  jint size = [((OrgApacheLuceneIndexMemoryMemoryIndex_ArrayIntList *) nil_chk(positions)) size];
  IOSObjectArray *offsets = [IOSObjectArray newArrayWithLength:size / this$0_->this$0_->stride_ type:OrgApacheLuceneIndexTermVectorOffsetInfo_class_()];
  for (jint i = 0, j = 1; j < size; i++, j += this$0_->this$0_->stride_) {
    jint start = [positions getWithInt:j];
    jint end = [positions getWithInt:j + 1];
    (void) IOSObjectArray_SetAndConsume(offsets, i, new_OrgApacheLuceneIndexTermVectorOffsetInfo_initWithInt_withInt_(start, end));
  }
  return offsets;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "[LNSString;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "[I", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x1, 0, 1, -1, -1, -1, -1 },
    { NULL, "[I", 0x1, 2, 3, -1, -1, -1, -1 },
    { NULL, "[I", 0x1, 4, 5, -1, -1, -1, -1 },
    { NULL, "[LOrgApacheLuceneIndexTermVectorOffsetInfo;", 0x1, 6, 5, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithOrgApacheLuceneIndexMemoryMemoryIndex_MemoryIndexReader:withOrgApacheLuceneIndexMemoryMemoryIndex_Info:withNSString:);
  methods[1].selector = @selector(getField);
  methods[2].selector = @selector(size);
  methods[3].selector = @selector(getTerms);
  methods[4].selector = @selector(getTermFrequencies);
  methods[5].selector = @selector(indexOfWithNSString:);
  methods[6].selector = @selector(indexesOfWithNSStringArray:withInt:withInt:);
  methods[7].selector = @selector(getTermPositionsWithInt:);
  methods[8].selector = @selector(getOffsetsWithInt:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "this$0_", "LOrgApacheLuceneIndexMemoryMemoryIndex_MemoryIndexReader;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
    { "val$fieldName_", "LNSString;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
    { "sortedTerms_", "[LJavaUtilMap_Entry;", .constantValue.asLong = 0, 0x12, -1, -1, 7, -1 },
  };
  static const void *ptrTable[] = { "indexOf", "LNSString;", "indexesOf", "[LNSString;II", "getTermPositions", "I", "getOffsets", "[Ljava/util/Map$Entry<Ljava/lang/String;Lorg/apache/lucene/index/memory/MemoryIndex$ArrayIntList;>;", "LOrgApacheLuceneIndexMemoryMemoryIndex_MemoryIndexReader;", "getTermFreqVectorWithInt:withNSString:" };
  static const J2ObjcClassInfo _OrgApacheLuceneIndexMemoryMemoryIndex_MemoryIndexReader_3 = { "", "org.apache.lucene.index.memory", ptrTable, methods, fields, 7, 0x8018, 9, 3, 8, -1, 9, -1, -1 };
  return &_OrgApacheLuceneIndexMemoryMemoryIndex_MemoryIndexReader_3;
}

@end

void OrgApacheLuceneIndexMemoryMemoryIndex_MemoryIndexReader_3_initWithOrgApacheLuceneIndexMemoryMemoryIndex_MemoryIndexReader_withOrgApacheLuceneIndexMemoryMemoryIndex_Info_withNSString_(OrgApacheLuceneIndexMemoryMemoryIndex_MemoryIndexReader_3 *self, OrgApacheLuceneIndexMemoryMemoryIndex_MemoryIndexReader *outer$, OrgApacheLuceneIndexMemoryMemoryIndex_Info *capture$0, NSString *capture$1) {
  self->this$0_ = outer$;
  self->val$fieldName_ = capture$1;
  NSObject_init(self);
  self->sortedTerms_ = ((OrgApacheLuceneIndexMemoryMemoryIndex_Info *) nil_chk(capture$0))->sortedTerms_;
}

OrgApacheLuceneIndexMemoryMemoryIndex_MemoryIndexReader_3 *new_OrgApacheLuceneIndexMemoryMemoryIndex_MemoryIndexReader_3_initWithOrgApacheLuceneIndexMemoryMemoryIndex_MemoryIndexReader_withOrgApacheLuceneIndexMemoryMemoryIndex_Info_withNSString_(OrgApacheLuceneIndexMemoryMemoryIndex_MemoryIndexReader *outer$, OrgApacheLuceneIndexMemoryMemoryIndex_Info *capture$0, NSString *capture$1) {
  J2OBJC_NEW_IMPL(OrgApacheLuceneIndexMemoryMemoryIndex_MemoryIndexReader_3, initWithOrgApacheLuceneIndexMemoryMemoryIndex_MemoryIndexReader_withOrgApacheLuceneIndexMemoryMemoryIndex_Info_withNSString_, outer$, capture$0, capture$1)
}

OrgApacheLuceneIndexMemoryMemoryIndex_MemoryIndexReader_3 *create_OrgApacheLuceneIndexMemoryMemoryIndex_MemoryIndexReader_3_initWithOrgApacheLuceneIndexMemoryMemoryIndex_MemoryIndexReader_withOrgApacheLuceneIndexMemoryMemoryIndex_Info_withNSString_(OrgApacheLuceneIndexMemoryMemoryIndex_MemoryIndexReader *outer$, OrgApacheLuceneIndexMemoryMemoryIndex_Info *capture$0, NSString *capture$1) {
  J2OBJC_CREATE_IMPL(OrgApacheLuceneIndexMemoryMemoryIndex_MemoryIndexReader_3, initWithOrgApacheLuceneIndexMemoryMemoryIndex_MemoryIndexReader_withOrgApacheLuceneIndexMemoryMemoryIndex_Info_withNSString_, outer$, capture$0, capture$1)
}

J2OBJC_INITIALIZED_DEFN(OrgApacheLuceneIndexMemoryMemoryIndex_VM)

@implementation OrgApacheLuceneIndexMemoryMemoryIndex_VM

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  OrgApacheLuceneIndexMemoryMemoryIndex_VM_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (jint)sizeOfWithInt:(jint)n {
  return OrgApacheLuceneIndexMemoryMemoryIndex_VM_sizeOfWithInt_(n);
}

+ (jint)sizeOfObjectWithInt:(jint)n {
  return OrgApacheLuceneIndexMemoryMemoryIndex_VM_sizeOfObjectWithInt_(n);
}

+ (jint)sizeOfObjectArrayWithInt:(jint)len {
  return OrgApacheLuceneIndexMemoryMemoryIndex_VM_sizeOfObjectArrayWithInt_(len);
}

+ (jint)sizeOfCharArrayWithInt:(jint)len {
  return OrgApacheLuceneIndexMemoryMemoryIndex_VM_sizeOfCharArrayWithInt_(len);
}

+ (jint)sizeOfIntArrayWithInt:(jint)len {
  return OrgApacheLuceneIndexMemoryMemoryIndex_VM_sizeOfIntArrayWithInt_(len);
}

+ (jint)sizeOfStringWithInt:(jint)len {
  return OrgApacheLuceneIndexMemoryMemoryIndex_VM_sizeOfStringWithInt_(len);
}

+ (jint)sizeOfHashMapWithInt:(jint)len {
  return OrgApacheLuceneIndexMemoryMemoryIndex_VM_sizeOfHashMapWithInt_(len);
}

+ (jint)sizeOfArrayListWithInt:(jint)len {
  return OrgApacheLuceneIndexMemoryMemoryIndex_VM_sizeOfArrayListWithInt_(len);
}

+ (jint)sizeOfArrayIntListWithInt:(jint)len {
  return OrgApacheLuceneIndexMemoryMemoryIndex_VM_sizeOfArrayIntListWithInt_(len);
}

+ (jdouble)log2WithDouble:(jdouble)value {
  return OrgApacheLuceneIndexMemoryMemoryIndex_VM_log2WithDouble_(value);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x2, -1, -1, -1, -1, -1, -1 },
    { NULL, "I", 0xa, 0, 1, -1, -1, -1, -1 },
    { NULL, "I", 0x9, 2, 1, -1, -1, -1, -1 },
    { NULL, "I", 0x9, 3, 1, -1, -1, -1, -1 },
    { NULL, "I", 0x9, 4, 1, -1, -1, -1, -1 },
    { NULL, "I", 0x9, 5, 1, -1, -1, -1, -1 },
    { NULL, "I", 0x9, 6, 1, -1, -1, -1, -1 },
    { NULL, "I", 0x9, 7, 1, -1, -1, -1, -1 },
    { NULL, "I", 0x9, 8, 1, -1, -1, -1, -1 },
    { NULL, "I", 0x9, 9, 1, -1, -1, -1, -1 },
    { NULL, "D", 0xa, 10, 11, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(sizeOfWithInt:);
  methods[2].selector = @selector(sizeOfObjectWithInt:);
  methods[3].selector = @selector(sizeOfObjectArrayWithInt:);
  methods[4].selector = @selector(sizeOfCharArrayWithInt:);
  methods[5].selector = @selector(sizeOfIntArrayWithInt:);
  methods[6].selector = @selector(sizeOfStringWithInt:);
  methods[7].selector = @selector(sizeOfHashMapWithInt:);
  methods[8].selector = @selector(sizeOfArrayListWithInt:);
  methods[9].selector = @selector(sizeOfArrayIntListWithInt:);
  methods[10].selector = @selector(log2WithDouble:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "PTR", "I", .constantValue.asLong = 0, 0x19, -1, 12, -1, -1 },
    { "BOOLEAN", "I", .constantValue.asInt = OrgApacheLuceneIndexMemoryMemoryIndex_VM_BOOLEAN, 0x19, -1, -1, -1, -1 },
    { "BYTE", "I", .constantValue.asInt = OrgApacheLuceneIndexMemoryMemoryIndex_VM_BYTE, 0x19, -1, -1, -1, -1 },
    { "CHAR", "I", .constantValue.asInt = OrgApacheLuceneIndexMemoryMemoryIndex_VM_CHAR, 0x19, -1, -1, -1, -1 },
    { "SHORT", "I", .constantValue.asInt = OrgApacheLuceneIndexMemoryMemoryIndex_VM_SHORT, 0x19, -1, -1, -1, -1 },
    { "INT", "I", .constantValue.asInt = OrgApacheLuceneIndexMemoryMemoryIndex_VM_INT, 0x19, -1, -1, -1, -1 },
    { "LONG", "I", .constantValue.asInt = OrgApacheLuceneIndexMemoryMemoryIndex_VM_LONG, 0x19, -1, -1, -1, -1 },
    { "FLOAT", "I", .constantValue.asInt = OrgApacheLuceneIndexMemoryMemoryIndex_VM_FLOAT, 0x19, -1, -1, -1, -1 },
    { "DOUBLE", "I", .constantValue.asInt = OrgApacheLuceneIndexMemoryMemoryIndex_VM_DOUBLE, 0x19, -1, -1, -1, -1 },
    { "LOG_PTR", "I", .constantValue.asLong = 0, 0x1a, -1, 13, -1, -1 },
    { "OBJECT_HEADER", "I", .constantValue.asLong = 0, 0x1a, -1, 14, -1, -1 },
  };
  static const void *ptrTable[] = { "sizeOf", "I", "sizeOfObject", "sizeOfObjectArray", "sizeOfCharArray", "sizeOfIntArray", "sizeOfString", "sizeOfHashMap", "sizeOfArrayList", "sizeOfArrayIntList", "log2", "D", &OrgApacheLuceneIndexMemoryMemoryIndex_VM_PTR, &OrgApacheLuceneIndexMemoryMemoryIndex_VM_LOG_PTR, &OrgApacheLuceneIndexMemoryMemoryIndex_VM_OBJECT_HEADER, "LOrgApacheLuceneIndexMemoryMemoryIndex;" };
  static const J2ObjcClassInfo _OrgApacheLuceneIndexMemoryMemoryIndex_VM = { "VM", "org.apache.lucene.index.memory", ptrTable, methods, fields, 7, 0x1a, 11, 11, 15, -1, -1, -1, -1 };
  return &_OrgApacheLuceneIndexMemoryMemoryIndex_VM;
}

+ (void)initialize {
  if (self == [OrgApacheLuceneIndexMemoryMemoryIndex_VM class]) {
    OrgApacheLuceneIndexMemoryMemoryIndex_VM_PTR = JreLoadStatic(OrgApacheLuceneUtilConstants, JRE_IS_64BIT) ? 8 : 4;
    OrgApacheLuceneIndexMemoryMemoryIndex_VM_LOG_PTR = (jint) JavaLangMath_roundWithDouble_(OrgApacheLuceneIndexMemoryMemoryIndex_VM_log2WithDouble_(OrgApacheLuceneIndexMemoryMemoryIndex_VM_PTR));
    OrgApacheLuceneIndexMemoryMemoryIndex_VM_OBJECT_HEADER = 2 * OrgApacheLuceneIndexMemoryMemoryIndex_VM_PTR;
    J2OBJC_SET_INITIALIZED(OrgApacheLuceneIndexMemoryMemoryIndex_VM)
  }
}

@end

void OrgApacheLuceneIndexMemoryMemoryIndex_VM_init(OrgApacheLuceneIndexMemoryMemoryIndex_VM *self) {
  NSObject_init(self);
}

OrgApacheLuceneIndexMemoryMemoryIndex_VM *new_OrgApacheLuceneIndexMemoryMemoryIndex_VM_init() {
  J2OBJC_NEW_IMPL(OrgApacheLuceneIndexMemoryMemoryIndex_VM, init)
}

OrgApacheLuceneIndexMemoryMemoryIndex_VM *create_OrgApacheLuceneIndexMemoryMemoryIndex_VM_init() {
  J2OBJC_CREATE_IMPL(OrgApacheLuceneIndexMemoryMemoryIndex_VM, init)
}

jint OrgApacheLuceneIndexMemoryMemoryIndex_VM_sizeOfWithInt_(jint n) {
  OrgApacheLuceneIndexMemoryMemoryIndex_VM_initialize();
  return JreLShift32(((JreRShift32((n - 1), OrgApacheLuceneIndexMemoryMemoryIndex_VM_LOG_PTR)) + 1), OrgApacheLuceneIndexMemoryMemoryIndex_VM_LOG_PTR);
}

jint OrgApacheLuceneIndexMemoryMemoryIndex_VM_sizeOfObjectWithInt_(jint n) {
  OrgApacheLuceneIndexMemoryMemoryIndex_VM_initialize();
  return OrgApacheLuceneIndexMemoryMemoryIndex_VM_sizeOfWithInt_(OrgApacheLuceneIndexMemoryMemoryIndex_VM_OBJECT_HEADER + n);
}

jint OrgApacheLuceneIndexMemoryMemoryIndex_VM_sizeOfObjectArrayWithInt_(jint len) {
  OrgApacheLuceneIndexMemoryMemoryIndex_VM_initialize();
  return OrgApacheLuceneIndexMemoryMemoryIndex_VM_sizeOfObjectWithInt_(OrgApacheLuceneIndexMemoryMemoryIndex_VM_INT + OrgApacheLuceneIndexMemoryMemoryIndex_VM_PTR * len);
}

jint OrgApacheLuceneIndexMemoryMemoryIndex_VM_sizeOfCharArrayWithInt_(jint len) {
  OrgApacheLuceneIndexMemoryMemoryIndex_VM_initialize();
  return OrgApacheLuceneIndexMemoryMemoryIndex_VM_sizeOfObjectWithInt_(OrgApacheLuceneIndexMemoryMemoryIndex_VM_INT + OrgApacheLuceneIndexMemoryMemoryIndex_VM_CHAR * len);
}

jint OrgApacheLuceneIndexMemoryMemoryIndex_VM_sizeOfIntArrayWithInt_(jint len) {
  OrgApacheLuceneIndexMemoryMemoryIndex_VM_initialize();
  return OrgApacheLuceneIndexMemoryMemoryIndex_VM_sizeOfObjectWithInt_(OrgApacheLuceneIndexMemoryMemoryIndex_VM_INT + OrgApacheLuceneIndexMemoryMemoryIndex_VM_INT * len);
}

jint OrgApacheLuceneIndexMemoryMemoryIndex_VM_sizeOfStringWithInt_(jint len) {
  OrgApacheLuceneIndexMemoryMemoryIndex_VM_initialize();
  return OrgApacheLuceneIndexMemoryMemoryIndex_VM_sizeOfObjectWithInt_(3 * OrgApacheLuceneIndexMemoryMemoryIndex_VM_INT + OrgApacheLuceneIndexMemoryMemoryIndex_VM_PTR) + OrgApacheLuceneIndexMemoryMemoryIndex_VM_sizeOfCharArrayWithInt_(len);
}

jint OrgApacheLuceneIndexMemoryMemoryIndex_VM_sizeOfHashMapWithInt_(jint len) {
  OrgApacheLuceneIndexMemoryMemoryIndex_VM_initialize();
  return OrgApacheLuceneIndexMemoryMemoryIndex_VM_sizeOfObjectWithInt_(4 * OrgApacheLuceneIndexMemoryMemoryIndex_VM_PTR + 4 * OrgApacheLuceneIndexMemoryMemoryIndex_VM_INT) + OrgApacheLuceneIndexMemoryMemoryIndex_VM_sizeOfObjectArrayWithInt_(len) + len * OrgApacheLuceneIndexMemoryMemoryIndex_VM_sizeOfObjectWithInt_(3 * OrgApacheLuceneIndexMemoryMemoryIndex_VM_PTR + OrgApacheLuceneIndexMemoryMemoryIndex_VM_INT);
}

jint OrgApacheLuceneIndexMemoryMemoryIndex_VM_sizeOfArrayListWithInt_(jint len) {
  OrgApacheLuceneIndexMemoryMemoryIndex_VM_initialize();
  return OrgApacheLuceneIndexMemoryMemoryIndex_VM_sizeOfObjectWithInt_(OrgApacheLuceneIndexMemoryMemoryIndex_VM_PTR + 2 * OrgApacheLuceneIndexMemoryMemoryIndex_VM_INT) + OrgApacheLuceneIndexMemoryMemoryIndex_VM_sizeOfObjectArrayWithInt_(len);
}

jint OrgApacheLuceneIndexMemoryMemoryIndex_VM_sizeOfArrayIntListWithInt_(jint len) {
  OrgApacheLuceneIndexMemoryMemoryIndex_VM_initialize();
  return OrgApacheLuceneIndexMemoryMemoryIndex_VM_sizeOfObjectWithInt_(OrgApacheLuceneIndexMemoryMemoryIndex_VM_PTR + OrgApacheLuceneIndexMemoryMemoryIndex_VM_INT) + OrgApacheLuceneIndexMemoryMemoryIndex_VM_sizeOfIntArrayWithInt_(len);
}

jdouble OrgApacheLuceneIndexMemoryMemoryIndex_VM_log2WithDouble_(jdouble value) {
  OrgApacheLuceneIndexMemoryMemoryIndex_VM_initialize();
  return JavaLangMath_logWithDouble_(value) / JavaLangMath_logWithDouble_(2);
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheLuceneIndexMemoryMemoryIndex_VM)
