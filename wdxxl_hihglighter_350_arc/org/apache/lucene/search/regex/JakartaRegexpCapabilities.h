//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: jar:file:wdxxl_lucene_350_highlighter.jar!org/apache/lucene/search/regex/JakartaRegexpCapabilities.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgApacheLuceneSearchRegexJakartaRegexpCapabilities")
#ifdef RESTRICT_OrgApacheLuceneSearchRegexJakartaRegexpCapabilities
#define INCLUDE_ALL_OrgApacheLuceneSearchRegexJakartaRegexpCapabilities 0
#else
#define INCLUDE_ALL_OrgApacheLuceneSearchRegexJakartaRegexpCapabilities 1
#endif
#undef RESTRICT_OrgApacheLuceneSearchRegexJakartaRegexpCapabilities

#if !defined (OrgApacheLuceneSearchRegexJakartaRegexpCapabilities_) && (INCLUDE_ALL_OrgApacheLuceneSearchRegexJakartaRegexpCapabilities || defined(INCLUDE_OrgApacheLuceneSearchRegexJakartaRegexpCapabilities))
#define OrgApacheLuceneSearchRegexJakartaRegexpCapabilities_

#define RESTRICT_OrgApacheLuceneSearchRegexRegexCapabilities 1
#define INCLUDE_OrgApacheLuceneSearchRegexRegexCapabilities 1
#include "org/apache/lucene/search/regex/RegexCapabilities.h"

@interface OrgApacheLuceneSearchRegexJakartaRegexpCapabilities : NSObject < OrgApacheLuceneSearchRegexRegexCapabilities >

#pragma mark Public

- (instancetype)init;

- (instancetype)initWithInt:(jint)flags;

- (void)compileWithNSString:(NSString *)pattern;

- (jboolean)isEqual:(id)o;

- (NSUInteger)hash;

- (jboolean)matchWithNSString:(NSString *)string;

- (NSString *)prefix;

@end

J2OBJC_STATIC_INIT(OrgApacheLuceneSearchRegexJakartaRegexpCapabilities)

inline jint OrgApacheLuceneSearchRegexJakartaRegexpCapabilities_get_FLAG_MATCH_NORMAL();
#define OrgApacheLuceneSearchRegexJakartaRegexpCapabilities_FLAG_MATCH_NORMAL 0
J2OBJC_STATIC_FIELD_CONSTANT(OrgApacheLuceneSearchRegexJakartaRegexpCapabilities, FLAG_MATCH_NORMAL, jint)

inline jint OrgApacheLuceneSearchRegexJakartaRegexpCapabilities_get_FLAG_MATCH_CASEINDEPENDENT();
#define OrgApacheLuceneSearchRegexJakartaRegexpCapabilities_FLAG_MATCH_CASEINDEPENDENT 1
J2OBJC_STATIC_FIELD_CONSTANT(OrgApacheLuceneSearchRegexJakartaRegexpCapabilities, FLAG_MATCH_CASEINDEPENDENT, jint)

FOUNDATION_EXPORT void OrgApacheLuceneSearchRegexJakartaRegexpCapabilities_init(OrgApacheLuceneSearchRegexJakartaRegexpCapabilities *self);

FOUNDATION_EXPORT OrgApacheLuceneSearchRegexJakartaRegexpCapabilities *new_OrgApacheLuceneSearchRegexJakartaRegexpCapabilities_init() NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgApacheLuceneSearchRegexJakartaRegexpCapabilities *create_OrgApacheLuceneSearchRegexJakartaRegexpCapabilities_init();

FOUNDATION_EXPORT void OrgApacheLuceneSearchRegexJakartaRegexpCapabilities_initWithInt_(OrgApacheLuceneSearchRegexJakartaRegexpCapabilities *self, jint flags);

FOUNDATION_EXPORT OrgApacheLuceneSearchRegexJakartaRegexpCapabilities *new_OrgApacheLuceneSearchRegexJakartaRegexpCapabilities_initWithInt_(jint flags) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgApacheLuceneSearchRegexJakartaRegexpCapabilities *create_OrgApacheLuceneSearchRegexJakartaRegexpCapabilities_initWithInt_(jint flags);

J2OBJC_TYPE_LITERAL_HEADER(OrgApacheLuceneSearchRegexJakartaRegexpCapabilities)

#endif

#pragma pop_macro("INCLUDE_ALL_OrgApacheLuceneSearchRegexJakartaRegexpCapabilities")
