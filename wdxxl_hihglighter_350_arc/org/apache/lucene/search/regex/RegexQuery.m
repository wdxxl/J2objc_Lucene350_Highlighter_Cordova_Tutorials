//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: jar:file:wdxxl_lucene_350_highlighter.jar!org/apache/lucene/search/regex/RegexQuery.java
//

#include "IOSClass.h"
#include "J2ObjC_source.h"
#include "java/lang/StringBuilder.h"
#include "org/apache/lucene/index/IndexReader.h"
#include "org/apache/lucene/index/Term.h"
#include "org/apache/lucene/search/FilteredTermEnum.h"
#include "org/apache/lucene/search/MultiTermQuery.h"
#include "org/apache/lucene/search/regex/JavaUtilRegexCapabilities.h"
#include "org/apache/lucene/search/regex/RegexCapabilities.h"
#include "org/apache/lucene/search/regex/RegexQuery.h"
#include "org/apache/lucene/search/regex/RegexTermEnum.h"
#include "org/apache/lucene/util/ToStringUtils.h"

@interface OrgApacheLuceneSearchRegexRegexQuery () {
 @public
  id<OrgApacheLuceneSearchRegexRegexCapabilities> regexImpl_;
  OrgApacheLuceneIndexTerm *term_;
}

@end

J2OBJC_FIELD_SETTER(OrgApacheLuceneSearchRegexRegexQuery, regexImpl_, id<OrgApacheLuceneSearchRegexRegexCapabilities>)
J2OBJC_FIELD_SETTER(OrgApacheLuceneSearchRegexRegexQuery, term_, OrgApacheLuceneIndexTerm *)

@implementation OrgApacheLuceneSearchRegexRegexQuery

- (instancetype)initWithOrgApacheLuceneIndexTerm:(OrgApacheLuceneIndexTerm *)term {
  OrgApacheLuceneSearchRegexRegexQuery_initWithOrgApacheLuceneIndexTerm_(self, term);
  return self;
}

- (OrgApacheLuceneIndexTerm *)getTerm {
  return term_;
}

- (void)setRegexImplementationWithOrgApacheLuceneSearchRegexRegexCapabilities:(id<OrgApacheLuceneSearchRegexRegexCapabilities>)impl {
  self->regexImpl_ = impl;
}

- (id<OrgApacheLuceneSearchRegexRegexCapabilities>)getRegexImplementation {
  return regexImpl_;
}

- (OrgApacheLuceneSearchFilteredTermEnum *)getEnumWithOrgApacheLuceneIndexIndexReader:(OrgApacheLuceneIndexIndexReader *)reader {
  return new_OrgApacheLuceneSearchRegexRegexTermEnum_initWithOrgApacheLuceneIndexIndexReader_withOrgApacheLuceneIndexTerm_withOrgApacheLuceneSearchRegexRegexCapabilities_(reader, term_, regexImpl_);
}

- (NSString *)toStringWithNSString:(NSString *)field {
  JavaLangStringBuilder *buffer = new_JavaLangStringBuilder_init();
  if (![((NSString *) nil_chk([((OrgApacheLuceneIndexTerm *) nil_chk(term_)) field])) isEqual:field]) {
    (void) [buffer appendWithNSString:[((OrgApacheLuceneIndexTerm *) nil_chk(term_)) field]];
    (void) [buffer appendWithNSString:@":"];
  }
  (void) [buffer appendWithNSString:[((OrgApacheLuceneIndexTerm *) nil_chk(term_)) text]];
  (void) [buffer appendWithNSString:OrgApacheLuceneUtilToStringUtils_boostWithFloat_([self getBoost])];
  return [buffer description];
}

- (jboolean)isEqual:(id)o {
  if (self == o) return true;
  if (o == nil || [self java_getClass] != [o java_getClass]) return false;
  if (![super isEqual:o]) return false;
  OrgApacheLuceneSearchRegexRegexQuery *that = (OrgApacheLuceneSearchRegexRegexQuery *) cast_chk(o, [OrgApacheLuceneSearchRegexRegexQuery class]);
  return [((id<OrgApacheLuceneSearchRegexRegexCapabilities>) nil_chk(regexImpl_)) isEqual:that->regexImpl_];
}

- (NSUInteger)hash {
  jint result = ((jint) [super hash]);
  result = 29 * result + ((jint) [((id<OrgApacheLuceneSearchRegexRegexCapabilities>) nil_chk(regexImpl_)) hash]);
  return result;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, "LOrgApacheLuceneIndexTerm;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 1, 2, -1, -1, -1, -1 },
    { NULL, "LOrgApacheLuceneSearchRegexRegexCapabilities;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgApacheLuceneSearchFilteredTermEnum;", 0x4, 3, 4, 5, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, 6, 7, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, 8, 9, -1, -1, -1, -1 },
    { NULL, "I", 0x1, 10, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithOrgApacheLuceneIndexTerm:);
  methods[1].selector = @selector(getTerm);
  methods[2].selector = @selector(setRegexImplementationWithOrgApacheLuceneSearchRegexRegexCapabilities:);
  methods[3].selector = @selector(getRegexImplementation);
  methods[4].selector = @selector(getEnumWithOrgApacheLuceneIndexIndexReader:);
  methods[5].selector = @selector(toStringWithNSString:);
  methods[6].selector = @selector(isEqual:);
  methods[7].selector = @selector(hash);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "regexImpl_", "LOrgApacheLuceneSearchRegexRegexCapabilities;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "term_", "LOrgApacheLuceneIndexTerm;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LOrgApacheLuceneIndexTerm;", "setRegexImplementation", "LOrgApacheLuceneSearchRegexRegexCapabilities;", "getEnum", "LOrgApacheLuceneIndexIndexReader;", "LJavaIoIOException;", "toString", "LNSString;", "equals", "LNSObject;", "hashCode" };
  static const J2ObjcClassInfo _OrgApacheLuceneSearchRegexRegexQuery = { "RegexQuery", "org.apache.lucene.search.regex", ptrTable, methods, fields, 7, 0x1, 8, 2, -1, -1, -1, -1, -1 };
  return &_OrgApacheLuceneSearchRegexRegexQuery;
}

@end

void OrgApacheLuceneSearchRegexRegexQuery_initWithOrgApacheLuceneIndexTerm_(OrgApacheLuceneSearchRegexRegexQuery *self, OrgApacheLuceneIndexTerm *term) {
  OrgApacheLuceneSearchMultiTermQuery_init(self);
  self->regexImpl_ = new_OrgApacheLuceneSearchRegexJavaUtilRegexCapabilities_init();
  self->term_ = term;
}

OrgApacheLuceneSearchRegexRegexQuery *new_OrgApacheLuceneSearchRegexRegexQuery_initWithOrgApacheLuceneIndexTerm_(OrgApacheLuceneIndexTerm *term) {
  J2OBJC_NEW_IMPL(OrgApacheLuceneSearchRegexRegexQuery, initWithOrgApacheLuceneIndexTerm_, term)
}

OrgApacheLuceneSearchRegexRegexQuery *create_OrgApacheLuceneSearchRegexRegexQuery_initWithOrgApacheLuceneIndexTerm_(OrgApacheLuceneIndexTerm *term) {
  J2OBJC_CREATE_IMPL(OrgApacheLuceneSearchRegexRegexQuery, initWithOrgApacheLuceneIndexTerm_, term)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheLuceneSearchRegexRegexQuery)
