//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: jar:file:wdxxl_lucene_350_highlighter.jar!org/apache/lucene/search/vectorhighlight/FastVectorHighlighter.java
//

#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "java/io/IOException.h"
#include "java/lang/Integer.h"
#include "java/lang/RuntimeException.h"
#include "org/apache/lucene/index/IndexReader.h"
#include "org/apache/lucene/search/Query.h"
#include "org/apache/lucene/search/highlight/Encoder.h"
#include "org/apache/lucene/search/vectorhighlight/FastVectorHighlighter.h"
#include "org/apache/lucene/search/vectorhighlight/FieldFragList.h"
#include "org/apache/lucene/search/vectorhighlight/FieldPhraseList.h"
#include "org/apache/lucene/search/vectorhighlight/FieldQuery.h"
#include "org/apache/lucene/search/vectorhighlight/FieldTermStack.h"
#include "org/apache/lucene/search/vectorhighlight/FragListBuilder.h"
#include "org/apache/lucene/search/vectorhighlight/FragmentsBuilder.h"
#include "org/apache/lucene/search/vectorhighlight/ScoreOrderFragmentsBuilder.h"
#include "org/apache/lucene/search/vectorhighlight/SimpleFragListBuilder.h"

@interface OrgApacheLuceneSearchVectorhighlightFastVectorHighlighter () {
 @public
  jboolean phraseHighlight_;
  jboolean fieldMatch_;
  id<OrgApacheLuceneSearchVectorhighlightFragListBuilder> fragListBuilder_;
  id<OrgApacheLuceneSearchVectorhighlightFragmentsBuilder> fragmentsBuilder_;
  jint phraseLimit_;
}

- (OrgApacheLuceneSearchVectorhighlightFieldFragList *)getFieldFragListWithOrgApacheLuceneSearchVectorhighlightFragListBuilder:(id<OrgApacheLuceneSearchVectorhighlightFragListBuilder>)fragListBuilder
                                                                            withOrgApacheLuceneSearchVectorhighlightFieldQuery:(OrgApacheLuceneSearchVectorhighlightFieldQuery *)fieldQuery
                                                                                           withOrgApacheLuceneIndexIndexReader:(OrgApacheLuceneIndexIndexReader *)reader
                                                                                                                       withInt:(jint)docId
                                                                                                                  withNSString:(NSString *)fieldName
                                                                                                                       withInt:(jint)fragCharSize;

@end

J2OBJC_FIELD_SETTER(OrgApacheLuceneSearchVectorhighlightFastVectorHighlighter, fragListBuilder_, id<OrgApacheLuceneSearchVectorhighlightFragListBuilder>)
J2OBJC_FIELD_SETTER(OrgApacheLuceneSearchVectorhighlightFastVectorHighlighter, fragmentsBuilder_, id<OrgApacheLuceneSearchVectorhighlightFragmentsBuilder>)

__attribute__((unused)) static OrgApacheLuceneSearchVectorhighlightFieldFragList *OrgApacheLuceneSearchVectorhighlightFastVectorHighlighter_getFieldFragListWithOrgApacheLuceneSearchVectorhighlightFragListBuilder_withOrgApacheLuceneSearchVectorhighlightFieldQuery_withOrgApacheLuceneIndexIndexReader_withInt_withNSString_withInt_(OrgApacheLuceneSearchVectorhighlightFastVectorHighlighter *self, id<OrgApacheLuceneSearchVectorhighlightFragListBuilder> fragListBuilder, OrgApacheLuceneSearchVectorhighlightFieldQuery *fieldQuery, OrgApacheLuceneIndexIndexReader *reader, jint docId, NSString *fieldName, jint fragCharSize);

@implementation OrgApacheLuceneSearchVectorhighlightFastVectorHighlighter

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  OrgApacheLuceneSearchVectorhighlightFastVectorHighlighter_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (instancetype)initWithBoolean:(jboolean)phraseHighlight
                    withBoolean:(jboolean)fieldMatch {
  OrgApacheLuceneSearchVectorhighlightFastVectorHighlighter_initWithBoolean_withBoolean_(self, phraseHighlight, fieldMatch);
  return self;
}

- (instancetype)initWithBoolean:(jboolean)phraseHighlight
                    withBoolean:(jboolean)fieldMatch
withOrgApacheLuceneSearchVectorhighlightFragListBuilder:(id<OrgApacheLuceneSearchVectorhighlightFragListBuilder>)fragListBuilder
withOrgApacheLuceneSearchVectorhighlightFragmentsBuilder:(id<OrgApacheLuceneSearchVectorhighlightFragmentsBuilder>)fragmentsBuilder {
  OrgApacheLuceneSearchVectorhighlightFastVectorHighlighter_initWithBoolean_withBoolean_withOrgApacheLuceneSearchVectorhighlightFragListBuilder_withOrgApacheLuceneSearchVectorhighlightFragmentsBuilder_(self, phraseHighlight, fieldMatch, fragListBuilder, fragmentsBuilder);
  return self;
}

- (OrgApacheLuceneSearchVectorhighlightFieldQuery *)getFieldQueryWithOrgApacheLuceneSearchQuery:(OrgApacheLuceneSearchQuery *)query {
  @try {
    return new_OrgApacheLuceneSearchVectorhighlightFieldQuery_initWithOrgApacheLuceneSearchQuery_withOrgApacheLuceneIndexIndexReader_withBoolean_withBoolean_(query, nil, phraseHighlight_, fieldMatch_);
  }
  @catch (JavaIoIOException *e) {
    @throw new_JavaLangRuntimeException_initWithNSException_(e);
  }
}

- (OrgApacheLuceneSearchVectorhighlightFieldQuery *)getFieldQueryWithOrgApacheLuceneSearchQuery:(OrgApacheLuceneSearchQuery *)query
                                                            withOrgApacheLuceneIndexIndexReader:(OrgApacheLuceneIndexIndexReader *)reader {
  return new_OrgApacheLuceneSearchVectorhighlightFieldQuery_initWithOrgApacheLuceneSearchQuery_withOrgApacheLuceneIndexIndexReader_withBoolean_withBoolean_(query, reader, phraseHighlight_, fieldMatch_);
}

- (NSString *)getBestFragmentWithOrgApacheLuceneSearchVectorhighlightFieldQuery:(OrgApacheLuceneSearchVectorhighlightFieldQuery *)fieldQuery
                                            withOrgApacheLuceneIndexIndexReader:(OrgApacheLuceneIndexIndexReader *)reader
                                                                        withInt:(jint)docId
                                                                   withNSString:(NSString *)fieldName
                                                                        withInt:(jint)fragCharSize {
  OrgApacheLuceneSearchVectorhighlightFieldFragList *fieldFragList = OrgApacheLuceneSearchVectorhighlightFastVectorHighlighter_getFieldFragListWithOrgApacheLuceneSearchVectorhighlightFragListBuilder_withOrgApacheLuceneSearchVectorhighlightFieldQuery_withOrgApacheLuceneIndexIndexReader_withInt_withNSString_withInt_(self, fragListBuilder_, fieldQuery, reader, docId, fieldName, fragCharSize);
  return [((id<OrgApacheLuceneSearchVectorhighlightFragmentsBuilder>) nil_chk(fragmentsBuilder_)) createFragmentWithOrgApacheLuceneIndexIndexReader:reader withInt:docId withNSString:fieldName withOrgApacheLuceneSearchVectorhighlightFieldFragList:fieldFragList];
}

- (IOSObjectArray *)getBestFragmentsWithOrgApacheLuceneSearchVectorhighlightFieldQuery:(OrgApacheLuceneSearchVectorhighlightFieldQuery *)fieldQuery
                                                   withOrgApacheLuceneIndexIndexReader:(OrgApacheLuceneIndexIndexReader *)reader
                                                                               withInt:(jint)docId
                                                                          withNSString:(NSString *)fieldName
                                                                               withInt:(jint)fragCharSize
                                                                               withInt:(jint)maxNumFragments {
  OrgApacheLuceneSearchVectorhighlightFieldFragList *fieldFragList = OrgApacheLuceneSearchVectorhighlightFastVectorHighlighter_getFieldFragListWithOrgApacheLuceneSearchVectorhighlightFragListBuilder_withOrgApacheLuceneSearchVectorhighlightFieldQuery_withOrgApacheLuceneIndexIndexReader_withInt_withNSString_withInt_(self, fragListBuilder_, fieldQuery, reader, docId, fieldName, fragCharSize);
  return [((id<OrgApacheLuceneSearchVectorhighlightFragmentsBuilder>) nil_chk(fragmentsBuilder_)) createFragmentsWithOrgApacheLuceneIndexIndexReader:reader withInt:docId withNSString:fieldName withOrgApacheLuceneSearchVectorhighlightFieldFragList:fieldFragList withInt:maxNumFragments];
}

- (NSString *)getBestFragmentWithOrgApacheLuceneSearchVectorhighlightFieldQuery:(OrgApacheLuceneSearchVectorhighlightFieldQuery *)fieldQuery
                                            withOrgApacheLuceneIndexIndexReader:(OrgApacheLuceneIndexIndexReader *)reader
                                                                        withInt:(jint)docId
                                                                   withNSString:(NSString *)fieldName
                                                                        withInt:(jint)fragCharSize
                        withOrgApacheLuceneSearchVectorhighlightFragListBuilder:(id<OrgApacheLuceneSearchVectorhighlightFragListBuilder>)fragListBuilder
                       withOrgApacheLuceneSearchVectorhighlightFragmentsBuilder:(id<OrgApacheLuceneSearchVectorhighlightFragmentsBuilder>)fragmentsBuilder
                                                              withNSStringArray:(IOSObjectArray *)preTags
                                                              withNSStringArray:(IOSObjectArray *)postTags
                                      withOrgApacheLuceneSearchHighlightEncoder:(id<OrgApacheLuceneSearchHighlightEncoder>)encoder {
  OrgApacheLuceneSearchVectorhighlightFieldFragList *fieldFragList = OrgApacheLuceneSearchVectorhighlightFastVectorHighlighter_getFieldFragListWithOrgApacheLuceneSearchVectorhighlightFragListBuilder_withOrgApacheLuceneSearchVectorhighlightFieldQuery_withOrgApacheLuceneIndexIndexReader_withInt_withNSString_withInt_(self, fragListBuilder, fieldQuery, reader, docId, fieldName, fragCharSize);
  return [((id<OrgApacheLuceneSearchVectorhighlightFragmentsBuilder>) nil_chk(fragmentsBuilder)) createFragmentWithOrgApacheLuceneIndexIndexReader:reader withInt:docId withNSString:fieldName withOrgApacheLuceneSearchVectorhighlightFieldFragList:fieldFragList withNSStringArray:preTags withNSStringArray:postTags withOrgApacheLuceneSearchHighlightEncoder:encoder];
}

- (IOSObjectArray *)getBestFragmentsWithOrgApacheLuceneSearchVectorhighlightFieldQuery:(OrgApacheLuceneSearchVectorhighlightFieldQuery *)fieldQuery
                                                   withOrgApacheLuceneIndexIndexReader:(OrgApacheLuceneIndexIndexReader *)reader
                                                                               withInt:(jint)docId
                                                                          withNSString:(NSString *)fieldName
                                                                               withInt:(jint)fragCharSize
                                                                               withInt:(jint)maxNumFragments
                               withOrgApacheLuceneSearchVectorhighlightFragListBuilder:(id<OrgApacheLuceneSearchVectorhighlightFragListBuilder>)fragListBuilder
                              withOrgApacheLuceneSearchVectorhighlightFragmentsBuilder:(id<OrgApacheLuceneSearchVectorhighlightFragmentsBuilder>)fragmentsBuilder
                                                                     withNSStringArray:(IOSObjectArray *)preTags
                                                                     withNSStringArray:(IOSObjectArray *)postTags
                                             withOrgApacheLuceneSearchHighlightEncoder:(id<OrgApacheLuceneSearchHighlightEncoder>)encoder {
  OrgApacheLuceneSearchVectorhighlightFieldFragList *fieldFragList = OrgApacheLuceneSearchVectorhighlightFastVectorHighlighter_getFieldFragListWithOrgApacheLuceneSearchVectorhighlightFragListBuilder_withOrgApacheLuceneSearchVectorhighlightFieldQuery_withOrgApacheLuceneIndexIndexReader_withInt_withNSString_withInt_(self, fragListBuilder, fieldQuery, reader, docId, fieldName, fragCharSize);
  return [((id<OrgApacheLuceneSearchVectorhighlightFragmentsBuilder>) nil_chk(fragmentsBuilder)) createFragmentsWithOrgApacheLuceneIndexIndexReader:reader withInt:docId withNSString:fieldName withOrgApacheLuceneSearchVectorhighlightFieldFragList:fieldFragList withInt:maxNumFragments withNSStringArray:preTags withNSStringArray:postTags withOrgApacheLuceneSearchHighlightEncoder:encoder];
}

- (OrgApacheLuceneSearchVectorhighlightFieldFragList *)getFieldFragListWithOrgApacheLuceneSearchVectorhighlightFragListBuilder:(id<OrgApacheLuceneSearchVectorhighlightFragListBuilder>)fragListBuilder
                                                                            withOrgApacheLuceneSearchVectorhighlightFieldQuery:(OrgApacheLuceneSearchVectorhighlightFieldQuery *)fieldQuery
                                                                                           withOrgApacheLuceneIndexIndexReader:(OrgApacheLuceneIndexIndexReader *)reader
                                                                                                                       withInt:(jint)docId
                                                                                                                  withNSString:(NSString *)fieldName
                                                                                                                       withInt:(jint)fragCharSize {
  return OrgApacheLuceneSearchVectorhighlightFastVectorHighlighter_getFieldFragListWithOrgApacheLuceneSearchVectorhighlightFragListBuilder_withOrgApacheLuceneSearchVectorhighlightFieldQuery_withOrgApacheLuceneIndexIndexReader_withInt_withNSString_withInt_(self, fragListBuilder, fieldQuery, reader, docId, fieldName, fragCharSize);
}

- (jboolean)isPhraseHighlight {
  return phraseHighlight_;
}

- (jboolean)isFieldMatch {
  return fieldMatch_;
}

- (jint)getPhraseLimit {
  return phraseLimit_;
}

- (void)setPhraseLimitWithInt:(jint)phraseLimit {
  self->phraseLimit_ = phraseLimit;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 1, -1, -1, -1, -1 },
    { NULL, "LOrgApacheLuceneSearchVectorhighlightFieldQuery;", 0x1, 2, 3, -1, -1, -1, -1 },
    { NULL, "LOrgApacheLuceneSearchVectorhighlightFieldQuery;", 0x1, 2, 4, 5, -1, -1, -1 },
    { NULL, "LNSString;", 0x11, 6, 7, 5, -1, -1, -1 },
    { NULL, "[LNSString;", 0x11, 8, 9, 5, -1, -1, -1 },
    { NULL, "LNSString;", 0x11, 6, 10, 5, -1, -1, -1 },
    { NULL, "[LNSString;", 0x11, 8, 11, 5, -1, -1, -1 },
    { NULL, "LOrgApacheLuceneSearchVectorhighlightFieldFragList;", 0x2, 12, 13, 5, -1, -1, -1 },
    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 14, 15, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(initWithBoolean:withBoolean:);
  methods[2].selector = @selector(initWithBoolean:withBoolean:withOrgApacheLuceneSearchVectorhighlightFragListBuilder:withOrgApacheLuceneSearchVectorhighlightFragmentsBuilder:);
  methods[3].selector = @selector(getFieldQueryWithOrgApacheLuceneSearchQuery:);
  methods[4].selector = @selector(getFieldQueryWithOrgApacheLuceneSearchQuery:withOrgApacheLuceneIndexIndexReader:);
  methods[5].selector = @selector(getBestFragmentWithOrgApacheLuceneSearchVectorhighlightFieldQuery:withOrgApacheLuceneIndexIndexReader:withInt:withNSString:withInt:);
  methods[6].selector = @selector(getBestFragmentsWithOrgApacheLuceneSearchVectorhighlightFieldQuery:withOrgApacheLuceneIndexIndexReader:withInt:withNSString:withInt:withInt:);
  methods[7].selector = @selector(getBestFragmentWithOrgApacheLuceneSearchVectorhighlightFieldQuery:withOrgApacheLuceneIndexIndexReader:withInt:withNSString:withInt:withOrgApacheLuceneSearchVectorhighlightFragListBuilder:withOrgApacheLuceneSearchVectorhighlightFragmentsBuilder:withNSStringArray:withNSStringArray:withOrgApacheLuceneSearchHighlightEncoder:);
  methods[8].selector = @selector(getBestFragmentsWithOrgApacheLuceneSearchVectorhighlightFieldQuery:withOrgApacheLuceneIndexIndexReader:withInt:withNSString:withInt:withInt:withOrgApacheLuceneSearchVectorhighlightFragListBuilder:withOrgApacheLuceneSearchVectorhighlightFragmentsBuilder:withNSStringArray:withNSStringArray:withOrgApacheLuceneSearchHighlightEncoder:);
  methods[9].selector = @selector(getFieldFragListWithOrgApacheLuceneSearchVectorhighlightFragListBuilder:withOrgApacheLuceneSearchVectorhighlightFieldQuery:withOrgApacheLuceneIndexIndexReader:withInt:withNSString:withInt:);
  methods[10].selector = @selector(isPhraseHighlight);
  methods[11].selector = @selector(isFieldMatch);
  methods[12].selector = @selector(getPhraseLimit);
  methods[13].selector = @selector(setPhraseLimitWithInt:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "DEFAULT_PHRASE_HIGHLIGHT", "Z", .constantValue.asBOOL = OrgApacheLuceneSearchVectorhighlightFastVectorHighlighter_DEFAULT_PHRASE_HIGHLIGHT, 0x19, -1, -1, -1, -1 },
    { "DEFAULT_FIELD_MATCH", "Z", .constantValue.asBOOL = OrgApacheLuceneSearchVectorhighlightFastVectorHighlighter_DEFAULT_FIELD_MATCH, 0x19, -1, -1, -1, -1 },
    { "phraseHighlight_", "Z", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "fieldMatch_", "Z", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "fragListBuilder_", "LOrgApacheLuceneSearchVectorhighlightFragListBuilder;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "fragmentsBuilder_", "LOrgApacheLuceneSearchVectorhighlightFragmentsBuilder;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "phraseLimit_", "I", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "ZZ", "ZZLOrgApacheLuceneSearchVectorhighlightFragListBuilder;LOrgApacheLuceneSearchVectorhighlightFragmentsBuilder;", "getFieldQuery", "LOrgApacheLuceneSearchQuery;", "LOrgApacheLuceneSearchQuery;LOrgApacheLuceneIndexIndexReader;", "LJavaIoIOException;", "getBestFragment", "LOrgApacheLuceneSearchVectorhighlightFieldQuery;LOrgApacheLuceneIndexIndexReader;ILNSString;I", "getBestFragments", "LOrgApacheLuceneSearchVectorhighlightFieldQuery;LOrgApacheLuceneIndexIndexReader;ILNSString;II", "LOrgApacheLuceneSearchVectorhighlightFieldQuery;LOrgApacheLuceneIndexIndexReader;ILNSString;ILOrgApacheLuceneSearchVectorhighlightFragListBuilder;LOrgApacheLuceneSearchVectorhighlightFragmentsBuilder;[LNSString;[LNSString;LOrgApacheLuceneSearchHighlightEncoder;", "LOrgApacheLuceneSearchVectorhighlightFieldQuery;LOrgApacheLuceneIndexIndexReader;ILNSString;IILOrgApacheLuceneSearchVectorhighlightFragListBuilder;LOrgApacheLuceneSearchVectorhighlightFragmentsBuilder;[LNSString;[LNSString;LOrgApacheLuceneSearchHighlightEncoder;", "getFieldFragList", "LOrgApacheLuceneSearchVectorhighlightFragListBuilder;LOrgApacheLuceneSearchVectorhighlightFieldQuery;LOrgApacheLuceneIndexIndexReader;ILNSString;I", "setPhraseLimit", "I" };
  static const J2ObjcClassInfo _OrgApacheLuceneSearchVectorhighlightFastVectorHighlighter = { "FastVectorHighlighter", "org.apache.lucene.search.vectorhighlight", ptrTable, methods, fields, 7, 0x1, 14, 7, -1, -1, -1, -1, -1 };
  return &_OrgApacheLuceneSearchVectorhighlightFastVectorHighlighter;
}

@end

void OrgApacheLuceneSearchVectorhighlightFastVectorHighlighter_init(OrgApacheLuceneSearchVectorhighlightFastVectorHighlighter *self) {
  OrgApacheLuceneSearchVectorhighlightFastVectorHighlighter_initWithBoolean_withBoolean_(self, OrgApacheLuceneSearchVectorhighlightFastVectorHighlighter_DEFAULT_PHRASE_HIGHLIGHT, OrgApacheLuceneSearchVectorhighlightFastVectorHighlighter_DEFAULT_FIELD_MATCH);
}

OrgApacheLuceneSearchVectorhighlightFastVectorHighlighter *new_OrgApacheLuceneSearchVectorhighlightFastVectorHighlighter_init() {
  J2OBJC_NEW_IMPL(OrgApacheLuceneSearchVectorhighlightFastVectorHighlighter, init)
}

OrgApacheLuceneSearchVectorhighlightFastVectorHighlighter *create_OrgApacheLuceneSearchVectorhighlightFastVectorHighlighter_init() {
  J2OBJC_CREATE_IMPL(OrgApacheLuceneSearchVectorhighlightFastVectorHighlighter, init)
}

void OrgApacheLuceneSearchVectorhighlightFastVectorHighlighter_initWithBoolean_withBoolean_(OrgApacheLuceneSearchVectorhighlightFastVectorHighlighter *self, jboolean phraseHighlight, jboolean fieldMatch) {
  OrgApacheLuceneSearchVectorhighlightFastVectorHighlighter_initWithBoolean_withBoolean_withOrgApacheLuceneSearchVectorhighlightFragListBuilder_withOrgApacheLuceneSearchVectorhighlightFragmentsBuilder_(self, phraseHighlight, fieldMatch, new_OrgApacheLuceneSearchVectorhighlightSimpleFragListBuilder_init(), new_OrgApacheLuceneSearchVectorhighlightScoreOrderFragmentsBuilder_init());
}

OrgApacheLuceneSearchVectorhighlightFastVectorHighlighter *new_OrgApacheLuceneSearchVectorhighlightFastVectorHighlighter_initWithBoolean_withBoolean_(jboolean phraseHighlight, jboolean fieldMatch) {
  J2OBJC_NEW_IMPL(OrgApacheLuceneSearchVectorhighlightFastVectorHighlighter, initWithBoolean_withBoolean_, phraseHighlight, fieldMatch)
}

OrgApacheLuceneSearchVectorhighlightFastVectorHighlighter *create_OrgApacheLuceneSearchVectorhighlightFastVectorHighlighter_initWithBoolean_withBoolean_(jboolean phraseHighlight, jboolean fieldMatch) {
  J2OBJC_CREATE_IMPL(OrgApacheLuceneSearchVectorhighlightFastVectorHighlighter, initWithBoolean_withBoolean_, phraseHighlight, fieldMatch)
}

void OrgApacheLuceneSearchVectorhighlightFastVectorHighlighter_initWithBoolean_withBoolean_withOrgApacheLuceneSearchVectorhighlightFragListBuilder_withOrgApacheLuceneSearchVectorhighlightFragmentsBuilder_(OrgApacheLuceneSearchVectorhighlightFastVectorHighlighter *self, jboolean phraseHighlight, jboolean fieldMatch, id<OrgApacheLuceneSearchVectorhighlightFragListBuilder> fragListBuilder, id<OrgApacheLuceneSearchVectorhighlightFragmentsBuilder> fragmentsBuilder) {
  NSObject_init(self);
  self->phraseLimit_ = JavaLangInteger_MAX_VALUE;
  self->phraseHighlight_ = phraseHighlight;
  self->fieldMatch_ = fieldMatch;
  self->fragListBuilder_ = fragListBuilder;
  self->fragmentsBuilder_ = fragmentsBuilder;
}

OrgApacheLuceneSearchVectorhighlightFastVectorHighlighter *new_OrgApacheLuceneSearchVectorhighlightFastVectorHighlighter_initWithBoolean_withBoolean_withOrgApacheLuceneSearchVectorhighlightFragListBuilder_withOrgApacheLuceneSearchVectorhighlightFragmentsBuilder_(jboolean phraseHighlight, jboolean fieldMatch, id<OrgApacheLuceneSearchVectorhighlightFragListBuilder> fragListBuilder, id<OrgApacheLuceneSearchVectorhighlightFragmentsBuilder> fragmentsBuilder) {
  J2OBJC_NEW_IMPL(OrgApacheLuceneSearchVectorhighlightFastVectorHighlighter, initWithBoolean_withBoolean_withOrgApacheLuceneSearchVectorhighlightFragListBuilder_withOrgApacheLuceneSearchVectorhighlightFragmentsBuilder_, phraseHighlight, fieldMatch, fragListBuilder, fragmentsBuilder)
}

OrgApacheLuceneSearchVectorhighlightFastVectorHighlighter *create_OrgApacheLuceneSearchVectorhighlightFastVectorHighlighter_initWithBoolean_withBoolean_withOrgApacheLuceneSearchVectorhighlightFragListBuilder_withOrgApacheLuceneSearchVectorhighlightFragmentsBuilder_(jboolean phraseHighlight, jboolean fieldMatch, id<OrgApacheLuceneSearchVectorhighlightFragListBuilder> fragListBuilder, id<OrgApacheLuceneSearchVectorhighlightFragmentsBuilder> fragmentsBuilder) {
  J2OBJC_CREATE_IMPL(OrgApacheLuceneSearchVectorhighlightFastVectorHighlighter, initWithBoolean_withBoolean_withOrgApacheLuceneSearchVectorhighlightFragListBuilder_withOrgApacheLuceneSearchVectorhighlightFragmentsBuilder_, phraseHighlight, fieldMatch, fragListBuilder, fragmentsBuilder)
}

OrgApacheLuceneSearchVectorhighlightFieldFragList *OrgApacheLuceneSearchVectorhighlightFastVectorHighlighter_getFieldFragListWithOrgApacheLuceneSearchVectorhighlightFragListBuilder_withOrgApacheLuceneSearchVectorhighlightFieldQuery_withOrgApacheLuceneIndexIndexReader_withInt_withNSString_withInt_(OrgApacheLuceneSearchVectorhighlightFastVectorHighlighter *self, id<OrgApacheLuceneSearchVectorhighlightFragListBuilder> fragListBuilder, OrgApacheLuceneSearchVectorhighlightFieldQuery *fieldQuery, OrgApacheLuceneIndexIndexReader *reader, jint docId, NSString *fieldName, jint fragCharSize) {
  OrgApacheLuceneSearchVectorhighlightFieldTermStack *fieldTermStack = new_OrgApacheLuceneSearchVectorhighlightFieldTermStack_initWithOrgApacheLuceneIndexIndexReader_withInt_withNSString_withOrgApacheLuceneSearchVectorhighlightFieldQuery_(reader, docId, fieldName, fieldQuery);
  OrgApacheLuceneSearchVectorhighlightFieldPhraseList *fieldPhraseList = new_OrgApacheLuceneSearchVectorhighlightFieldPhraseList_initWithOrgApacheLuceneSearchVectorhighlightFieldTermStack_withOrgApacheLuceneSearchVectorhighlightFieldQuery_withInt_(fieldTermStack, fieldQuery, self->phraseLimit_);
  return [((id<OrgApacheLuceneSearchVectorhighlightFragListBuilder>) nil_chk(fragListBuilder)) createFieldFragListWithOrgApacheLuceneSearchVectorhighlightFieldPhraseList:fieldPhraseList withInt:fragCharSize];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheLuceneSearchVectorhighlightFastVectorHighlighter)
