//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: jar:file:wdxxl_lucene_350_highlighter.jar!org/apache/lucene/search/highlight/QueryTermExtractor.java
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "java/io/IOException.h"
#include "java/lang/Math.h"
#include "java/lang/UnsupportedOperationException.h"
#include "java/util/HashSet.h"
#include "java/util/Iterator.h"
#include "org/apache/lucene/index/IndexReader.h"
#include "org/apache/lucene/index/Term.h"
#include "org/apache/lucene/search/BooleanClause.h"
#include "org/apache/lucene/search/BooleanQuery.h"
#include "org/apache/lucene/search/FilteredQuery.h"
#include "org/apache/lucene/search/Query.h"
#include "org/apache/lucene/search/highlight/QueryTermExtractor.h"
#include "org/apache/lucene/search/highlight/WeightedTerm.h"
#include "org/apache/lucene/util/StringHelper.h"

@interface OrgApacheLuceneSearchHighlightQueryTermExtractor ()

+ (void)getTermsWithOrgApacheLuceneSearchQuery:(OrgApacheLuceneSearchQuery *)query
                           withJavaUtilHashSet:(JavaUtilHashSet *)terms
                                   withBoolean:(jboolean)prohibited
                                  withNSString:(NSString *)fieldName;

+ (void)getTermsFromBooleanQueryWithOrgApacheLuceneSearchBooleanQuery:(OrgApacheLuceneSearchBooleanQuery *)query
                                                  withJavaUtilHashSet:(JavaUtilHashSet *)terms
                                                          withBoolean:(jboolean)prohibited
                                                         withNSString:(NSString *)fieldName;

+ (void)getTermsFromFilteredQueryWithOrgApacheLuceneSearchFilteredQuery:(OrgApacheLuceneSearchFilteredQuery *)query
                                                    withJavaUtilHashSet:(JavaUtilHashSet *)terms
                                                            withBoolean:(jboolean)prohibited
                                                           withNSString:(NSString *)fieldName;

@end

__attribute__((unused)) static void OrgApacheLuceneSearchHighlightQueryTermExtractor_getTermsWithOrgApacheLuceneSearchQuery_withJavaUtilHashSet_withBoolean_withNSString_(OrgApacheLuceneSearchQuery *query, JavaUtilHashSet *terms, jboolean prohibited, NSString *fieldName);

__attribute__((unused)) static void OrgApacheLuceneSearchHighlightQueryTermExtractor_getTermsFromBooleanQueryWithOrgApacheLuceneSearchBooleanQuery_withJavaUtilHashSet_withBoolean_withNSString_(OrgApacheLuceneSearchBooleanQuery *query, JavaUtilHashSet *terms, jboolean prohibited, NSString *fieldName);

__attribute__((unused)) static void OrgApacheLuceneSearchHighlightQueryTermExtractor_getTermsFromFilteredQueryWithOrgApacheLuceneSearchFilteredQuery_withJavaUtilHashSet_withBoolean_withNSString_(OrgApacheLuceneSearchFilteredQuery *query, JavaUtilHashSet *terms, jboolean prohibited, NSString *fieldName);

@implementation OrgApacheLuceneSearchHighlightQueryTermExtractor

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  OrgApacheLuceneSearchHighlightQueryTermExtractor_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (IOSObjectArray *)getTermsWithOrgApacheLuceneSearchQuery:(OrgApacheLuceneSearchQuery *)query {
  return OrgApacheLuceneSearchHighlightQueryTermExtractor_getTermsWithOrgApacheLuceneSearchQuery_(query);
}

+ (IOSObjectArray *)getIdfWeightedTermsWithOrgApacheLuceneSearchQuery:(OrgApacheLuceneSearchQuery *)query
                                  withOrgApacheLuceneIndexIndexReader:(OrgApacheLuceneIndexIndexReader *)reader
                                                         withNSString:(NSString *)fieldName {
  return OrgApacheLuceneSearchHighlightQueryTermExtractor_getIdfWeightedTermsWithOrgApacheLuceneSearchQuery_withOrgApacheLuceneIndexIndexReader_withNSString_(query, reader, fieldName);
}

+ (IOSObjectArray *)getTermsWithOrgApacheLuceneSearchQuery:(OrgApacheLuceneSearchQuery *)query
                                               withBoolean:(jboolean)prohibited
                                              withNSString:(NSString *)fieldName {
  return OrgApacheLuceneSearchHighlightQueryTermExtractor_getTermsWithOrgApacheLuceneSearchQuery_withBoolean_withNSString_(query, prohibited, fieldName);
}

+ (IOSObjectArray *)getTermsWithOrgApacheLuceneSearchQuery:(OrgApacheLuceneSearchQuery *)query
                                               withBoolean:(jboolean)prohibited {
  return OrgApacheLuceneSearchHighlightQueryTermExtractor_getTermsWithOrgApacheLuceneSearchQuery_withBoolean_(query, prohibited);
}

+ (void)getTermsWithOrgApacheLuceneSearchQuery:(OrgApacheLuceneSearchQuery *)query
                           withJavaUtilHashSet:(JavaUtilHashSet *)terms
                                   withBoolean:(jboolean)prohibited
                                  withNSString:(NSString *)fieldName {
  OrgApacheLuceneSearchHighlightQueryTermExtractor_getTermsWithOrgApacheLuceneSearchQuery_withJavaUtilHashSet_withBoolean_withNSString_(query, terms, prohibited, fieldName);
}

+ (void)getTermsFromBooleanQueryWithOrgApacheLuceneSearchBooleanQuery:(OrgApacheLuceneSearchBooleanQuery *)query
                                                  withJavaUtilHashSet:(JavaUtilHashSet *)terms
                                                          withBoolean:(jboolean)prohibited
                                                         withNSString:(NSString *)fieldName {
  OrgApacheLuceneSearchHighlightQueryTermExtractor_getTermsFromBooleanQueryWithOrgApacheLuceneSearchBooleanQuery_withJavaUtilHashSet_withBoolean_withNSString_(query, terms, prohibited, fieldName);
}

+ (void)getTermsFromFilteredQueryWithOrgApacheLuceneSearchFilteredQuery:(OrgApacheLuceneSearchFilteredQuery *)query
                                                    withJavaUtilHashSet:(JavaUtilHashSet *)terms
                                                            withBoolean:(jboolean)prohibited
                                                           withNSString:(NSString *)fieldName {
  OrgApacheLuceneSearchHighlightQueryTermExtractor_getTermsFromFilteredQueryWithOrgApacheLuceneSearchFilteredQuery_withJavaUtilHashSet_withBoolean_withNSString_(query, terms, prohibited, fieldName);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "[LOrgApacheLuceneSearchHighlightWeightedTerm;", 0x19, 0, 1, -1, -1, -1, -1 },
    { NULL, "[LOrgApacheLuceneSearchHighlightWeightedTerm;", 0x19, 2, 3, -1, -1, -1, -1 },
    { NULL, "[LOrgApacheLuceneSearchHighlightWeightedTerm;", 0x19, 0, 4, -1, -1, -1, -1 },
    { NULL, "[LOrgApacheLuceneSearchHighlightWeightedTerm;", 0x19, 0, 5, -1, -1, -1, -1 },
    { NULL, "V", 0x1a, 0, 6, -1, 7, -1, -1 },
    { NULL, "V", 0x1a, 8, 9, -1, 10, -1, -1 },
    { NULL, "V", 0xa, 11, 12, -1, 13, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(getTermsWithOrgApacheLuceneSearchQuery:);
  methods[2].selector = @selector(getIdfWeightedTermsWithOrgApacheLuceneSearchQuery:withOrgApacheLuceneIndexIndexReader:withNSString:);
  methods[3].selector = @selector(getTermsWithOrgApacheLuceneSearchQuery:withBoolean:withNSString:);
  methods[4].selector = @selector(getTermsWithOrgApacheLuceneSearchQuery:withBoolean:);
  methods[5].selector = @selector(getTermsWithOrgApacheLuceneSearchQuery:withJavaUtilHashSet:withBoolean:withNSString:);
  methods[6].selector = @selector(getTermsFromBooleanQueryWithOrgApacheLuceneSearchBooleanQuery:withJavaUtilHashSet:withBoolean:withNSString:);
  methods[7].selector = @selector(getTermsFromFilteredQueryWithOrgApacheLuceneSearchFilteredQuery:withJavaUtilHashSet:withBoolean:withNSString:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "getTerms", "LOrgApacheLuceneSearchQuery;", "getIdfWeightedTerms", "LOrgApacheLuceneSearchQuery;LOrgApacheLuceneIndexIndexReader;LNSString;", "LOrgApacheLuceneSearchQuery;ZLNSString;", "LOrgApacheLuceneSearchQuery;Z", "LOrgApacheLuceneSearchQuery;LJavaUtilHashSet;ZLNSString;", "(Lorg/apache/lucene/search/Query;Ljava/util/HashSet<Lorg/apache/lucene/search/highlight/WeightedTerm;>;ZLjava/lang/String;)V", "getTermsFromBooleanQuery", "LOrgApacheLuceneSearchBooleanQuery;LJavaUtilHashSet;ZLNSString;", "(Lorg/apache/lucene/search/BooleanQuery;Ljava/util/HashSet<Lorg/apache/lucene/search/highlight/WeightedTerm;>;ZLjava/lang/String;)V", "getTermsFromFilteredQuery", "LOrgApacheLuceneSearchFilteredQuery;LJavaUtilHashSet;ZLNSString;", "(Lorg/apache/lucene/search/FilteredQuery;Ljava/util/HashSet<Lorg/apache/lucene/search/highlight/WeightedTerm;>;ZLjava/lang/String;)V" };
  static const J2ObjcClassInfo _OrgApacheLuceneSearchHighlightQueryTermExtractor = { "QueryTermExtractor", "org.apache.lucene.search.highlight", ptrTable, methods, NULL, 7, 0x11, 8, 0, -1, -1, -1, -1, -1 };
  return &_OrgApacheLuceneSearchHighlightQueryTermExtractor;
}

@end

void OrgApacheLuceneSearchHighlightQueryTermExtractor_init(OrgApacheLuceneSearchHighlightQueryTermExtractor *self) {
  NSObject_init(self);
}

OrgApacheLuceneSearchHighlightQueryTermExtractor *new_OrgApacheLuceneSearchHighlightQueryTermExtractor_init() {
  J2OBJC_NEW_IMPL(OrgApacheLuceneSearchHighlightQueryTermExtractor, init)
}

OrgApacheLuceneSearchHighlightQueryTermExtractor *create_OrgApacheLuceneSearchHighlightQueryTermExtractor_init() {
  J2OBJC_CREATE_IMPL(OrgApacheLuceneSearchHighlightQueryTermExtractor, init)
}

IOSObjectArray *OrgApacheLuceneSearchHighlightQueryTermExtractor_getTermsWithOrgApacheLuceneSearchQuery_(OrgApacheLuceneSearchQuery *query) {
  OrgApacheLuceneSearchHighlightQueryTermExtractor_initialize();
  return OrgApacheLuceneSearchHighlightQueryTermExtractor_getTermsWithOrgApacheLuceneSearchQuery_withBoolean_(query, false);
}

IOSObjectArray *OrgApacheLuceneSearchHighlightQueryTermExtractor_getIdfWeightedTermsWithOrgApacheLuceneSearchQuery_withOrgApacheLuceneIndexIndexReader_withNSString_(OrgApacheLuceneSearchQuery *query, OrgApacheLuceneIndexIndexReader *reader, NSString *fieldName) {
  OrgApacheLuceneSearchHighlightQueryTermExtractor_initialize();
  IOSObjectArray *terms = OrgApacheLuceneSearchHighlightQueryTermExtractor_getTermsWithOrgApacheLuceneSearchQuery_withBoolean_withNSString_(query, false, fieldName);
  jint totalNumDocs = [((OrgApacheLuceneIndexIndexReader *) nil_chk(reader)) numDocs];
  for (jint i = 0; i < ((IOSObjectArray *) nil_chk(terms))->size_; i++) {
    @try {
      jint docFreq = [reader docFreqWithOrgApacheLuceneIndexTerm:new_OrgApacheLuceneIndexTerm_initWithNSString_withNSString_(fieldName, ((OrgApacheLuceneSearchHighlightWeightedTerm *) nil_chk(IOSObjectArray_Get(terms, i)))->term_)];
      if (totalNumDocs < docFreq) {
        docFreq = totalNumDocs;
      }
      jfloat idf = (jfloat) (JavaLangMath_logWithDouble_((jfloat) totalNumDocs / (jdouble) (docFreq + 1)) + 1.0);
      JreTimesAssignFloatF(&((OrgApacheLuceneSearchHighlightWeightedTerm *) nil_chk(IOSObjectArray_Get(terms, i)))->weight_, idf);
    }
    @catch (JavaIoIOException *e) {
    }
  }
  return terms;
}

IOSObjectArray *OrgApacheLuceneSearchHighlightQueryTermExtractor_getTermsWithOrgApacheLuceneSearchQuery_withBoolean_withNSString_(OrgApacheLuceneSearchQuery *query, jboolean prohibited, NSString *fieldName) {
  OrgApacheLuceneSearchHighlightQueryTermExtractor_initialize();
  JavaUtilHashSet *terms = new_JavaUtilHashSet_init();
  if (fieldName != nil) {
    fieldName = OrgApacheLuceneUtilStringHelper_internWithNSString_(fieldName);
  }
  OrgApacheLuceneSearchHighlightQueryTermExtractor_getTermsWithOrgApacheLuceneSearchQuery_withJavaUtilHashSet_withBoolean_withNSString_(query, terms, prohibited, fieldName);
  return [terms toArrayWithNSObjectArray:[IOSObjectArray newArrayWithLength:0 type:OrgApacheLuceneSearchHighlightWeightedTerm_class_()]];
}

IOSObjectArray *OrgApacheLuceneSearchHighlightQueryTermExtractor_getTermsWithOrgApacheLuceneSearchQuery_withBoolean_(OrgApacheLuceneSearchQuery *query, jboolean prohibited) {
  OrgApacheLuceneSearchHighlightQueryTermExtractor_initialize();
  return OrgApacheLuceneSearchHighlightQueryTermExtractor_getTermsWithOrgApacheLuceneSearchQuery_withBoolean_withNSString_(query, prohibited, nil);
}

void OrgApacheLuceneSearchHighlightQueryTermExtractor_getTermsWithOrgApacheLuceneSearchQuery_withJavaUtilHashSet_withBoolean_withNSString_(OrgApacheLuceneSearchQuery *query, JavaUtilHashSet *terms, jboolean prohibited, NSString *fieldName) {
  OrgApacheLuceneSearchHighlightQueryTermExtractor_initialize();
  @try {
    if ([query isKindOfClass:[OrgApacheLuceneSearchBooleanQuery class]]) OrgApacheLuceneSearchHighlightQueryTermExtractor_getTermsFromBooleanQueryWithOrgApacheLuceneSearchBooleanQuery_withJavaUtilHashSet_withBoolean_withNSString_((OrgApacheLuceneSearchBooleanQuery *) cast_chk(query, [OrgApacheLuceneSearchBooleanQuery class]), terms, prohibited, fieldName);
    else if ([query isKindOfClass:[OrgApacheLuceneSearchFilteredQuery class]]) OrgApacheLuceneSearchHighlightQueryTermExtractor_getTermsFromFilteredQueryWithOrgApacheLuceneSearchFilteredQuery_withJavaUtilHashSet_withBoolean_withNSString_((OrgApacheLuceneSearchFilteredQuery *) cast_chk(query, [OrgApacheLuceneSearchFilteredQuery class]), terms, prohibited, fieldName);
    else {
      JavaUtilHashSet *nonWeightedTerms = new_JavaUtilHashSet_init();
      [((OrgApacheLuceneSearchQuery *) nil_chk(query)) extractTermsWithJavaUtilSet:nonWeightedTerms];
      for (id<JavaUtilIterator> iter = [nonWeightedTerms iterator]; [((id<JavaUtilIterator>) nil_chk(iter)) hasNext]; ) {
        OrgApacheLuceneIndexTerm *term = [iter next];
        if ((fieldName == nil) || ([((OrgApacheLuceneIndexTerm *) nil_chk(term)) field] == fieldName)) {
          [((JavaUtilHashSet *) nil_chk(terms)) addWithId:new_OrgApacheLuceneSearchHighlightWeightedTerm_initWithFloat_withNSString_([query getBoost], [((OrgApacheLuceneIndexTerm *) nil_chk(term)) text])];
        }
      }
    }
  }
  @catch (JavaLangUnsupportedOperationException *ignore) {
  }
}

void OrgApacheLuceneSearchHighlightQueryTermExtractor_getTermsFromBooleanQueryWithOrgApacheLuceneSearchBooleanQuery_withJavaUtilHashSet_withBoolean_withNSString_(OrgApacheLuceneSearchBooleanQuery *query, JavaUtilHashSet *terms, jboolean prohibited, NSString *fieldName) {
  OrgApacheLuceneSearchHighlightQueryTermExtractor_initialize();
  IOSObjectArray *queryClauses = [((OrgApacheLuceneSearchBooleanQuery *) nil_chk(query)) getClauses];
  for (jint i = 0; i < ((IOSObjectArray *) nil_chk(queryClauses))->size_; i++) {
    if (prohibited || [((OrgApacheLuceneSearchBooleanClause *) nil_chk(IOSObjectArray_Get(queryClauses, i))) getOccur] != JreLoadEnum(OrgApacheLuceneSearchBooleanClause_Occur, MUST_NOT)) OrgApacheLuceneSearchHighlightQueryTermExtractor_getTermsWithOrgApacheLuceneSearchQuery_withJavaUtilHashSet_withBoolean_withNSString_([((OrgApacheLuceneSearchBooleanClause *) nil_chk(IOSObjectArray_Get(queryClauses, i))) getQuery], terms, prohibited, fieldName);
  }
}

void OrgApacheLuceneSearchHighlightQueryTermExtractor_getTermsFromFilteredQueryWithOrgApacheLuceneSearchFilteredQuery_withJavaUtilHashSet_withBoolean_withNSString_(OrgApacheLuceneSearchFilteredQuery *query, JavaUtilHashSet *terms, jboolean prohibited, NSString *fieldName) {
  OrgApacheLuceneSearchHighlightQueryTermExtractor_initialize();
  OrgApacheLuceneSearchHighlightQueryTermExtractor_getTermsWithOrgApacheLuceneSearchQuery_withJavaUtilHashSet_withBoolean_withNSString_([((OrgApacheLuceneSearchFilteredQuery *) nil_chk(query)) getQuery], terms, prohibited, fieldName);
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheLuceneSearchHighlightQueryTermExtractor)
