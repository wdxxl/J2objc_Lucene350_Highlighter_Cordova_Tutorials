//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: jar:file:wdxxl_lucene_350_highlighter.jar!org/apache/lucene/search/similar/MoreLikeThis.java
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "java/io/File.h"
#include "java/io/FileReader.h"
#include "java/io/InputStream.h"
#include "java/io/InputStreamReader.h"
#include "java/io/Reader.h"
#include "java/io/StringReader.h"
#include "java/lang/Deprecated.h"
#include "java/lang/Float.h"
#include "java/lang/Integer.h"
#include "java/lang/StringBuilder.h"
#include "java/lang/annotation/Annotation.h"
#include "java/net/URL.h"
#include "java/net/URLConnection.h"
#include "java/util/ArrayList.h"
#include "java/util/Collection.h"
#include "java/util/HashMap.h"
#include "java/util/Iterator.h"
#include "java/util/Map.h"
#include "java/util/Set.h"
#include "org/apache/lucene/analysis/Analyzer.h"
#include "org/apache/lucene/analysis/TokenStream.h"
#include "org/apache/lucene/analysis/standard/StandardAnalyzer.h"
#include "org/apache/lucene/analysis/tokenattributes/CharTermAttribute.h"
#include "org/apache/lucene/document/Document.h"
#include "org/apache/lucene/index/IndexReader.h"
#include "org/apache/lucene/index/Term.h"
#include "org/apache/lucene/index/TermFreqVector.h"
#include "org/apache/lucene/search/BooleanClause.h"
#include "org/apache/lucene/search/BooleanQuery.h"
#include "org/apache/lucene/search/DefaultSimilarity.h"
#include "org/apache/lucene/search/Query.h"
#include "org/apache/lucene/search/Similarity.h"
#include "org/apache/lucene/search/TermQuery.h"
#include "org/apache/lucene/search/similar/MoreLikeThis.h"
#include "org/apache/lucene/util/PriorityQueue.h"
#include "org/apache/lucene/util/Version.h"

#pragma clang diagnostic ignored "-Wincomplete-implementation"

@interface OrgApacheLuceneSearchSimilarMoreLikeThis () {
 @public
  id<JavaUtilSet> stopWords_;
  OrgApacheLuceneAnalysisAnalyzer *analyzer_;
  jint minTermFreq_;
  jint minDocFreq_;
  jint maxDocFreq_;
  jboolean boost_;
  IOSObjectArray *fieldNames_;
  jint maxNumTokensParsed_;
  jint minWordLen_;
  jint maxWordLen_;
  jint maxQueryTerms_;
  OrgApacheLuceneSearchSimilarity *similarity_;
  OrgApacheLuceneIndexIndexReader *ir_;
  jfloat boostFactor_;
}

- (OrgApacheLuceneSearchQuery *)createQueryWithOrgApacheLuceneUtilPriorityQueue:(OrgApacheLuceneUtilPriorityQueue *)q;

- (OrgApacheLuceneUtilPriorityQueue *)createQueueWithJavaUtilMap:(id<JavaUtilMap>)words;

- (void)addTermFrequenciesWithJavaUtilMap:(id<JavaUtilMap>)termFreqMap
   withOrgApacheLuceneIndexTermFreqVector:(id<OrgApacheLuceneIndexTermFreqVector>)vector;

- (void)addTermFrequenciesWithJavaIoReader:(JavaIoReader *)r
                           withJavaUtilMap:(id<JavaUtilMap>)termFreqMap
                              withNSString:(NSString *)fieldName;

- (jboolean)isNoiseWordWithNSString:(NSString *)term;

@end

J2OBJC_FIELD_SETTER(OrgApacheLuceneSearchSimilarMoreLikeThis, stopWords_, id<JavaUtilSet>)
J2OBJC_FIELD_SETTER(OrgApacheLuceneSearchSimilarMoreLikeThis, analyzer_, OrgApacheLuceneAnalysisAnalyzer *)
J2OBJC_FIELD_SETTER(OrgApacheLuceneSearchSimilarMoreLikeThis, fieldNames_, IOSObjectArray *)
J2OBJC_FIELD_SETTER(OrgApacheLuceneSearchSimilarMoreLikeThis, similarity_, OrgApacheLuceneSearchSimilarity *)
J2OBJC_FIELD_SETTER(OrgApacheLuceneSearchSimilarMoreLikeThis, ir_, OrgApacheLuceneIndexIndexReader *)

__attribute__((unused)) static OrgApacheLuceneSearchQuery *OrgApacheLuceneSearchSimilarMoreLikeThis_createQueryWithOrgApacheLuceneUtilPriorityQueue_(OrgApacheLuceneSearchSimilarMoreLikeThis *self, OrgApacheLuceneUtilPriorityQueue *q);

__attribute__((unused)) static OrgApacheLuceneUtilPriorityQueue *OrgApacheLuceneSearchSimilarMoreLikeThis_createQueueWithJavaUtilMap_(OrgApacheLuceneSearchSimilarMoreLikeThis *self, id<JavaUtilMap> words);

__attribute__((unused)) static void OrgApacheLuceneSearchSimilarMoreLikeThis_addTermFrequenciesWithJavaUtilMap_withOrgApacheLuceneIndexTermFreqVector_(OrgApacheLuceneSearchSimilarMoreLikeThis *self, id<JavaUtilMap> termFreqMap, id<OrgApacheLuceneIndexTermFreqVector> vector);

__attribute__((unused)) static void OrgApacheLuceneSearchSimilarMoreLikeThis_addTermFrequenciesWithJavaIoReader_withJavaUtilMap_withNSString_(OrgApacheLuceneSearchSimilarMoreLikeThis *self, JavaIoReader *r, id<JavaUtilMap> termFreqMap, NSString *fieldName);

__attribute__((unused)) static jboolean OrgApacheLuceneSearchSimilarMoreLikeThis_isNoiseWordWithNSString_(OrgApacheLuceneSearchSimilarMoreLikeThis *self, NSString *term);

__attribute__((unused)) static IOSObjectArray *OrgApacheLuceneSearchSimilarMoreLikeThis__Annotations$0();

__attribute__((unused)) static IOSObjectArray *OrgApacheLuceneSearchSimilarMoreLikeThis__Annotations$1();

__attribute__((unused)) static IOSObjectArray *OrgApacheLuceneSearchSimilarMoreLikeThis__Annotations$2();

__attribute__((unused)) static IOSObjectArray *OrgApacheLuceneSearchSimilarMoreLikeThis__Annotations$3();

__attribute__((unused)) static IOSObjectArray *OrgApacheLuceneSearchSimilarMoreLikeThis__Annotations$4();

__attribute__((unused)) static IOSObjectArray *OrgApacheLuceneSearchSimilarMoreLikeThis__Annotations$5();

__attribute__((unused)) static IOSObjectArray *OrgApacheLuceneSearchSimilarMoreLikeThis__Annotations$6();

@interface OrgApacheLuceneSearchSimilarMoreLikeThis_FreqQ : OrgApacheLuceneUtilPriorityQueue

- (instancetype)initWithInt:(jint)s;

- (jboolean)lessThanWithId:(IOSObjectArray *)aa
                    withId:(IOSObjectArray *)bb;

- (IOSObjectArray *)pop;

- (IOSObjectArray *)top;

- (IOSObjectArray *)insertWithOverflowWithId:(IOSObjectArray *)arg0;

- (IOSObjectArray *)addWithId:(IOSObjectArray *)arg0;

- (IOSObjectArray *)getSentinelObject;

- (IOSObjectArray *)updateTop;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgApacheLuceneSearchSimilarMoreLikeThis_FreqQ)

__attribute__((unused)) static void OrgApacheLuceneSearchSimilarMoreLikeThis_FreqQ_initWithInt_(OrgApacheLuceneSearchSimilarMoreLikeThis_FreqQ *self, jint s);

__attribute__((unused)) static OrgApacheLuceneSearchSimilarMoreLikeThis_FreqQ *new_OrgApacheLuceneSearchSimilarMoreLikeThis_FreqQ_initWithInt_(jint s) NS_RETURNS_RETAINED;

__attribute__((unused)) static OrgApacheLuceneSearchSimilarMoreLikeThis_FreqQ *create_OrgApacheLuceneSearchSimilarMoreLikeThis_FreqQ_initWithInt_(jint s);

J2OBJC_TYPE_LITERAL_HEADER(OrgApacheLuceneSearchSimilarMoreLikeThis_FreqQ)

@interface OrgApacheLuceneSearchSimilarMoreLikeThis_Int : NSObject {
 @public
  jint x_;
}

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgApacheLuceneSearchSimilarMoreLikeThis_Int)

__attribute__((unused)) static void OrgApacheLuceneSearchSimilarMoreLikeThis_Int_init(OrgApacheLuceneSearchSimilarMoreLikeThis_Int *self);

__attribute__((unused)) static OrgApacheLuceneSearchSimilarMoreLikeThis_Int *new_OrgApacheLuceneSearchSimilarMoreLikeThis_Int_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static OrgApacheLuceneSearchSimilarMoreLikeThis_Int *create_OrgApacheLuceneSearchSimilarMoreLikeThis_Int_init();

J2OBJC_TYPE_LITERAL_HEADER(OrgApacheLuceneSearchSimilarMoreLikeThis_Int)

J2OBJC_INITIALIZED_DEFN(OrgApacheLuceneSearchSimilarMoreLikeThis)

OrgApacheLuceneAnalysisAnalyzer *OrgApacheLuceneSearchSimilarMoreLikeThis_DEFAULT_ANALYZER;
IOSObjectArray *OrgApacheLuceneSearchSimilarMoreLikeThis_DEFAULT_FIELD_NAMES;
id<JavaUtilSet> OrgApacheLuceneSearchSimilarMoreLikeThis_DEFAULT_STOP_WORDS;

@implementation OrgApacheLuceneSearchSimilarMoreLikeThis

- (jfloat)getBoostFactor {
  return boostFactor_;
}

- (void)setBoostFactorWithFloat:(jfloat)boostFactor {
  self->boostFactor_ = boostFactor;
}

- (instancetype)initWithOrgApacheLuceneIndexIndexReader:(OrgApacheLuceneIndexIndexReader *)ir {
  OrgApacheLuceneSearchSimilarMoreLikeThis_initWithOrgApacheLuceneIndexIndexReader_(self, ir);
  return self;
}

- (instancetype)initWithOrgApacheLuceneIndexIndexReader:(OrgApacheLuceneIndexIndexReader *)ir
                    withOrgApacheLuceneSearchSimilarity:(OrgApacheLuceneSearchSimilarity *)sim {
  OrgApacheLuceneSearchSimilarMoreLikeThis_initWithOrgApacheLuceneIndexIndexReader_withOrgApacheLuceneSearchSimilarity_(self, ir, sim);
  return self;
}

- (OrgApacheLuceneSearchSimilarity *)getSimilarity {
  return similarity_;
}

- (void)setSimilarityWithOrgApacheLuceneSearchSimilarity:(OrgApacheLuceneSearchSimilarity *)similarity {
  self->similarity_ = similarity;
}

- (OrgApacheLuceneAnalysisAnalyzer *)getAnalyzer {
  return analyzer_;
}

- (void)setAnalyzerWithOrgApacheLuceneAnalysisAnalyzer:(OrgApacheLuceneAnalysisAnalyzer *)analyzer {
  self->analyzer_ = analyzer;
}

- (jint)getMinTermFreq {
  return minTermFreq_;
}

- (void)setMinTermFreqWithInt:(jint)minTermFreq {
  self->minTermFreq_ = minTermFreq;
}

- (jint)getMinDocFreq {
  return minDocFreq_;
}

- (void)setMinDocFreqWithInt:(jint)minDocFreq {
  self->minDocFreq_ = minDocFreq;
}

- (jint)getMaxDocFreq {
  return maxDocFreq_;
}

- (void)setMaxDocFreqWithInt:(jint)maxFreq {
  self->maxDocFreq_ = maxFreq;
}

- (void)setMaxDocFreqPctWithInt:(jint)maxPercentage {
  self->maxDocFreq_ = maxPercentage * [((OrgApacheLuceneIndexIndexReader *) nil_chk(ir_)) numDocs] / 100;
}

- (jboolean)isBoost {
  return boost_;
}

- (void)setBoostWithBoolean:(jboolean)boost {
  self->boost_ = boost;
}

- (IOSObjectArray *)getFieldNames {
  return fieldNames_;
}

- (void)setFieldNamesWithNSStringArray:(IOSObjectArray *)fieldNames {
  self->fieldNames_ = fieldNames;
}

- (jint)getMinWordLen {
  return minWordLen_;
}

- (void)setMinWordLenWithInt:(jint)minWordLen {
  self->minWordLen_ = minWordLen;
}

- (jint)getMaxWordLen {
  return maxWordLen_;
}

- (void)setMaxWordLenWithInt:(jint)maxWordLen {
  self->maxWordLen_ = maxWordLen;
}

- (void)setStopWordsWithJavaUtilSet:(id<JavaUtilSet>)stopWords {
  self->stopWords_ = stopWords;
}

- (id<JavaUtilSet>)getStopWords {
  return stopWords_;
}

- (jint)getMaxQueryTerms {
  return maxQueryTerms_;
}

- (void)setMaxQueryTermsWithInt:(jint)maxQueryTerms {
  self->maxQueryTerms_ = maxQueryTerms;
}

- (jint)getMaxNumTokensParsed {
  return maxNumTokensParsed_;
}

- (void)setMaxNumTokensParsedWithInt:(jint)i {
  maxNumTokensParsed_ = i;
}

- (OrgApacheLuceneSearchQuery *)likeWithInt:(jint)docNum {
  if (fieldNames_ == nil) {
    id<JavaUtilCollection> fields = [((OrgApacheLuceneIndexIndexReader *) nil_chk(ir_)) getFieldNamesWithOrgApacheLuceneIndexIndexReader_FieldOption:JreLoadEnum(OrgApacheLuceneIndexIndexReader_FieldOption, INDEXED)];
    fieldNames_ = [((id<JavaUtilCollection>) nil_chk(fields)) toArrayWithNSObjectArray:[IOSObjectArray newArrayWithLength:[fields size] type:NSString_class_()]];
  }
  return OrgApacheLuceneSearchSimilarMoreLikeThis_createQueryWithOrgApacheLuceneUtilPriorityQueue_(self, [self retrieveTermsWithInt:docNum]);
}

- (OrgApacheLuceneSearchQuery *)likeWithJavaIoFile:(JavaIoFile *)f {
  if (fieldNames_ == nil) {
    id<JavaUtilCollection> fields = [((OrgApacheLuceneIndexIndexReader *) nil_chk(ir_)) getFieldNamesWithOrgApacheLuceneIndexIndexReader_FieldOption:JreLoadEnum(OrgApacheLuceneIndexIndexReader_FieldOption, INDEXED)];
    fieldNames_ = [((id<JavaUtilCollection>) nil_chk(fields)) toArrayWithNSObjectArray:[IOSObjectArray newArrayWithLength:[fields size] type:NSString_class_()]];
  }
  return [self likeWithJavaIoReader:new_JavaIoFileReader_initWithJavaIoFile_(f)];
}

- (OrgApacheLuceneSearchQuery *)likeWithJavaNetURL:(JavaNetURL *)u {
  return [self likeWithJavaIoReader:new_JavaIoInputStreamReader_initWithJavaIoInputStream_([((JavaNetURLConnection *) nil_chk([((JavaNetURL *) nil_chk(u)) openConnection])) getInputStream])];
}

- (OrgApacheLuceneSearchQuery *)likeWithJavaIoInputStream:(JavaIoInputStream *)is {
  return [self likeWithJavaIoReader:new_JavaIoInputStreamReader_initWithJavaIoInputStream_(is)];
}

- (OrgApacheLuceneSearchQuery *)likeWithJavaIoReader:(JavaIoReader *)r {
  return OrgApacheLuceneSearchSimilarMoreLikeThis_createQueryWithOrgApacheLuceneUtilPriorityQueue_(self, [self retrieveTermsWithJavaIoReader:r withNSString:IOSObjectArray_Get(nil_chk(fieldNames_), 0)]);
}

- (OrgApacheLuceneSearchQuery *)likeWithJavaIoReader:(JavaIoReader *)r
                                        withNSString:(NSString *)fieldName {
  return OrgApacheLuceneSearchSimilarMoreLikeThis_createQueryWithOrgApacheLuceneUtilPriorityQueue_(self, [self retrieveTermsWithJavaIoReader:r withNSString:fieldName]);
}

- (OrgApacheLuceneSearchQuery *)createQueryWithOrgApacheLuceneUtilPriorityQueue:(OrgApacheLuceneUtilPriorityQueue *)q {
  return OrgApacheLuceneSearchSimilarMoreLikeThis_createQueryWithOrgApacheLuceneUtilPriorityQueue_(self, q);
}

- (OrgApacheLuceneUtilPriorityQueue *)createQueueWithJavaUtilMap:(id<JavaUtilMap>)words {
  return OrgApacheLuceneSearchSimilarMoreLikeThis_createQueueWithJavaUtilMap_(self, words);
}

- (NSString *)describeParams {
  JavaLangStringBuilder *sb = new_JavaLangStringBuilder_init();
  (void) [sb appendWithNSString:JreStrcat("$IC", @"\tmaxQueryTerms  : ", maxQueryTerms_, 0x000a)];
  (void) [sb appendWithNSString:JreStrcat("$IC", @"\tminWordLen     : ", minWordLen_, 0x000a)];
  (void) [sb appendWithNSString:JreStrcat("$IC", @"\tmaxWordLen     : ", maxWordLen_, 0x000a)];
  (void) [sb appendWithNSString:@"\tfieldNames     : "];
  NSString *delim = @"";
  for (jint i = 0; i < ((IOSObjectArray *) nil_chk(fieldNames_))->size_; i++) {
    NSString *fieldName = IOSObjectArray_Get(fieldNames_, i);
    (void) [((JavaLangStringBuilder *) nil_chk([sb appendWithNSString:delim])) appendWithNSString:fieldName];
    delim = @", ";
  }
  (void) [sb appendWithNSString:@"\n"];
  (void) [sb appendWithNSString:JreStrcat("$ZC", @"\tboost          : ", boost_, 0x000a)];
  (void) [sb appendWithNSString:JreStrcat("$IC", @"\tminTermFreq    : ", minTermFreq_, 0x000a)];
  (void) [sb appendWithNSString:JreStrcat("$IC", @"\tminDocFreq     : ", minDocFreq_, 0x000a)];
  return [sb description];
}

- (OrgApacheLuceneUtilPriorityQueue *)retrieveTermsWithInt:(jint)docNum {
  id<JavaUtilMap> termFreqMap = new_JavaUtilHashMap_init();
  for (jint i = 0; i < ((IOSObjectArray *) nil_chk(fieldNames_))->size_; i++) {
    NSString *fieldName = IOSObjectArray_Get(fieldNames_, i);
    id<OrgApacheLuceneIndexTermFreqVector> vector = [((OrgApacheLuceneIndexIndexReader *) nil_chk(ir_)) getTermFreqVectorWithInt:docNum withNSString:fieldName];
    if (vector == nil) {
      OrgApacheLuceneDocumentDocument *d = [ir_ documentWithInt:docNum];
      IOSObjectArray *text = [((OrgApacheLuceneDocumentDocument *) nil_chk(d)) getValuesWithNSString:fieldName];
      if (text != nil) {
        for (jint j = 0; j < text->size_; j++) {
          OrgApacheLuceneSearchSimilarMoreLikeThis_addTermFrequenciesWithJavaIoReader_withJavaUtilMap_withNSString_(self, new_JavaIoStringReader_initWithNSString_(IOSObjectArray_Get(text, j)), termFreqMap, fieldName);
        }
      }
    }
    else {
      OrgApacheLuceneSearchSimilarMoreLikeThis_addTermFrequenciesWithJavaUtilMap_withOrgApacheLuceneIndexTermFreqVector_(self, termFreqMap, vector);
    }
  }
  return OrgApacheLuceneSearchSimilarMoreLikeThis_createQueueWithJavaUtilMap_(self, termFreqMap);
}

- (void)addTermFrequenciesWithJavaUtilMap:(id<JavaUtilMap>)termFreqMap
   withOrgApacheLuceneIndexTermFreqVector:(id<OrgApacheLuceneIndexTermFreqVector>)vector {
  OrgApacheLuceneSearchSimilarMoreLikeThis_addTermFrequenciesWithJavaUtilMap_withOrgApacheLuceneIndexTermFreqVector_(self, termFreqMap, vector);
}

- (void)addTermFrequenciesWithJavaIoReader:(JavaIoReader *)r
                           withJavaUtilMap:(id<JavaUtilMap>)termFreqMap
                              withNSString:(NSString *)fieldName {
  OrgApacheLuceneSearchSimilarMoreLikeThis_addTermFrequenciesWithJavaIoReader_withJavaUtilMap_withNSString_(self, r, termFreqMap, fieldName);
}

- (jboolean)isNoiseWordWithNSString:(NSString *)term {
  return OrgApacheLuceneSearchSimilarMoreLikeThis_isNoiseWordWithNSString_(self, term);
}

- (OrgApacheLuceneUtilPriorityQueue *)retrieveTermsWithJavaIoReader:(JavaIoReader *)r
                                                       withNSString:(NSString *)fieldName {
  id<JavaUtilMap> words = new_JavaUtilHashMap_init();
  OrgApacheLuceneSearchSimilarMoreLikeThis_addTermFrequenciesWithJavaIoReader_withJavaUtilMap_withNSString_(self, r, words, fieldName);
  return OrgApacheLuceneSearchSimilarMoreLikeThis_createQueueWithJavaUtilMap_(self, words);
}

- (OrgApacheLuceneUtilPriorityQueue *)retrieveTermsWithJavaIoReader:(JavaIoReader *)r {
  return [self retrieveTermsWithJavaIoReader:r withNSString:IOSObjectArray_Get(nil_chk(fieldNames_), 0)];
}

- (IOSObjectArray *)retrieveInterestingTermsWithInt:(jint)docNum {
  JavaUtilArrayList *al = new_JavaUtilArrayList_initWithInt_(maxQueryTerms_);
  OrgApacheLuceneUtilPriorityQueue *pq = [self retrieveTermsWithInt:docNum];
  id cur;
  jint lim = maxQueryTerms_;
  while (((cur = [((OrgApacheLuceneUtilPriorityQueue *) nil_chk(pq)) pop]) != nil) && lim-- > 0) {
    IOSObjectArray *ar = (IOSObjectArray *) cast_check(cur, IOSClass_arrayType(NSObject_class_(), 1));
    [al addWithId:IOSObjectArray_Get(nil_chk(ar), 0)];
  }
  IOSObjectArray *res = [IOSObjectArray newArrayWithLength:[al size] type:NSString_class_()];
  return [al toArrayWithNSObjectArray:res];
}

- (IOSObjectArray *)retrieveInterestingTermsWithJavaIoReader:(JavaIoReader *)r
                                                withNSString:(NSString *)fieldName {
  JavaUtilArrayList *al = new_JavaUtilArrayList_initWithInt_(maxQueryTerms_);
  OrgApacheLuceneUtilPriorityQueue *pq = [self retrieveTermsWithJavaIoReader:r withNSString:fieldName];
  id cur;
  jint lim = maxQueryTerms_;
  while (((cur = [((OrgApacheLuceneUtilPriorityQueue *) nil_chk(pq)) pop]) != nil) && lim-- > 0) {
    IOSObjectArray *ar = (IOSObjectArray *) cast_check(cur, IOSClass_arrayType(NSObject_class_(), 1));
    [al addWithId:IOSObjectArray_Get(nil_chk(ar), 0)];
  }
  IOSObjectArray *res = [IOSObjectArray newArrayWithLength:[al size] type:NSString_class_()];
  return [al toArrayWithNSObjectArray:res];
}

- (IOSObjectArray *)retrieveInterestingTermsWithJavaIoReader:(JavaIoReader *)r {
  return [self retrieveInterestingTermsWithJavaIoReader:r withNSString:IOSObjectArray_Get(nil_chk(fieldNames_), 0)];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "F", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 0, 1, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 2, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 3, -1, -1, -1, -1 },
    { NULL, "LOrgApacheLuceneSearchSimilarity;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 4, 5, -1, -1, -1, -1 },
    { NULL, "LOrgApacheLuceneAnalysisAnalyzer;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 6, 7, -1, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 8, 9, -1, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 10, 9, -1, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 11, 9, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 12, 9, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 13, 14, -1, -1, -1, -1 },
    { NULL, "[LNSString;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 15, 16, -1, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 17, 9, -1, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 18, 9, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 19, 20, -1, 21, -1, -1 },
    { NULL, "LJavaUtilSet;", 0x1, -1, -1, -1, 22, -1, -1 },
    { NULL, "I", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 23, 9, -1, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 24, 9, -1, -1, -1, -1 },
    { NULL, "LOrgApacheLuceneSearchQuery;", 0x1, 25, 9, 26, -1, -1, -1 },
    { NULL, "LOrgApacheLuceneSearchQuery;", 0x1, 25, 27, 26, -1, 28, -1 },
    { NULL, "LOrgApacheLuceneSearchQuery;", 0x1, 25, 29, 26, -1, 30, -1 },
    { NULL, "LOrgApacheLuceneSearchQuery;", 0x1, 25, 31, 26, -1, 32, -1 },
    { NULL, "LOrgApacheLuceneSearchQuery;", 0x1, 25, 33, 26, -1, 34, -1 },
    { NULL, "LOrgApacheLuceneSearchQuery;", 0x1, 25, 35, 26, -1, -1, -1 },
    { NULL, "LOrgApacheLuceneSearchQuery;", 0x2, 36, 37, -1, 38, -1, -1 },
    { NULL, "LOrgApacheLuceneUtilPriorityQueue;", 0x2, 39, 40, 26, 41, -1, -1 },
    { NULL, "LNSString;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgApacheLuceneUtilPriorityQueue;", 0x1, 42, 9, 26, 43, -1, -1 },
    { NULL, "V", 0x2, 44, 45, -1, 46, -1, -1 },
    { NULL, "V", 0x2, 44, 47, 26, 48, -1, -1 },
    { NULL, "Z", 0x2, 49, 50, -1, -1, -1, -1 },
    { NULL, "LOrgApacheLuceneUtilPriorityQueue;", 0x1, 42, 35, 26, 51, -1, -1 },
    { NULL, "LOrgApacheLuceneUtilPriorityQueue;", 0x1, 42, 33, 26, 52, 53, -1 },
    { NULL, "[LNSString;", 0x1, 54, 9, 26, -1, -1, -1 },
    { NULL, "[LNSString;", 0x1, 54, 35, 26, -1, -1, -1 },
    { NULL, "[LNSString;", 0x1, 54, 33, 26, -1, 55, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(getBoostFactor);
  methods[1].selector = @selector(setBoostFactorWithFloat:);
  methods[2].selector = @selector(initWithOrgApacheLuceneIndexIndexReader:);
  methods[3].selector = @selector(initWithOrgApacheLuceneIndexIndexReader:withOrgApacheLuceneSearchSimilarity:);
  methods[4].selector = @selector(getSimilarity);
  methods[5].selector = @selector(setSimilarityWithOrgApacheLuceneSearchSimilarity:);
  methods[6].selector = @selector(getAnalyzer);
  methods[7].selector = @selector(setAnalyzerWithOrgApacheLuceneAnalysisAnalyzer:);
  methods[8].selector = @selector(getMinTermFreq);
  methods[9].selector = @selector(setMinTermFreqWithInt:);
  methods[10].selector = @selector(getMinDocFreq);
  methods[11].selector = @selector(setMinDocFreqWithInt:);
  methods[12].selector = @selector(getMaxDocFreq);
  methods[13].selector = @selector(setMaxDocFreqWithInt:);
  methods[14].selector = @selector(setMaxDocFreqPctWithInt:);
  methods[15].selector = @selector(isBoost);
  methods[16].selector = @selector(setBoostWithBoolean:);
  methods[17].selector = @selector(getFieldNames);
  methods[18].selector = @selector(setFieldNamesWithNSStringArray:);
  methods[19].selector = @selector(getMinWordLen);
  methods[20].selector = @selector(setMinWordLenWithInt:);
  methods[21].selector = @selector(getMaxWordLen);
  methods[22].selector = @selector(setMaxWordLenWithInt:);
  methods[23].selector = @selector(setStopWordsWithJavaUtilSet:);
  methods[24].selector = @selector(getStopWords);
  methods[25].selector = @selector(getMaxQueryTerms);
  methods[26].selector = @selector(setMaxQueryTermsWithInt:);
  methods[27].selector = @selector(getMaxNumTokensParsed);
  methods[28].selector = @selector(setMaxNumTokensParsedWithInt:);
  methods[29].selector = @selector(likeWithInt:);
  methods[30].selector = @selector(likeWithJavaIoFile:);
  methods[31].selector = @selector(likeWithJavaNetURL:);
  methods[32].selector = @selector(likeWithJavaIoInputStream:);
  methods[33].selector = @selector(likeWithJavaIoReader:);
  methods[34].selector = @selector(likeWithJavaIoReader:withNSString:);
  methods[35].selector = @selector(createQueryWithOrgApacheLuceneUtilPriorityQueue:);
  methods[36].selector = @selector(createQueueWithJavaUtilMap:);
  methods[37].selector = @selector(describeParams);
  methods[38].selector = @selector(retrieveTermsWithInt:);
  methods[39].selector = @selector(addTermFrequenciesWithJavaUtilMap:withOrgApacheLuceneIndexTermFreqVector:);
  methods[40].selector = @selector(addTermFrequenciesWithJavaIoReader:withJavaUtilMap:withNSString:);
  methods[41].selector = @selector(isNoiseWordWithNSString:);
  methods[42].selector = @selector(retrieveTermsWithJavaIoReader:withNSString:);
  methods[43].selector = @selector(retrieveTermsWithJavaIoReader:);
  methods[44].selector = @selector(retrieveInterestingTermsWithInt:);
  methods[45].selector = @selector(retrieveInterestingTermsWithJavaIoReader:withNSString:);
  methods[46].selector = @selector(retrieveInterestingTermsWithJavaIoReader:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "DEFAULT_MAX_NUM_TOKENS_PARSED", "I", .constantValue.asInt = OrgApacheLuceneSearchSimilarMoreLikeThis_DEFAULT_MAX_NUM_TOKENS_PARSED, 0x19, -1, -1, -1, -1 },
    { "DEFAULT_ANALYZER", "LOrgApacheLuceneAnalysisAnalyzer;", .constantValue.asLong = 0, 0x19, -1, 56, -1, 57 },
    { "DEFAULT_MIN_TERM_FREQ", "I", .constantValue.asInt = OrgApacheLuceneSearchSimilarMoreLikeThis_DEFAULT_MIN_TERM_FREQ, 0x19, -1, -1, -1, -1 },
    { "DEFAULT_MIN_DOC_FREQ", "I", .constantValue.asInt = OrgApacheLuceneSearchSimilarMoreLikeThis_DEFAULT_MIN_DOC_FREQ, 0x19, -1, -1, -1, -1 },
    { "DEFAULT_MAX_DOC_FREQ", "I", .constantValue.asInt = OrgApacheLuceneSearchSimilarMoreLikeThis_DEFAULT_MAX_DOC_FREQ, 0x19, -1, -1, -1, -1 },
    { "DEFAULT_BOOST", "Z", .constantValue.asBOOL = OrgApacheLuceneSearchSimilarMoreLikeThis_DEFAULT_BOOST, 0x19, -1, -1, -1, -1 },
    { "DEFAULT_FIELD_NAMES", "[LNSString;", .constantValue.asLong = 0, 0x19, -1, 58, -1, -1 },
    { "DEFAULT_MIN_WORD_LENGTH", "I", .constantValue.asInt = OrgApacheLuceneSearchSimilarMoreLikeThis_DEFAULT_MIN_WORD_LENGTH, 0x19, -1, -1, -1, -1 },
    { "DEFAULT_MAX_WORD_LENGTH", "I", .constantValue.asInt = OrgApacheLuceneSearchSimilarMoreLikeThis_DEFAULT_MAX_WORD_LENGTH, 0x19, -1, -1, -1, -1 },
    { "DEFAULT_STOP_WORDS", "LJavaUtilSet;", .constantValue.asLong = 0, 0x19, -1, 59, 60, -1 },
    { "stopWords_", "LJavaUtilSet;", .constantValue.asLong = 0, 0x2, -1, -1, 60, -1 },
    { "DEFAULT_MAX_QUERY_TERMS", "I", .constantValue.asInt = OrgApacheLuceneSearchSimilarMoreLikeThis_DEFAULT_MAX_QUERY_TERMS, 0x19, -1, -1, -1, -1 },
    { "analyzer_", "LOrgApacheLuceneAnalysisAnalyzer;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "minTermFreq_", "I", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "minDocFreq_", "I", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "maxDocFreq_", "I", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "boost_", "Z", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "fieldNames_", "[LNSString;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "maxNumTokensParsed_", "I", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "minWordLen_", "I", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "maxWordLen_", "I", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "maxQueryTerms_", "I", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "similarity_", "LOrgApacheLuceneSearchSimilarity;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "ir_", "LOrgApacheLuceneIndexIndexReader;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "boostFactor_", "F", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "setBoostFactor", "F", "LOrgApacheLuceneIndexIndexReader;", "LOrgApacheLuceneIndexIndexReader;LOrgApacheLuceneSearchSimilarity;", "setSimilarity", "LOrgApacheLuceneSearchSimilarity;", "setAnalyzer", "LOrgApacheLuceneAnalysisAnalyzer;", "setMinTermFreq", "I", "setMinDocFreq", "setMaxDocFreq", "setMaxDocFreqPct", "setBoost", "Z", "setFieldNames", "[LNSString;", "setMinWordLen", "setMaxWordLen", "setStopWords", "LJavaUtilSet;", "(Ljava/util/Set<*>;)V", "()Ljava/util/Set<*>;", "setMaxQueryTerms", "setMaxNumTokensParsed", "like", "LJavaIoIOException;", "LJavaIoFile;", (void *)&OrgApacheLuceneSearchSimilarMoreLikeThis__Annotations$0, "LJavaNetURL;", (void *)&OrgApacheLuceneSearchSimilarMoreLikeThis__Annotations$1, "LJavaIoInputStream;", (void *)&OrgApacheLuceneSearchSimilarMoreLikeThis__Annotations$2, "LJavaIoReader;", (void *)&OrgApacheLuceneSearchSimilarMoreLikeThis__Annotations$3, "LJavaIoReader;LNSString;", "createQuery", "LOrgApacheLuceneUtilPriorityQueue;", "(Lorg/apache/lucene/util/PriorityQueue<[Ljava/lang/Object;>;)Lorg/apache/lucene/search/Query;", "createQueue", "LJavaUtilMap;", "(Ljava/util/Map<Ljava/lang/String;Lorg/apache/lucene/search/similar/MoreLikeThis$Int;>;)Lorg/apache/lucene/util/PriorityQueue<[Ljava/lang/Object;>;", "retrieveTerms", "(I)Lorg/apache/lucene/util/PriorityQueue<[Ljava/lang/Object;>;", "addTermFrequencies", "LJavaUtilMap;LOrgApacheLuceneIndexTermFreqVector;", "(Ljava/util/Map<Ljava/lang/String;Lorg/apache/lucene/search/similar/MoreLikeThis$Int;>;Lorg/apache/lucene/index/TermFreqVector;)V", "LJavaIoReader;LJavaUtilMap;LNSString;", "(Ljava/io/Reader;Ljava/util/Map<Ljava/lang/String;Lorg/apache/lucene/search/similar/MoreLikeThis$Int;>;Ljava/lang/String;)V", "isNoiseWord", "LNSString;", "(Ljava/io/Reader;Ljava/lang/String;)Lorg/apache/lucene/util/PriorityQueue<[Ljava/lang/Object;>;", "(Ljava/io/Reader;)Lorg/apache/lucene/util/PriorityQueue<[Ljava/lang/Object;>;", (void *)&OrgApacheLuceneSearchSimilarMoreLikeThis__Annotations$4, "retrieveInterestingTerms", (void *)&OrgApacheLuceneSearchSimilarMoreLikeThis__Annotations$5, &OrgApacheLuceneSearchSimilarMoreLikeThis_DEFAULT_ANALYZER, (void *)&OrgApacheLuceneSearchSimilarMoreLikeThis__Annotations$6, &OrgApacheLuceneSearchSimilarMoreLikeThis_DEFAULT_FIELD_NAMES, &OrgApacheLuceneSearchSimilarMoreLikeThis_DEFAULT_STOP_WORDS, "Ljava/util/Set<*>;", "LOrgApacheLuceneSearchSimilarMoreLikeThis_FreqQ;LOrgApacheLuceneSearchSimilarMoreLikeThis_Int;" };
  static const J2ObjcClassInfo _OrgApacheLuceneSearchSimilarMoreLikeThis = { "MoreLikeThis", "org.apache.lucene.search.similar", ptrTable, methods, fields, 7, 0x11, 47, 25, -1, 61, -1, -1, -1 };
  return &_OrgApacheLuceneSearchSimilarMoreLikeThis;
}

+ (void)initialize {
  if (self == [OrgApacheLuceneSearchSimilarMoreLikeThis class]) {
    OrgApacheLuceneSearchSimilarMoreLikeThis_DEFAULT_ANALYZER = new_OrgApacheLuceneAnalysisStandardStandardAnalyzer_initWithOrgApacheLuceneUtilVersion_(JreLoadEnum(OrgApacheLuceneUtilVersion, LUCENE_CURRENT));
    OrgApacheLuceneSearchSimilarMoreLikeThis_DEFAULT_FIELD_NAMES = [IOSObjectArray newArrayWithObjects:(id[]){ @"contents" } count:1 type:NSString_class_()];
    OrgApacheLuceneSearchSimilarMoreLikeThis_DEFAULT_STOP_WORDS = nil;
    J2OBJC_SET_INITIALIZED(OrgApacheLuceneSearchSimilarMoreLikeThis)
  }
}

@end

void OrgApacheLuceneSearchSimilarMoreLikeThis_initWithOrgApacheLuceneIndexIndexReader_(OrgApacheLuceneSearchSimilarMoreLikeThis *self, OrgApacheLuceneIndexIndexReader *ir) {
  OrgApacheLuceneSearchSimilarMoreLikeThis_initWithOrgApacheLuceneIndexIndexReader_withOrgApacheLuceneSearchSimilarity_(self, ir, new_OrgApacheLuceneSearchDefaultSimilarity_init());
}

OrgApacheLuceneSearchSimilarMoreLikeThis *new_OrgApacheLuceneSearchSimilarMoreLikeThis_initWithOrgApacheLuceneIndexIndexReader_(OrgApacheLuceneIndexIndexReader *ir) {
  J2OBJC_NEW_IMPL(OrgApacheLuceneSearchSimilarMoreLikeThis, initWithOrgApacheLuceneIndexIndexReader_, ir)
}

OrgApacheLuceneSearchSimilarMoreLikeThis *create_OrgApacheLuceneSearchSimilarMoreLikeThis_initWithOrgApacheLuceneIndexIndexReader_(OrgApacheLuceneIndexIndexReader *ir) {
  J2OBJC_CREATE_IMPL(OrgApacheLuceneSearchSimilarMoreLikeThis, initWithOrgApacheLuceneIndexIndexReader_, ir)
}

void OrgApacheLuceneSearchSimilarMoreLikeThis_initWithOrgApacheLuceneIndexIndexReader_withOrgApacheLuceneSearchSimilarity_(OrgApacheLuceneSearchSimilarMoreLikeThis *self, OrgApacheLuceneIndexIndexReader *ir, OrgApacheLuceneSearchSimilarity *sim) {
  NSObject_init(self);
  self->stopWords_ = OrgApacheLuceneSearchSimilarMoreLikeThis_DEFAULT_STOP_WORDS;
  self->analyzer_ = OrgApacheLuceneSearchSimilarMoreLikeThis_DEFAULT_ANALYZER;
  self->minTermFreq_ = OrgApacheLuceneSearchSimilarMoreLikeThis_DEFAULT_MIN_TERM_FREQ;
  self->minDocFreq_ = OrgApacheLuceneSearchSimilarMoreLikeThis_DEFAULT_MIN_DOC_FREQ;
  self->maxDocFreq_ = OrgApacheLuceneSearchSimilarMoreLikeThis_DEFAULT_MAX_DOC_FREQ;
  self->boost_ = OrgApacheLuceneSearchSimilarMoreLikeThis_DEFAULT_BOOST;
  self->fieldNames_ = OrgApacheLuceneSearchSimilarMoreLikeThis_DEFAULT_FIELD_NAMES;
  self->maxNumTokensParsed_ = OrgApacheLuceneSearchSimilarMoreLikeThis_DEFAULT_MAX_NUM_TOKENS_PARSED;
  self->minWordLen_ = OrgApacheLuceneSearchSimilarMoreLikeThis_DEFAULT_MIN_WORD_LENGTH;
  self->maxWordLen_ = OrgApacheLuceneSearchSimilarMoreLikeThis_DEFAULT_MAX_WORD_LENGTH;
  self->maxQueryTerms_ = OrgApacheLuceneSearchSimilarMoreLikeThis_DEFAULT_MAX_QUERY_TERMS;
  self->boostFactor_ = 1;
  self->ir_ = ir;
  self->similarity_ = sim;
}

OrgApacheLuceneSearchSimilarMoreLikeThis *new_OrgApacheLuceneSearchSimilarMoreLikeThis_initWithOrgApacheLuceneIndexIndexReader_withOrgApacheLuceneSearchSimilarity_(OrgApacheLuceneIndexIndexReader *ir, OrgApacheLuceneSearchSimilarity *sim) {
  J2OBJC_NEW_IMPL(OrgApacheLuceneSearchSimilarMoreLikeThis, initWithOrgApacheLuceneIndexIndexReader_withOrgApacheLuceneSearchSimilarity_, ir, sim)
}

OrgApacheLuceneSearchSimilarMoreLikeThis *create_OrgApacheLuceneSearchSimilarMoreLikeThis_initWithOrgApacheLuceneIndexIndexReader_withOrgApacheLuceneSearchSimilarity_(OrgApacheLuceneIndexIndexReader *ir, OrgApacheLuceneSearchSimilarity *sim) {
  J2OBJC_CREATE_IMPL(OrgApacheLuceneSearchSimilarMoreLikeThis, initWithOrgApacheLuceneIndexIndexReader_withOrgApacheLuceneSearchSimilarity_, ir, sim)
}

OrgApacheLuceneSearchQuery *OrgApacheLuceneSearchSimilarMoreLikeThis_createQueryWithOrgApacheLuceneUtilPriorityQueue_(OrgApacheLuceneSearchSimilarMoreLikeThis *self, OrgApacheLuceneUtilPriorityQueue *q) {
  OrgApacheLuceneSearchBooleanQuery *query = new_OrgApacheLuceneSearchBooleanQuery_init();
  id cur;
  jint qterms = 0;
  jfloat bestScore = 0;
  while (((cur = [((OrgApacheLuceneUtilPriorityQueue *) nil_chk(q)) pop]) != nil)) {
    IOSObjectArray *ar = (IOSObjectArray *) cast_check(cur, IOSClass_arrayType(NSObject_class_(), 1));
    OrgApacheLuceneSearchTermQuery *tq = new_OrgApacheLuceneSearchTermQuery_initWithOrgApacheLuceneIndexTerm_(new_OrgApacheLuceneIndexTerm_initWithNSString_withNSString_((NSString *) cast_chk(IOSObjectArray_Get(nil_chk(ar), 1), [NSString class]), (NSString *) cast_chk(IOSObjectArray_Get(ar, 0), [NSString class])));
    if (self->boost_) {
      if (qterms == 0) {
        bestScore = [((JavaLangFloat *) nil_chk(((JavaLangFloat *) cast_chk(IOSObjectArray_Get(ar, 2), [JavaLangFloat class])))) floatValue];
      }
      jfloat myScore = [((JavaLangFloat *) nil_chk(((JavaLangFloat *) cast_chk(IOSObjectArray_Get(ar, 2), [JavaLangFloat class])))) floatValue];
      [tq setBoostWithFloat:self->boostFactor_ * myScore / bestScore];
    }
    @try {
      [query addWithOrgApacheLuceneSearchQuery:tq withOrgApacheLuceneSearchBooleanClause_Occur:JreLoadEnum(OrgApacheLuceneSearchBooleanClause_Occur, SHOULD)];
    }
    @catch (OrgApacheLuceneSearchBooleanQuery_TooManyClauses *ignore) {
      break;
    }
    qterms++;
    if (self->maxQueryTerms_ > 0 && qterms >= self->maxQueryTerms_) {
      break;
    }
  }
  return query;
}

OrgApacheLuceneUtilPriorityQueue *OrgApacheLuceneSearchSimilarMoreLikeThis_createQueueWithJavaUtilMap_(OrgApacheLuceneSearchSimilarMoreLikeThis *self, id<JavaUtilMap> words) {
  jint numDocs = [((OrgApacheLuceneIndexIndexReader *) nil_chk(self->ir_)) numDocs];
  OrgApacheLuceneSearchSimilarMoreLikeThis_FreqQ *res = new_OrgApacheLuceneSearchSimilarMoreLikeThis_FreqQ_initWithInt_([((id<JavaUtilMap>) nil_chk(words)) size]);
  id<JavaUtilIterator> it = [((id<JavaUtilSet>) nil_chk([words keySet])) iterator];
  while ([((id<JavaUtilIterator>) nil_chk(it)) hasNext]) {
    NSString *word = [it next];
    jint tf = ((OrgApacheLuceneSearchSimilarMoreLikeThis_Int *) nil_chk([words getWithId:word]))->x_;
    if (self->minTermFreq_ > 0 && tf < self->minTermFreq_) {
      continue;
    }
    NSString *topField = IOSObjectArray_Get(nil_chk(self->fieldNames_), 0);
    jint docFreq = 0;
    for (jint i = 0; i < ((IOSObjectArray *) nil_chk(self->fieldNames_))->size_; i++) {
      jint freq = [self->ir_ docFreqWithOrgApacheLuceneIndexTerm:new_OrgApacheLuceneIndexTerm_initWithNSString_withNSString_(IOSObjectArray_Get(self->fieldNames_, i), word)];
      topField = (freq > docFreq) ? IOSObjectArray_Get(nil_chk(self->fieldNames_), i) : topField;
      docFreq = (freq > docFreq) ? freq : docFreq;
    }
    if (self->minDocFreq_ > 0 && docFreq < self->minDocFreq_) {
      continue;
    }
    if (docFreq > self->maxDocFreq_) {
      continue;
    }
    if (docFreq == 0) {
      continue;
    }
    jfloat idf = [((OrgApacheLuceneSearchSimilarity *) nil_chk(self->similarity_)) idfWithInt:docFreq withInt:numDocs];
    jfloat score = tf * idf;
    (void) [res insertWithOverflowWithId:[IOSObjectArray newArrayWithObjects:(id[]){ word, topField, JavaLangFloat_valueOfWithFloat_(score), JavaLangFloat_valueOfWithFloat_(idf), JavaLangInteger_valueOfWithInt_(docFreq), JavaLangInteger_valueOfWithInt_(tf) } count:6 type:NSObject_class_()]];
  }
  return res;
}

void OrgApacheLuceneSearchSimilarMoreLikeThis_addTermFrequenciesWithJavaUtilMap_withOrgApacheLuceneIndexTermFreqVector_(OrgApacheLuceneSearchSimilarMoreLikeThis *self, id<JavaUtilMap> termFreqMap, id<OrgApacheLuceneIndexTermFreqVector> vector) {
  IOSObjectArray *terms = [((id<OrgApacheLuceneIndexTermFreqVector>) nil_chk(vector)) getTerms];
  IOSIntArray *freqs = [vector getTermFrequencies];
  for (jint j = 0; j < ((IOSObjectArray *) nil_chk(terms))->size_; j++) {
    NSString *term = IOSObjectArray_Get(terms, j);
    if (OrgApacheLuceneSearchSimilarMoreLikeThis_isNoiseWordWithNSString_(self, term)) {
      continue;
    }
    OrgApacheLuceneSearchSimilarMoreLikeThis_Int *cnt = [((id<JavaUtilMap>) nil_chk(termFreqMap)) getWithId:term];
    if (cnt == nil) {
      cnt = new_OrgApacheLuceneSearchSimilarMoreLikeThis_Int_init();
      (void) [termFreqMap putWithId:term withId:cnt];
      cnt->x_ = IOSIntArray_Get(nil_chk(freqs), j);
    }
    else {
      cnt->x_ += IOSIntArray_Get(nil_chk(freqs), j);
    }
  }
}

void OrgApacheLuceneSearchSimilarMoreLikeThis_addTermFrequenciesWithJavaIoReader_withJavaUtilMap_withNSString_(OrgApacheLuceneSearchSimilarMoreLikeThis *self, JavaIoReader *r, id<JavaUtilMap> termFreqMap, NSString *fieldName) {
  OrgApacheLuceneAnalysisTokenStream *ts = [((OrgApacheLuceneAnalysisAnalyzer *) nil_chk(self->analyzer_)) reusableTokenStreamWithNSString:fieldName withJavaIoReader:r];
  jint tokenCount = 0;
  id<OrgApacheLuceneAnalysisTokenattributesCharTermAttribute> termAtt = ((id<OrgApacheLuceneAnalysisTokenattributesCharTermAttribute>) [((OrgApacheLuceneAnalysisTokenStream *) nil_chk(ts)) addAttributeWithIOSClass:OrgApacheLuceneAnalysisTokenattributesCharTermAttribute_class_()]);
  [ts reset];
  while ([ts incrementToken]) {
    NSString *word = [((id<OrgApacheLuceneAnalysisTokenattributesCharTermAttribute>) nil_chk(termAtt)) description];
    tokenCount++;
    if (tokenCount > self->maxNumTokensParsed_) {
      break;
    }
    if (OrgApacheLuceneSearchSimilarMoreLikeThis_isNoiseWordWithNSString_(self, word)) {
      continue;
    }
    OrgApacheLuceneSearchSimilarMoreLikeThis_Int *cnt = [((id<JavaUtilMap>) nil_chk(termFreqMap)) getWithId:word];
    if (cnt == nil) {
      (void) [termFreqMap putWithId:word withId:new_OrgApacheLuceneSearchSimilarMoreLikeThis_Int_init()];
    }
    else {
      cnt->x_++;
    }
  }
  [ts end];
  [ts close];
}

jboolean OrgApacheLuceneSearchSimilarMoreLikeThis_isNoiseWordWithNSString_(OrgApacheLuceneSearchSimilarMoreLikeThis *self, NSString *term) {
  jint len = [((NSString *) nil_chk(term)) java_length];
  if (self->minWordLen_ > 0 && len < self->minWordLen_) {
    return true;
  }
  if (self->maxWordLen_ > 0 && len > self->maxWordLen_) {
    return true;
  }
  if (self->stopWords_ != nil && [self->stopWords_ containsWithId:term]) {
    return true;
  }
  return false;
}

IOSObjectArray *OrgApacheLuceneSearchSimilarMoreLikeThis__Annotations$0() {
  return [IOSObjectArray newArrayWithObjects:(id[]){ create_JavaLangDeprecated() } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *OrgApacheLuceneSearchSimilarMoreLikeThis__Annotations$1() {
  return [IOSObjectArray newArrayWithObjects:(id[]){ create_JavaLangDeprecated() } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *OrgApacheLuceneSearchSimilarMoreLikeThis__Annotations$2() {
  return [IOSObjectArray newArrayWithObjects:(id[]){ create_JavaLangDeprecated() } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *OrgApacheLuceneSearchSimilarMoreLikeThis__Annotations$3() {
  return [IOSObjectArray newArrayWithObjects:(id[]){ create_JavaLangDeprecated() } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *OrgApacheLuceneSearchSimilarMoreLikeThis__Annotations$4() {
  return [IOSObjectArray newArrayWithObjects:(id[]){ create_JavaLangDeprecated() } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *OrgApacheLuceneSearchSimilarMoreLikeThis__Annotations$5() {
  return [IOSObjectArray newArrayWithObjects:(id[]){ create_JavaLangDeprecated() } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *OrgApacheLuceneSearchSimilarMoreLikeThis__Annotations$6() {
  return [IOSObjectArray newArrayWithObjects:(id[]){ create_JavaLangDeprecated() } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheLuceneSearchSimilarMoreLikeThis)

@implementation OrgApacheLuceneSearchSimilarMoreLikeThis_FreqQ

- (instancetype)initWithInt:(jint)s {
  OrgApacheLuceneSearchSimilarMoreLikeThis_FreqQ_initWithInt_(self, s);
  return self;
}

- (jboolean)lessThanWithId:(IOSObjectArray *)aa
                    withId:(IOSObjectArray *)bb {
  JavaLangFloat *fa = (JavaLangFloat *) cast_chk(IOSObjectArray_Get(nil_chk(aa), 2), [JavaLangFloat class]);
  JavaLangFloat *fb = (JavaLangFloat *) cast_chk(IOSObjectArray_Get(nil_chk(bb), 2), [JavaLangFloat class]);
  return [((JavaLangFloat *) nil_chk(fa)) floatValue] > [((JavaLangFloat *) nil_chk(fb)) floatValue];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, 0, -1, -1, -1, -1 },
    { NULL, "Z", 0x4, 1, 2, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithInt:);
  methods[1].selector = @selector(lessThanWithId:withId:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "I", "lessThan", "[LNSObject;[LNSObject;", "LOrgApacheLuceneSearchSimilarMoreLikeThis;", "Lorg/apache/lucene/util/PriorityQueue<[Ljava/lang/Object;>;" };
  static const J2ObjcClassInfo _OrgApacheLuceneSearchSimilarMoreLikeThis_FreqQ = { "FreqQ", "org.apache.lucene.search.similar", ptrTable, methods, NULL, 7, 0xa, 2, 0, 3, -1, -1, 4, -1 };
  return &_OrgApacheLuceneSearchSimilarMoreLikeThis_FreqQ;
}

@end

void OrgApacheLuceneSearchSimilarMoreLikeThis_FreqQ_initWithInt_(OrgApacheLuceneSearchSimilarMoreLikeThis_FreqQ *self, jint s) {
  OrgApacheLuceneUtilPriorityQueue_init(self);
  [self initialize__WithInt:s];
}

OrgApacheLuceneSearchSimilarMoreLikeThis_FreqQ *new_OrgApacheLuceneSearchSimilarMoreLikeThis_FreqQ_initWithInt_(jint s) {
  J2OBJC_NEW_IMPL(OrgApacheLuceneSearchSimilarMoreLikeThis_FreqQ, initWithInt_, s)
}

OrgApacheLuceneSearchSimilarMoreLikeThis_FreqQ *create_OrgApacheLuceneSearchSimilarMoreLikeThis_FreqQ_initWithInt_(jint s) {
  J2OBJC_CREATE_IMPL(OrgApacheLuceneSearchSimilarMoreLikeThis_FreqQ, initWithInt_, s)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheLuceneSearchSimilarMoreLikeThis_FreqQ)

@implementation OrgApacheLuceneSearchSimilarMoreLikeThis_Int

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  OrgApacheLuceneSearchSimilarMoreLikeThis_Int_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(init);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "x_", "I", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LOrgApacheLuceneSearchSimilarMoreLikeThis;" };
  static const J2ObjcClassInfo _OrgApacheLuceneSearchSimilarMoreLikeThis_Int = { "Int", "org.apache.lucene.search.similar", ptrTable, methods, fields, 7, 0xa, 1, 1, 0, -1, -1, -1, -1 };
  return &_OrgApacheLuceneSearchSimilarMoreLikeThis_Int;
}

@end

void OrgApacheLuceneSearchSimilarMoreLikeThis_Int_init(OrgApacheLuceneSearchSimilarMoreLikeThis_Int *self) {
  NSObject_init(self);
  self->x_ = 1;
}

OrgApacheLuceneSearchSimilarMoreLikeThis_Int *new_OrgApacheLuceneSearchSimilarMoreLikeThis_Int_init() {
  J2OBJC_NEW_IMPL(OrgApacheLuceneSearchSimilarMoreLikeThis_Int, init)
}

OrgApacheLuceneSearchSimilarMoreLikeThis_Int *create_OrgApacheLuceneSearchSimilarMoreLikeThis_Int_init() {
  J2OBJC_CREATE_IMPL(OrgApacheLuceneSearchSimilarMoreLikeThis_Int, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheLuceneSearchSimilarMoreLikeThis_Int)
