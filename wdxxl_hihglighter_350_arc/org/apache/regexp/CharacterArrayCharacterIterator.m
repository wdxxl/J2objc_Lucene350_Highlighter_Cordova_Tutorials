//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: jar:file:wdxxl_lucene_350_highlighter.jar!org/apache/regexp/CharacterArrayCharacterIterator.java
//

#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "java/lang/IndexOutOfBoundsException.h"
#include "org/apache/regexp/CharacterArrayCharacterIterator.h"

@interface OrgApacheRegexpCharacterArrayCharacterIterator () {
 @public
  IOSCharArray *src_;
  jint off_;
  jint len_;
}

@end

J2OBJC_FIELD_SETTER(OrgApacheRegexpCharacterArrayCharacterIterator, src_, IOSCharArray *)

@implementation OrgApacheRegexpCharacterArrayCharacterIterator

- (instancetype)initWithCharArray:(IOSCharArray *)src
                          withInt:(jint)off
                          withInt:(jint)len {
  OrgApacheRegexpCharacterArrayCharacterIterator_initWithCharArray_withInt_withInt_(self, src, off, len);
  return self;
}

- (NSString *)substringWithInt:(jint)beginIndex
                       withInt:(jint)endIndex {
  if (endIndex > len_) {
    @throw new_JavaLangIndexOutOfBoundsException_initWithNSString_(JreStrcat("$I$I", @"endIndex=", endIndex, @"; sequence size=", len_));
  }
  if (beginIndex < 0 || beginIndex > endIndex) {
    @throw new_JavaLangIndexOutOfBoundsException_initWithNSString_(JreStrcat("$I$I", @"beginIndex=", beginIndex, @"; endIndex=", endIndex));
  }
  return [NSString java_stringWithCharacters:src_ offset:off_ + beginIndex length:endIndex - beginIndex];
}

- (NSString *)substringWithInt:(jint)beginIndex {
  return [self substringWithInt:beginIndex withInt:len_];
}

- (jchar)charAtWithInt:(jint)pos {
  return IOSCharArray_Get(nil_chk(src_), off_ + pos);
}

- (jboolean)isEndWithInt:(jint)pos {
  return (pos >= len_);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, 1, 2, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, 1, 3, -1, -1, -1, -1 },
    { NULL, "C", 0x1, 4, 3, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, 5, 3, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithCharArray:withInt:withInt:);
  methods[1].selector = @selector(substringWithInt:withInt:);
  methods[2].selector = @selector(substringWithInt:);
  methods[3].selector = @selector(charAtWithInt:);
  methods[4].selector = @selector(isEndWithInt:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "src_", "[C", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "off_", "I", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "len_", "I", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "[CII", "substring", "II", "I", "charAt", "isEnd" };
  static const J2ObjcClassInfo _OrgApacheRegexpCharacterArrayCharacterIterator = { "CharacterArrayCharacterIterator", "org.apache.regexp", ptrTable, methods, fields, 7, 0x11, 5, 3, -1, -1, -1, -1, -1 };
  return &_OrgApacheRegexpCharacterArrayCharacterIterator;
}

@end

void OrgApacheRegexpCharacterArrayCharacterIterator_initWithCharArray_withInt_withInt_(OrgApacheRegexpCharacterArrayCharacterIterator *self, IOSCharArray *src, jint off, jint len) {
  NSObject_init(self);
  self->src_ = src;
  self->off_ = off;
  self->len_ = len;
}

OrgApacheRegexpCharacterArrayCharacterIterator *new_OrgApacheRegexpCharacterArrayCharacterIterator_initWithCharArray_withInt_withInt_(IOSCharArray *src, jint off, jint len) {
  J2OBJC_NEW_IMPL(OrgApacheRegexpCharacterArrayCharacterIterator, initWithCharArray_withInt_withInt_, src, off, len)
}

OrgApacheRegexpCharacterArrayCharacterIterator *create_OrgApacheRegexpCharacterArrayCharacterIterator_initWithCharArray_withInt_withInt_(IOSCharArray *src, jint off, jint len) {
  J2OBJC_CREATE_IMPL(OrgApacheRegexpCharacterArrayCharacterIterator, initWithCharArray_withInt_withInt_, src, off, len)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheRegexpCharacterArrayCharacterIterator)
