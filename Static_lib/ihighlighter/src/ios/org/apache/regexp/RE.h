//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: jar:file:wdxxl_lucene_350_highlighter.jar!org/apache/regexp/RE.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgApacheRegexpRE")
#ifdef RESTRICT_OrgApacheRegexpRE
#define INCLUDE_ALL_OrgApacheRegexpRE 0
#else
#define INCLUDE_ALL_OrgApacheRegexpRE 1
#endif
#undef RESTRICT_OrgApacheRegexpRE

#if !defined (OrgApacheRegexpRE_) && (INCLUDE_ALL_OrgApacheRegexpRE || defined(INCLUDE_OrgApacheRegexpRE))
#define OrgApacheRegexpRE_

#define RESTRICT_JavaIoSerializable 1
#define INCLUDE_JavaIoSerializable 1
#include "java/io/Serializable.h"

@class IOSIntArray;
@class IOSObjectArray;
@class OrgApacheRegexpREProgram;
@protocol OrgApacheRegexpCharacterIterator;

@interface OrgApacheRegexpRE : NSObject < JavaIoSerializable > {
 @public
  OrgApacheRegexpREProgram *program_;
  id<OrgApacheRegexpCharacterIterator> search_;
  jint matchFlags_;
  jint maxParen_;
  jint parenCount_;
  jint start0_;
  jint end0_;
  jint start1_;
  jint end1_;
  jint start2_;
  jint end2_;
  IOSIntArray *startn_;
  IOSIntArray *endn_;
  IOSIntArray *startBackref_;
  IOSIntArray *endBackref_;
}

#pragma mark Public

- (instancetype)init;

- (instancetype)initWithOrgApacheRegexpREProgram:(OrgApacheRegexpREProgram *)program;

- (instancetype)initWithOrgApacheRegexpREProgram:(OrgApacheRegexpREProgram *)program
                                         withInt:(jint)matchFlags;

- (instancetype)initWithNSString:(NSString *)pattern;

- (instancetype)initWithNSString:(NSString *)pattern
                         withInt:(jint)matchFlags;

- (jint)getMatchFlags;

- (NSString *)getParenWithInt:(jint)which;

- (jint)getParenCount;

- (jint)getParenEndWithInt:(jint)which;

- (jint)getParenLengthWithInt:(jint)which;

- (jint)getParenStartWithInt:(jint)which;

- (OrgApacheRegexpREProgram *)getProgram;

- (IOSObjectArray *)grepWithNSObjectArray:(IOSObjectArray *)search;

- (jboolean)matchWithOrgApacheRegexpCharacterIterator:(id<OrgApacheRegexpCharacterIterator>)search
                                              withInt:(jint)i;

- (jboolean)matchWithNSString:(NSString *)search;

- (jboolean)matchWithNSString:(NSString *)search
                      withInt:(jint)i;

- (void)setMatchFlagsWithInt:(jint)matchFlags;

- (void)setProgramWithOrgApacheRegexpREProgram:(OrgApacheRegexpREProgram *)program;

+ (NSString *)simplePatternToFullRegularExpressionWithNSString:(NSString *)pattern;

- (IOSObjectArray *)splitWithNSString:(NSString *)s;

- (NSString *)substWithNSString:(NSString *)substituteIn
                   withNSString:(NSString *)substitution;

- (NSString *)substWithNSString:(NSString *)substituteIn
                   withNSString:(NSString *)substitution
                        withInt:(jint)flags;

#pragma mark Protected

- (void)internalErrorWithNSString:(NSString *)s;

- (jboolean)matchAtWithInt:(jint)i;

- (jint)matchNodesWithInt:(jint)firstNode
                  withInt:(jint)lastNode
                  withInt:(jint)idxStart;

- (void)setParenEndWithInt:(jint)which
                   withInt:(jint)i;

- (void)setParenStartWithInt:(jint)which
                     withInt:(jint)i;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgApacheRegexpRE)

J2OBJC_FIELD_SETTER(OrgApacheRegexpRE, program_, OrgApacheRegexpREProgram *)
J2OBJC_FIELD_SETTER(OrgApacheRegexpRE, search_, id<OrgApacheRegexpCharacterIterator>)
J2OBJC_FIELD_SETTER(OrgApacheRegexpRE, startn_, IOSIntArray *)
J2OBJC_FIELD_SETTER(OrgApacheRegexpRE, endn_, IOSIntArray *)
J2OBJC_FIELD_SETTER(OrgApacheRegexpRE, startBackref_, IOSIntArray *)
J2OBJC_FIELD_SETTER(OrgApacheRegexpRE, endBackref_, IOSIntArray *)

inline jint OrgApacheRegexpRE_get_MATCH_NORMAL();
#define OrgApacheRegexpRE_MATCH_NORMAL 0
J2OBJC_STATIC_FIELD_CONSTANT(OrgApacheRegexpRE, MATCH_NORMAL, jint)

inline jint OrgApacheRegexpRE_get_MATCH_CASEINDEPENDENT();
#define OrgApacheRegexpRE_MATCH_CASEINDEPENDENT 1
J2OBJC_STATIC_FIELD_CONSTANT(OrgApacheRegexpRE, MATCH_CASEINDEPENDENT, jint)

inline jint OrgApacheRegexpRE_get_MATCH_MULTILINE();
#define OrgApacheRegexpRE_MATCH_MULTILINE 2
J2OBJC_STATIC_FIELD_CONSTANT(OrgApacheRegexpRE, MATCH_MULTILINE, jint)

inline jint OrgApacheRegexpRE_get_MATCH_SINGLELINE();
#define OrgApacheRegexpRE_MATCH_SINGLELINE 4
J2OBJC_STATIC_FIELD_CONSTANT(OrgApacheRegexpRE, MATCH_SINGLELINE, jint)

inline jchar OrgApacheRegexpRE_get_OP_END();
#define OrgApacheRegexpRE_OP_END 'E'
J2OBJC_STATIC_FIELD_CONSTANT(OrgApacheRegexpRE, OP_END, jchar)

inline jchar OrgApacheRegexpRE_get_OP_BOL();
#define OrgApacheRegexpRE_OP_BOL '^'
J2OBJC_STATIC_FIELD_CONSTANT(OrgApacheRegexpRE, OP_BOL, jchar)

inline jchar OrgApacheRegexpRE_get_OP_EOL();
#define OrgApacheRegexpRE_OP_EOL '$'
J2OBJC_STATIC_FIELD_CONSTANT(OrgApacheRegexpRE, OP_EOL, jchar)

inline jchar OrgApacheRegexpRE_get_OP_ANY();
#define OrgApacheRegexpRE_OP_ANY '.'
J2OBJC_STATIC_FIELD_CONSTANT(OrgApacheRegexpRE, OP_ANY, jchar)

inline jchar OrgApacheRegexpRE_get_OP_ANYOF();
#define OrgApacheRegexpRE_OP_ANYOF '['
J2OBJC_STATIC_FIELD_CONSTANT(OrgApacheRegexpRE, OP_ANYOF, jchar)

inline jchar OrgApacheRegexpRE_get_OP_BRANCH();
#define OrgApacheRegexpRE_OP_BRANCH '|'
J2OBJC_STATIC_FIELD_CONSTANT(OrgApacheRegexpRE, OP_BRANCH, jchar)

inline jchar OrgApacheRegexpRE_get_OP_ATOM();
#define OrgApacheRegexpRE_OP_ATOM 'A'
J2OBJC_STATIC_FIELD_CONSTANT(OrgApacheRegexpRE, OP_ATOM, jchar)

inline jchar OrgApacheRegexpRE_get_OP_STAR();
#define OrgApacheRegexpRE_OP_STAR '*'
J2OBJC_STATIC_FIELD_CONSTANT(OrgApacheRegexpRE, OP_STAR, jchar)

inline jchar OrgApacheRegexpRE_get_OP_PLUS();
#define OrgApacheRegexpRE_OP_PLUS '+'
J2OBJC_STATIC_FIELD_CONSTANT(OrgApacheRegexpRE, OP_PLUS, jchar)

inline jchar OrgApacheRegexpRE_get_OP_MAYBE();
#define OrgApacheRegexpRE_OP_MAYBE '?'
J2OBJC_STATIC_FIELD_CONSTANT(OrgApacheRegexpRE, OP_MAYBE, jchar)

inline jchar OrgApacheRegexpRE_get_OP_ESCAPE();
#define OrgApacheRegexpRE_OP_ESCAPE '\\'
J2OBJC_STATIC_FIELD_CONSTANT(OrgApacheRegexpRE, OP_ESCAPE, jchar)

inline jchar OrgApacheRegexpRE_get_OP_OPEN();
#define OrgApacheRegexpRE_OP_OPEN '('
J2OBJC_STATIC_FIELD_CONSTANT(OrgApacheRegexpRE, OP_OPEN, jchar)

inline jchar OrgApacheRegexpRE_get_OP_OPEN_CLUSTER();
#define OrgApacheRegexpRE_OP_OPEN_CLUSTER '<'
J2OBJC_STATIC_FIELD_CONSTANT(OrgApacheRegexpRE, OP_OPEN_CLUSTER, jchar)

inline jchar OrgApacheRegexpRE_get_OP_CLOSE();
#define OrgApacheRegexpRE_OP_CLOSE ')'
J2OBJC_STATIC_FIELD_CONSTANT(OrgApacheRegexpRE, OP_CLOSE, jchar)

inline jchar OrgApacheRegexpRE_get_OP_CLOSE_CLUSTER();
#define OrgApacheRegexpRE_OP_CLOSE_CLUSTER '>'
J2OBJC_STATIC_FIELD_CONSTANT(OrgApacheRegexpRE, OP_CLOSE_CLUSTER, jchar)

inline jchar OrgApacheRegexpRE_get_OP_BACKREF();
#define OrgApacheRegexpRE_OP_BACKREF '#'
J2OBJC_STATIC_FIELD_CONSTANT(OrgApacheRegexpRE, OP_BACKREF, jchar)

inline jchar OrgApacheRegexpRE_get_OP_GOTO();
#define OrgApacheRegexpRE_OP_GOTO 'G'
J2OBJC_STATIC_FIELD_CONSTANT(OrgApacheRegexpRE, OP_GOTO, jchar)

inline jchar OrgApacheRegexpRE_get_OP_NOTHING();
#define OrgApacheRegexpRE_OP_NOTHING 'N'
J2OBJC_STATIC_FIELD_CONSTANT(OrgApacheRegexpRE, OP_NOTHING, jchar)

inline jchar OrgApacheRegexpRE_get_OP_RELUCTANTSTAR();
#define OrgApacheRegexpRE_OP_RELUCTANTSTAR '8'
J2OBJC_STATIC_FIELD_CONSTANT(OrgApacheRegexpRE, OP_RELUCTANTSTAR, jchar)

inline jchar OrgApacheRegexpRE_get_OP_RELUCTANTPLUS();
#define OrgApacheRegexpRE_OP_RELUCTANTPLUS '='
J2OBJC_STATIC_FIELD_CONSTANT(OrgApacheRegexpRE, OP_RELUCTANTPLUS, jchar)

inline jchar OrgApacheRegexpRE_get_OP_RELUCTANTMAYBE();
#define OrgApacheRegexpRE_OP_RELUCTANTMAYBE '/'
J2OBJC_STATIC_FIELD_CONSTANT(OrgApacheRegexpRE, OP_RELUCTANTMAYBE, jchar)

inline jchar OrgApacheRegexpRE_get_OP_POSIXCLASS();
#define OrgApacheRegexpRE_OP_POSIXCLASS 'P'
J2OBJC_STATIC_FIELD_CONSTANT(OrgApacheRegexpRE, OP_POSIXCLASS, jchar)

inline jchar OrgApacheRegexpRE_get_E_ALNUM();
#define OrgApacheRegexpRE_E_ALNUM 'w'
J2OBJC_STATIC_FIELD_CONSTANT(OrgApacheRegexpRE, E_ALNUM, jchar)

inline jchar OrgApacheRegexpRE_get_E_NALNUM();
#define OrgApacheRegexpRE_E_NALNUM 'W'
J2OBJC_STATIC_FIELD_CONSTANT(OrgApacheRegexpRE, E_NALNUM, jchar)

inline jchar OrgApacheRegexpRE_get_E_BOUND();
#define OrgApacheRegexpRE_E_BOUND 'b'
J2OBJC_STATIC_FIELD_CONSTANT(OrgApacheRegexpRE, E_BOUND, jchar)

inline jchar OrgApacheRegexpRE_get_E_NBOUND();
#define OrgApacheRegexpRE_E_NBOUND 'B'
J2OBJC_STATIC_FIELD_CONSTANT(OrgApacheRegexpRE, E_NBOUND, jchar)

inline jchar OrgApacheRegexpRE_get_E_SPACE();
#define OrgApacheRegexpRE_E_SPACE 's'
J2OBJC_STATIC_FIELD_CONSTANT(OrgApacheRegexpRE, E_SPACE, jchar)

inline jchar OrgApacheRegexpRE_get_E_NSPACE();
#define OrgApacheRegexpRE_E_NSPACE 'S'
J2OBJC_STATIC_FIELD_CONSTANT(OrgApacheRegexpRE, E_NSPACE, jchar)

inline jchar OrgApacheRegexpRE_get_E_DIGIT();
#define OrgApacheRegexpRE_E_DIGIT 'd'
J2OBJC_STATIC_FIELD_CONSTANT(OrgApacheRegexpRE, E_DIGIT, jchar)

inline jchar OrgApacheRegexpRE_get_E_NDIGIT();
#define OrgApacheRegexpRE_E_NDIGIT 'D'
J2OBJC_STATIC_FIELD_CONSTANT(OrgApacheRegexpRE, E_NDIGIT, jchar)

inline jchar OrgApacheRegexpRE_get_POSIX_CLASS_ALNUM();
#define OrgApacheRegexpRE_POSIX_CLASS_ALNUM 'w'
J2OBJC_STATIC_FIELD_CONSTANT(OrgApacheRegexpRE, POSIX_CLASS_ALNUM, jchar)

inline jchar OrgApacheRegexpRE_get_POSIX_CLASS_ALPHA();
#define OrgApacheRegexpRE_POSIX_CLASS_ALPHA 'a'
J2OBJC_STATIC_FIELD_CONSTANT(OrgApacheRegexpRE, POSIX_CLASS_ALPHA, jchar)

inline jchar OrgApacheRegexpRE_get_POSIX_CLASS_BLANK();
#define OrgApacheRegexpRE_POSIX_CLASS_BLANK 'b'
J2OBJC_STATIC_FIELD_CONSTANT(OrgApacheRegexpRE, POSIX_CLASS_BLANK, jchar)

inline jchar OrgApacheRegexpRE_get_POSIX_CLASS_CNTRL();
#define OrgApacheRegexpRE_POSIX_CLASS_CNTRL 'c'
J2OBJC_STATIC_FIELD_CONSTANT(OrgApacheRegexpRE, POSIX_CLASS_CNTRL, jchar)

inline jchar OrgApacheRegexpRE_get_POSIX_CLASS_DIGIT();
#define OrgApacheRegexpRE_POSIX_CLASS_DIGIT 'd'
J2OBJC_STATIC_FIELD_CONSTANT(OrgApacheRegexpRE, POSIX_CLASS_DIGIT, jchar)

inline jchar OrgApacheRegexpRE_get_POSIX_CLASS_GRAPH();
#define OrgApacheRegexpRE_POSIX_CLASS_GRAPH 'g'
J2OBJC_STATIC_FIELD_CONSTANT(OrgApacheRegexpRE, POSIX_CLASS_GRAPH, jchar)

inline jchar OrgApacheRegexpRE_get_POSIX_CLASS_LOWER();
#define OrgApacheRegexpRE_POSIX_CLASS_LOWER 'l'
J2OBJC_STATIC_FIELD_CONSTANT(OrgApacheRegexpRE, POSIX_CLASS_LOWER, jchar)

inline jchar OrgApacheRegexpRE_get_POSIX_CLASS_PRINT();
#define OrgApacheRegexpRE_POSIX_CLASS_PRINT 'p'
J2OBJC_STATIC_FIELD_CONSTANT(OrgApacheRegexpRE, POSIX_CLASS_PRINT, jchar)

inline jchar OrgApacheRegexpRE_get_POSIX_CLASS_PUNCT();
#define OrgApacheRegexpRE_POSIX_CLASS_PUNCT '!'
J2OBJC_STATIC_FIELD_CONSTANT(OrgApacheRegexpRE, POSIX_CLASS_PUNCT, jchar)

inline jchar OrgApacheRegexpRE_get_POSIX_CLASS_SPACE();
#define OrgApacheRegexpRE_POSIX_CLASS_SPACE 's'
J2OBJC_STATIC_FIELD_CONSTANT(OrgApacheRegexpRE, POSIX_CLASS_SPACE, jchar)

inline jchar OrgApacheRegexpRE_get_POSIX_CLASS_UPPER();
#define OrgApacheRegexpRE_POSIX_CLASS_UPPER 'u'
J2OBJC_STATIC_FIELD_CONSTANT(OrgApacheRegexpRE, POSIX_CLASS_UPPER, jchar)

inline jchar OrgApacheRegexpRE_get_POSIX_CLASS_XDIGIT();
#define OrgApacheRegexpRE_POSIX_CLASS_XDIGIT 'x'
J2OBJC_STATIC_FIELD_CONSTANT(OrgApacheRegexpRE, POSIX_CLASS_XDIGIT, jchar)

inline jchar OrgApacheRegexpRE_get_POSIX_CLASS_JSTART();
#define OrgApacheRegexpRE_POSIX_CLASS_JSTART 'j'
J2OBJC_STATIC_FIELD_CONSTANT(OrgApacheRegexpRE, POSIX_CLASS_JSTART, jchar)

inline jchar OrgApacheRegexpRE_get_POSIX_CLASS_JPART();
#define OrgApacheRegexpRE_POSIX_CLASS_JPART 'k'
J2OBJC_STATIC_FIELD_CONSTANT(OrgApacheRegexpRE, POSIX_CLASS_JPART, jchar)

inline jint OrgApacheRegexpRE_get_maxNode();
#define OrgApacheRegexpRE_maxNode 65536
J2OBJC_STATIC_FIELD_CONSTANT(OrgApacheRegexpRE, maxNode, jint)

inline jint OrgApacheRegexpRE_get_MAX_PAREN();
#define OrgApacheRegexpRE_MAX_PAREN 16
J2OBJC_STATIC_FIELD_CONSTANT(OrgApacheRegexpRE, MAX_PAREN, jint)

inline jint OrgApacheRegexpRE_get_offsetOpcode();
#define OrgApacheRegexpRE_offsetOpcode 0
J2OBJC_STATIC_FIELD_CONSTANT(OrgApacheRegexpRE, offsetOpcode, jint)

inline jint OrgApacheRegexpRE_get_offsetOpdata();
#define OrgApacheRegexpRE_offsetOpdata 1
J2OBJC_STATIC_FIELD_CONSTANT(OrgApacheRegexpRE, offsetOpdata, jint)

inline jint OrgApacheRegexpRE_get_offsetNext();
#define OrgApacheRegexpRE_offsetNext 2
J2OBJC_STATIC_FIELD_CONSTANT(OrgApacheRegexpRE, offsetNext, jint)

inline jint OrgApacheRegexpRE_get_nodeSize();
#define OrgApacheRegexpRE_nodeSize 3
J2OBJC_STATIC_FIELD_CONSTANT(OrgApacheRegexpRE, nodeSize, jint)

inline jint OrgApacheRegexpRE_get_REPLACE_ALL();
#define OrgApacheRegexpRE_REPLACE_ALL 0
J2OBJC_STATIC_FIELD_CONSTANT(OrgApacheRegexpRE, REPLACE_ALL, jint)

inline jint OrgApacheRegexpRE_get_REPLACE_FIRSTONLY();
#define OrgApacheRegexpRE_REPLACE_FIRSTONLY 1
J2OBJC_STATIC_FIELD_CONSTANT(OrgApacheRegexpRE, REPLACE_FIRSTONLY, jint)

inline jint OrgApacheRegexpRE_get_REPLACE_BACKREFERENCES();
#define OrgApacheRegexpRE_REPLACE_BACKREFERENCES 2
J2OBJC_STATIC_FIELD_CONSTANT(OrgApacheRegexpRE, REPLACE_BACKREFERENCES, jint)

FOUNDATION_EXPORT void OrgApacheRegexpRE_initWithNSString_(OrgApacheRegexpRE *self, NSString *pattern);

FOUNDATION_EXPORT OrgApacheRegexpRE *new_OrgApacheRegexpRE_initWithNSString_(NSString *pattern) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgApacheRegexpRE *create_OrgApacheRegexpRE_initWithNSString_(NSString *pattern);

FOUNDATION_EXPORT void OrgApacheRegexpRE_initWithNSString_withInt_(OrgApacheRegexpRE *self, NSString *pattern, jint matchFlags);

FOUNDATION_EXPORT OrgApacheRegexpRE *new_OrgApacheRegexpRE_initWithNSString_withInt_(NSString *pattern, jint matchFlags) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgApacheRegexpRE *create_OrgApacheRegexpRE_initWithNSString_withInt_(NSString *pattern, jint matchFlags);

FOUNDATION_EXPORT void OrgApacheRegexpRE_initWithOrgApacheRegexpREProgram_withInt_(OrgApacheRegexpRE *self, OrgApacheRegexpREProgram *program, jint matchFlags);

FOUNDATION_EXPORT OrgApacheRegexpRE *new_OrgApacheRegexpRE_initWithOrgApacheRegexpREProgram_withInt_(OrgApacheRegexpREProgram *program, jint matchFlags) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgApacheRegexpRE *create_OrgApacheRegexpRE_initWithOrgApacheRegexpREProgram_withInt_(OrgApacheRegexpREProgram *program, jint matchFlags);

FOUNDATION_EXPORT void OrgApacheRegexpRE_initWithOrgApacheRegexpREProgram_(OrgApacheRegexpRE *self, OrgApacheRegexpREProgram *program);

FOUNDATION_EXPORT OrgApacheRegexpRE *new_OrgApacheRegexpRE_initWithOrgApacheRegexpREProgram_(OrgApacheRegexpREProgram *program) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgApacheRegexpRE *create_OrgApacheRegexpRE_initWithOrgApacheRegexpREProgram_(OrgApacheRegexpREProgram *program);

FOUNDATION_EXPORT void OrgApacheRegexpRE_init(OrgApacheRegexpRE *self);

FOUNDATION_EXPORT OrgApacheRegexpRE *new_OrgApacheRegexpRE_init() NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgApacheRegexpRE *create_OrgApacheRegexpRE_init();

FOUNDATION_EXPORT NSString *OrgApacheRegexpRE_simplePatternToFullRegularExpressionWithNSString_(NSString *pattern);

J2OBJC_TYPE_LITERAL_HEADER(OrgApacheRegexpRE)

#endif

#pragma pop_macro("INCLUDE_ALL_OrgApacheRegexpRE")
