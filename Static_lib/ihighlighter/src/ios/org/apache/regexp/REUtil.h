//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: jar:file:wdxxl_lucene_350_highlighter.jar!org/apache/regexp/REUtil.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgApacheRegexpREUtil")
#ifdef RESTRICT_OrgApacheRegexpREUtil
#define INCLUDE_ALL_OrgApacheRegexpREUtil 0
#else
#define INCLUDE_ALL_OrgApacheRegexpREUtil 1
#endif
#undef RESTRICT_OrgApacheRegexpREUtil

#if !defined (OrgApacheRegexpREUtil_) && (INCLUDE_ALL_OrgApacheRegexpREUtil || defined(INCLUDE_OrgApacheRegexpREUtil))
#define OrgApacheRegexpREUtil_

@class OrgApacheRegexpRE;

@interface OrgApacheRegexpREUtil : NSObject

#pragma mark Public

- (instancetype)init;

+ (OrgApacheRegexpRE *)createREWithNSString:(NSString *)expression;

+ (OrgApacheRegexpRE *)createREWithNSString:(NSString *)expression
                                    withInt:(jint)matchFlags;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgApacheRegexpREUtil)

FOUNDATION_EXPORT void OrgApacheRegexpREUtil_init(OrgApacheRegexpREUtil *self);

FOUNDATION_EXPORT OrgApacheRegexpREUtil *new_OrgApacheRegexpREUtil_init() NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgApacheRegexpREUtil *create_OrgApacheRegexpREUtil_init();

FOUNDATION_EXPORT OrgApacheRegexpRE *OrgApacheRegexpREUtil_createREWithNSString_withInt_(NSString *expression, jint matchFlags);

FOUNDATION_EXPORT OrgApacheRegexpRE *OrgApacheRegexpREUtil_createREWithNSString_(NSString *expression);

J2OBJC_TYPE_LITERAL_HEADER(OrgApacheRegexpREUtil)

#endif

#pragma pop_macro("INCLUDE_ALL_OrgApacheRegexpREUtil")
