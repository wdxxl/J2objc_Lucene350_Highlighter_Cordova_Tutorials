//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: jar:file:wdxxl_lucene_350_highlighter.jar!org/apache/lucene/search/vectorhighlight/FieldPhraseList.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgApacheLuceneSearchVectorhighlightFieldPhraseList")
#ifdef RESTRICT_OrgApacheLuceneSearchVectorhighlightFieldPhraseList
#define INCLUDE_ALL_OrgApacheLuceneSearchVectorhighlightFieldPhraseList 0
#else
#define INCLUDE_ALL_OrgApacheLuceneSearchVectorhighlightFieldPhraseList 1
#endif
#undef RESTRICT_OrgApacheLuceneSearchVectorhighlightFieldPhraseList

#if !defined (OrgApacheLuceneSearchVectorhighlightFieldPhraseList_) && (INCLUDE_ALL_OrgApacheLuceneSearchVectorhighlightFieldPhraseList || defined(INCLUDE_OrgApacheLuceneSearchVectorhighlightFieldPhraseList))
#define OrgApacheLuceneSearchVectorhighlightFieldPhraseList_

@class JavaUtilLinkedList;
@class OrgApacheLuceneSearchVectorhighlightFieldPhraseList_WeightedPhraseInfo;
@class OrgApacheLuceneSearchVectorhighlightFieldQuery;
@class OrgApacheLuceneSearchVectorhighlightFieldTermStack;

@interface OrgApacheLuceneSearchVectorhighlightFieldPhraseList : NSObject {
 @public
  JavaUtilLinkedList *phraseList_;
}

#pragma mark Public

- (instancetype)initWithOrgApacheLuceneSearchVectorhighlightFieldTermStack:(OrgApacheLuceneSearchVectorhighlightFieldTermStack *)fieldTermStack
                        withOrgApacheLuceneSearchVectorhighlightFieldQuery:(OrgApacheLuceneSearchVectorhighlightFieldQuery *)fieldQuery;

- (instancetype)initWithOrgApacheLuceneSearchVectorhighlightFieldTermStack:(OrgApacheLuceneSearchVectorhighlightFieldTermStack *)fieldTermStack
                        withOrgApacheLuceneSearchVectorhighlightFieldQuery:(OrgApacheLuceneSearchVectorhighlightFieldQuery *)fieldQuery
                                                                   withInt:(jint)phraseLimit;

#pragma mark Package-Private

- (void)addIfNoOverlapWithOrgApacheLuceneSearchVectorhighlightFieldPhraseList_WeightedPhraseInfo:(OrgApacheLuceneSearchVectorhighlightFieldPhraseList_WeightedPhraseInfo *)wpi;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgApacheLuceneSearchVectorhighlightFieldPhraseList)

J2OBJC_FIELD_SETTER(OrgApacheLuceneSearchVectorhighlightFieldPhraseList, phraseList_, JavaUtilLinkedList *)

FOUNDATION_EXPORT void OrgApacheLuceneSearchVectorhighlightFieldPhraseList_initWithOrgApacheLuceneSearchVectorhighlightFieldTermStack_withOrgApacheLuceneSearchVectorhighlightFieldQuery_(OrgApacheLuceneSearchVectorhighlightFieldPhraseList *self, OrgApacheLuceneSearchVectorhighlightFieldTermStack *fieldTermStack, OrgApacheLuceneSearchVectorhighlightFieldQuery *fieldQuery);

FOUNDATION_EXPORT OrgApacheLuceneSearchVectorhighlightFieldPhraseList *new_OrgApacheLuceneSearchVectorhighlightFieldPhraseList_initWithOrgApacheLuceneSearchVectorhighlightFieldTermStack_withOrgApacheLuceneSearchVectorhighlightFieldQuery_(OrgApacheLuceneSearchVectorhighlightFieldTermStack *fieldTermStack, OrgApacheLuceneSearchVectorhighlightFieldQuery *fieldQuery) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgApacheLuceneSearchVectorhighlightFieldPhraseList *create_OrgApacheLuceneSearchVectorhighlightFieldPhraseList_initWithOrgApacheLuceneSearchVectorhighlightFieldTermStack_withOrgApacheLuceneSearchVectorhighlightFieldQuery_(OrgApacheLuceneSearchVectorhighlightFieldTermStack *fieldTermStack, OrgApacheLuceneSearchVectorhighlightFieldQuery *fieldQuery);

FOUNDATION_EXPORT void OrgApacheLuceneSearchVectorhighlightFieldPhraseList_initWithOrgApacheLuceneSearchVectorhighlightFieldTermStack_withOrgApacheLuceneSearchVectorhighlightFieldQuery_withInt_(OrgApacheLuceneSearchVectorhighlightFieldPhraseList *self, OrgApacheLuceneSearchVectorhighlightFieldTermStack *fieldTermStack, OrgApacheLuceneSearchVectorhighlightFieldQuery *fieldQuery, jint phraseLimit);

FOUNDATION_EXPORT OrgApacheLuceneSearchVectorhighlightFieldPhraseList *new_OrgApacheLuceneSearchVectorhighlightFieldPhraseList_initWithOrgApacheLuceneSearchVectorhighlightFieldTermStack_withOrgApacheLuceneSearchVectorhighlightFieldQuery_withInt_(OrgApacheLuceneSearchVectorhighlightFieldTermStack *fieldTermStack, OrgApacheLuceneSearchVectorhighlightFieldQuery *fieldQuery, jint phraseLimit) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgApacheLuceneSearchVectorhighlightFieldPhraseList *create_OrgApacheLuceneSearchVectorhighlightFieldPhraseList_initWithOrgApacheLuceneSearchVectorhighlightFieldTermStack_withOrgApacheLuceneSearchVectorhighlightFieldQuery_withInt_(OrgApacheLuceneSearchVectorhighlightFieldTermStack *fieldTermStack, OrgApacheLuceneSearchVectorhighlightFieldQuery *fieldQuery, jint phraseLimit);

J2OBJC_TYPE_LITERAL_HEADER(OrgApacheLuceneSearchVectorhighlightFieldPhraseList)

#endif

#if !defined (OrgApacheLuceneSearchVectorhighlightFieldPhraseList_WeightedPhraseInfo_) && (INCLUDE_ALL_OrgApacheLuceneSearchVectorhighlightFieldPhraseList || defined(INCLUDE_OrgApacheLuceneSearchVectorhighlightFieldPhraseList_WeightedPhraseInfo))
#define OrgApacheLuceneSearchVectorhighlightFieldPhraseList_WeightedPhraseInfo_

@class JavaUtilLinkedList;
@protocol JavaUtilList;

@interface OrgApacheLuceneSearchVectorhighlightFieldPhraseList_WeightedPhraseInfo : NSObject {
 @public
  NSString *text_;
  id<JavaUtilList> termsOffsets_;
  jfloat boost_;
  jint seqnum_;
}

#pragma mark Public

- (instancetype)initWithJavaUtilLinkedList:(JavaUtilLinkedList *)terms
                                 withFloat:(jfloat)boost;

- (instancetype)initWithJavaUtilLinkedList:(JavaUtilLinkedList *)terms
                                 withFloat:(jfloat)boost
                                   withInt:(jint)number;

- (jint)getEndOffset;

- (jint)getStartOffset;

- (jboolean)isOffsetOverlapWithOrgApacheLuceneSearchVectorhighlightFieldPhraseList_WeightedPhraseInfo:(OrgApacheLuceneSearchVectorhighlightFieldPhraseList_WeightedPhraseInfo *)other;

- (NSString *)description;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgApacheLuceneSearchVectorhighlightFieldPhraseList_WeightedPhraseInfo)

J2OBJC_FIELD_SETTER(OrgApacheLuceneSearchVectorhighlightFieldPhraseList_WeightedPhraseInfo, text_, NSString *)
J2OBJC_FIELD_SETTER(OrgApacheLuceneSearchVectorhighlightFieldPhraseList_WeightedPhraseInfo, termsOffsets_, id<JavaUtilList>)

FOUNDATION_EXPORT void OrgApacheLuceneSearchVectorhighlightFieldPhraseList_WeightedPhraseInfo_initWithJavaUtilLinkedList_withFloat_(OrgApacheLuceneSearchVectorhighlightFieldPhraseList_WeightedPhraseInfo *self, JavaUtilLinkedList *terms, jfloat boost);

FOUNDATION_EXPORT OrgApacheLuceneSearchVectorhighlightFieldPhraseList_WeightedPhraseInfo *new_OrgApacheLuceneSearchVectorhighlightFieldPhraseList_WeightedPhraseInfo_initWithJavaUtilLinkedList_withFloat_(JavaUtilLinkedList *terms, jfloat boost) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgApacheLuceneSearchVectorhighlightFieldPhraseList_WeightedPhraseInfo *create_OrgApacheLuceneSearchVectorhighlightFieldPhraseList_WeightedPhraseInfo_initWithJavaUtilLinkedList_withFloat_(JavaUtilLinkedList *terms, jfloat boost);

FOUNDATION_EXPORT void OrgApacheLuceneSearchVectorhighlightFieldPhraseList_WeightedPhraseInfo_initWithJavaUtilLinkedList_withFloat_withInt_(OrgApacheLuceneSearchVectorhighlightFieldPhraseList_WeightedPhraseInfo *self, JavaUtilLinkedList *terms, jfloat boost, jint number);

FOUNDATION_EXPORT OrgApacheLuceneSearchVectorhighlightFieldPhraseList_WeightedPhraseInfo *new_OrgApacheLuceneSearchVectorhighlightFieldPhraseList_WeightedPhraseInfo_initWithJavaUtilLinkedList_withFloat_withInt_(JavaUtilLinkedList *terms, jfloat boost, jint number) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgApacheLuceneSearchVectorhighlightFieldPhraseList_WeightedPhraseInfo *create_OrgApacheLuceneSearchVectorhighlightFieldPhraseList_WeightedPhraseInfo_initWithJavaUtilLinkedList_withFloat_withInt_(JavaUtilLinkedList *terms, jfloat boost, jint number);

J2OBJC_TYPE_LITERAL_HEADER(OrgApacheLuceneSearchVectorhighlightFieldPhraseList_WeightedPhraseInfo)

#endif

#if !defined (OrgApacheLuceneSearchVectorhighlightFieldPhraseList_WeightedPhraseInfo_Toffs_) && (INCLUDE_ALL_OrgApacheLuceneSearchVectorhighlightFieldPhraseList || defined(INCLUDE_OrgApacheLuceneSearchVectorhighlightFieldPhraseList_WeightedPhraseInfo_Toffs))
#define OrgApacheLuceneSearchVectorhighlightFieldPhraseList_WeightedPhraseInfo_Toffs_

@interface OrgApacheLuceneSearchVectorhighlightFieldPhraseList_WeightedPhraseInfo_Toffs : NSObject {
 @public
  jint startOffset_;
  jint endOffset_;
}

#pragma mark Public

- (instancetype)initWithInt:(jint)startOffset
                    withInt:(jint)endOffset;

- (jint)getEndOffset;

- (jint)getStartOffset;

- (void)setEndOffsetWithInt:(jint)endOffset;

- (NSString *)description;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgApacheLuceneSearchVectorhighlightFieldPhraseList_WeightedPhraseInfo_Toffs)

FOUNDATION_EXPORT void OrgApacheLuceneSearchVectorhighlightFieldPhraseList_WeightedPhraseInfo_Toffs_initWithInt_withInt_(OrgApacheLuceneSearchVectorhighlightFieldPhraseList_WeightedPhraseInfo_Toffs *self, jint startOffset, jint endOffset);

FOUNDATION_EXPORT OrgApacheLuceneSearchVectorhighlightFieldPhraseList_WeightedPhraseInfo_Toffs *new_OrgApacheLuceneSearchVectorhighlightFieldPhraseList_WeightedPhraseInfo_Toffs_initWithInt_withInt_(jint startOffset, jint endOffset) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgApacheLuceneSearchVectorhighlightFieldPhraseList_WeightedPhraseInfo_Toffs *create_OrgApacheLuceneSearchVectorhighlightFieldPhraseList_WeightedPhraseInfo_Toffs_initWithInt_withInt_(jint startOffset, jint endOffset);

J2OBJC_TYPE_LITERAL_HEADER(OrgApacheLuceneSearchVectorhighlightFieldPhraseList_WeightedPhraseInfo_Toffs)

#endif

#pragma pop_macro("INCLUDE_ALL_OrgApacheLuceneSearchVectorhighlightFieldPhraseList")
